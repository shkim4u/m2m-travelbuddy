module "docker_build" {
  source = "terraform-aws-modules/lambda/aws//modules/docker-build"

  create_ecr_repo = true
  ecr_repo = "amazon-bedrock-chatbot-api-lambda"

  use_image_tag = true
  image_tag = "latest"

  # Workaround the weird non-empty directory causing "Error: dockerfile parse error on line 1: unknown instruction: PaxHeaders.0/lambda_function.py0000000000000000000000000000002100000000000013711"
  # Why the hack the Terraform docker provider causes docker build error like above?
  # Null resource를 사용하는 것으로 전환.
  # - https://github.com/kreuzwerker/terraform-provider-docker/issues/439
  # - https://github.com/moby/moby/issues/41496
  # - https://github.com/kreuzwerker/terraform-provider-docker/issues/439

  # Relative from the directory of terraform project root.
#  source_path = "/Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/amazon-bedrock-chatbot-terraform/lambda-functions/empty-dir"
#  source_path = "lambda-functions/amazon-bedrock-chatbot-api"
#  source_path = "lambda-functions/empty-dir"
#  source_path = "lambda-functions/amazon-bedrock-chatbot-api"
#  source_path = "${path.module}/lambda-function.tar"
#  source_path = "lambda-functions/amazon-bedrock-chatbot-api/archive.tar.gz"
  source_path = "lambda-functions/amazon-bedrock-chatbot-api"
  # Relative from the directory of terraform project root.
#  docker_file_path = "/Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/amazon-bedrock-chatbot-terraform/lambda-functions/amazon-bedrock-chatbot-api/Dockerfile"
#  docker_file_path = "${path.module}/Dockerfile"
#  docker_file_path = "lambda-functions/amazon-bedrock-chatbot-api/Dockerfile"
#  docker_file_path = "Dockerfile"
  platform = "linux/x86_64"
#  platform = "linux/amd64"
  build_args = {
    FOO = "bar"
  }
}
