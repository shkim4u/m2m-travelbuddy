<?xml version="1.0" encoding="utf-8"?>
<BugCollection sequence='0' release='' analysisTimestamp='1699533515846' version='4.8.0' timestamp='1699533478000'><Project projectName='RichesBank'><Jar>/app/target/classes</Jar><AuxClasspathEntry>/root/.m2/repository/apache-commons/commons-dbcp/1.2.1/commons-dbcp-1.2.1.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/mysql/mysql-connector-java/3.0.14/mysql-connector-java-3.0.14.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/naming/naming-factory-dbcp/1.0.0/naming-factory-dbcp-1.0.0.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/javax/activation/1.1/activation-1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/objectweb/asm/3.1/asm-3.1.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/net/sf/cglib-nodep/1.0/cglib-nodep-1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/apache/commons-beanutils/1.6/commons-beanutils-1.6.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/apache/commons-collections/2.1/commons-collections-2.1.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/apache/commons-digester/1.8/commons-digester-1.8.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/apache/commons-fileupload/1.2.1/commons-fileupload-1.2.1.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/apache/commons-io/1.3.2/commons-io-1.3.2.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/apache/commons-logging-api/1.1/commons-logging-api-1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/dom4j/1.4/dom4j-1.4.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/net/sf/ehcache/0.7/ehcache-0.7.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/jvnet/fastinfoset/1.2.2/fastinfoset-1.2.2.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/freemarker/freemarker/2.3.8/freemarker-2.3.8.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/net/sf/hibernate2/1.0/hibernate2-1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/hsqldb/2.3.2/hsqldb-2.3.2.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/sun/net/http/20070405/http-20070405.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/codehaus/jackson-core-asl/1.1.1/jackson-core-asl-1.1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/javax/jaxb-api/2.1/jaxb-api-2.1.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/com/sun/jaxb-impl/2.1.10/jaxb-impl-2.1.10.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/com/sun/jaxb-xjc/1.0/jaxb-xjc-1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/jdom/1.0/jdom-1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/com/sun/jersey-bundle/1.3/jersey-bundle-1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/com/sun/jersey-multipart/1.3/jersey-multipart-1.3.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/codehaus/jettison/1.1/jettison-1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/javax/jsr311-api/1.1.1/jsr311-api-1.1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/javax/servlet/jsp/jstl/1.1.2/jstl-1.1.2.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/javax/transaction/jta/1.0/jta-1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/javax/mail/1.4/mail-1.4.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/ognl/ognl/2.6.11/ognl-2.6.11.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/com/sun/rome/0.9/rome-0.9.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/javax/servlet-api/2.4/servlet-api-2.4.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/apache/standard/1.1.2/standard-1.1.2.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/javax/xml/stax-api/1.0.2/stax-api-1.0.2.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/apache/struts/1.1/struts-1.1.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/apache/struts/struts2-core/2.0.11/struts2-core-2.0.11.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/apache/struts/struts2-tiles-plugin/2.0.11/struts2-tiles-plugin-2.0.11.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/apache/tiles/tiles-api/2.0.5/tiles-api-2.0.5.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/apache/tiles/tiles-core/2.0.5/tiles-core-2.0.5.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/apache/tiles/tiles-jsp/2.0.5/tiles-jsp-2.0.5.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/com/sun/ws/wadl2java/1.0/wadl2java-1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/jvnet/ws/wadl-cmdline/1.0/wadl-cmdline-1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/jvnet/ws/wadl-core/1.0/wadl-core-1.0.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/com/opensymphony/xwork/2.0.4/xwork-2.0.4.jar</AuxClasspathEntry><AuxClasspathEntry>/root/.m2/repository/org/json/json/20180130/json-20180130.jar</AuxClasspathEntry><Plugin id='com.h3xstream.findsecbugs' enabled='true'></Plugin><SrcDir>/app/src/main/java</SrcDir><WrkDir>/app/target</WrkDir></Project><BugInstance instanceOccurrenceNum='0' instanceHash='36f864300a97fed2fd264676b45bdfb4' cweid='353' rank='10' abbrev='CIPINT' category='SECURITY' priority='1' type='CIPHER_INTEGRITY' instanceOccurrenceMax='0'><ShortMessage>Cipher with no integrity</ShortMessage><LongMessage>The cipher does not provide data integrity</LongMessage><Class classname='com.fortify.samples.riches.PerformCheck' primary='true'><SourceLine classname='com.fortify.samples.riches.PerformCheck' start='10' end='101' sourcepath='com/fortify/samples/riches/PerformCheck.java' sourcefile='PerformCheck.java'><Message>At PerformCheck.java:[lines 10-101]</Message></SourceLine><Message>In class com.fortify.samples.riches.PerformCheck</Message></Class><Method isStatic='false' classname='com.fortify.samples.riches.PerformCheck' signature='()Ljava/lang/String;' name='execute' primary='true'><SourceLine endBytecode='332' classname='com.fortify.samples.riches.PerformCheck' start='21' end='49' sourcepath='com/fortify/samples/riches/PerformCheck.java' sourcefile='PerformCheck.java' startBytecode='0'></SourceLine><Message>In method com.fortify.samples.riches.PerformCheck.execute()</Message></Method><SourceLine endBytecode='22' classname='com.fortify.samples.riches.PerformCheck' start='24' end='24' sourcepath='com/fortify/samples/riches/PerformCheck.java' sourcefile='PerformCheck.java' startBytecode='22' primary='true'><Message>At PerformCheck.java:[line 24]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f52de5f4521b471e13eecf057b0576e5' cweid='321' rank='10' abbrev='SECHCK' category='SECURITY' priority='1' type='HARD_CODE_KEY' instanceOccurrenceMax='0'><ShortMessage>Hard coded key</ShortMessage><LongMessage>Hard coded cryptographic key found</LongMessage><Class classname='com.fortify.samples.riches.PerformCheck' primary='true'><SourceLine classname='com.fortify.samples.riches.PerformCheck' start='10' end='101' sourcepath='com/fortify/samples/riches/PerformCheck.java' sourcefile='PerformCheck.java'><Message>At PerformCheck.java:[lines 10-101]</Message></SourceLine><Message>In class com.fortify.samples.riches.PerformCheck</Message></Class><Method isStatic='false' classname='com.fortify.samples.riches.PerformCheck' signature='()Ljava/lang/String;' name='execute' primary='true'><SourceLine endBytecode='332' classname='com.fortify.samples.riches.PerformCheck' start='21' end='49' sourcepath='com/fortify/samples/riches/PerformCheck.java' sourcefile='PerformCheck.java' startBytecode='0'></SourceLine><Message>In method com.fortify.samples.riches.PerformCheck.execute()</Message></Method><SourceLine endBytecode='16' classname='com.fortify.samples.riches.PerformCheck' start='23' end='23' sourcepath='com/fortify/samples/riches/PerformCheck.java' sourcefile='PerformCheck.java' startBytecode='16' primary='true'><Message>At PerformCheck.java:[line 23]</Message></SourceLine><Method isStatic='false' role='METHOD_CALLED' classname='javax.crypto.spec.SecretKeySpec' signature='([BLjava/lang/String;)V' name='&lt;init&gt;'><SourceLine endBytecode='131' classname='javax.crypto.spec.SecretKeySpec' start='91' end='100' sourcepath='javax/crypto/spec/SecretKeySpec.java' sourcefile='SecretKeySpec.java' startBytecode='0'></SourceLine><Message>Called method new javax.crypto.spec.SecretKeySpec(byte[], String)</Message></Method><Int role='Hard coded parameter number (in reverse order) is' value='2'><Message>Hard coded parameter number (in reverse order) is 2</Message></Int><Method isStatic='false' role='METHOD_RETURN_VALUE_OF' classname='java.lang.String' signature='()[B' name='getBytes'><SourceLine endBytecode='37' classname='java.lang.String' start='958' end='958' sourcepath='java/lang/String.java' sourcefile='String.java' startBytecode='0'></SourceLine><Message>Return value of String.getBytes() of type byte[]</Message></Method></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='108b518596cb9b48ce2b2ca60f6acf8b' cweid='330' rank='12' abbrev='SECPR' category='SECURITY' priority='2' type='PREDICTABLE_RANDOM' instanceOccurrenceMax='0'><ShortMessage>Predictable pseudorandom number generator</ShortMessage><LongMessage>This random generator (java.lang.Math.random()) is predictable</LongMessage><Class classname='com.fortify.samples.riches.PerformRegistration' primary='true'><SourceLine classname='com.fortify.samples.riches.PerformRegistration' start='9' end='219' sourcepath='com/fortify/samples/riches/PerformRegistration.java' sourcefile='PerformRegistration.java'><Message>At PerformRegistration.java:[lines 9-219]</Message></SourceLine><Message>In class com.fortify.samples.riches.PerformRegistration</Message></Class><Method isStatic='true' classname='com.fortify.samples.riches.PerformRegistration' signature='()Ljava/lang/String;' name='getNewAcctno' primary='true'><SourceLine endBytecode='142' classname='com.fortify.samples.riches.PerformRegistration' start='100' end='107' sourcepath='com/fortify/samples/riches/PerformRegistration.java' sourcefile='PerformRegistration.java' startBytecode='0'></SourceLine><Message>In method com.fortify.samples.riches.PerformRegistration.getNewAcctno()</Message></Method><SourceLine endBytecode='26' classname='com.fortify.samples.riches.PerformRegistration' start='104' end='104' sourcepath='com/fortify/samples/riches/PerformRegistration.java' sourcefile='PerformRegistration.java' startBytecode='26' primary='true'><Message>At PerformRegistration.java:[line 104]</Message></SourceLine><String value='java.lang.Math.random()'><Message>Value java.lang.Math.random()</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='5198423f5570c474236d859361971499' cweid='330' rank='12' abbrev='SECPR' category='SECURITY' priority='2' type='PREDICTABLE_RANDOM' instanceOccurrenceMax='0'><ShortMessage>Predictable pseudorandom number generator</ShortMessage><LongMessage>This random generator (java.lang.Math.random()) is predictable</LongMessage><Class classname='com.fortify.samples.riches.PerformRegistration' primary='true'><SourceLine classname='com.fortify.samples.riches.PerformRegistration' start='9' end='219' sourcepath='com/fortify/samples/riches/PerformRegistration.java' sourcefile='PerformRegistration.java'><Message>At PerformRegistration.java:[lines 9-219]</Message></SourceLine><Message>In class com.fortify.samples.riches.PerformRegistration</Message></Class><Method isStatic='true' classname='com.fortify.samples.riches.PerformRegistration' signature='()Ljava/lang/String;' name='getNewCCN' primary='true'><SourceLine endBytecode='163' classname='com.fortify.samples.riches.PerformRegistration' start='112' end='123' sourcepath='com/fortify/samples/riches/PerformRegistration.java' sourcefile='PerformRegistration.java' startBytecode='0'></SourceLine><Message>In method com.fortify.samples.riches.PerformRegistration.getNewCCN()</Message></Method><SourceLine endBytecode='29' classname='com.fortify.samples.riches.PerformRegistration' start='119' end='119' sourcepath='com/fortify/samples/riches/PerformRegistration.java' sourcefile='PerformRegistration.java' startBytecode='29' primary='true'><Message>At PerformRegistration.java:[line 119]</Message></SourceLine><String value='java.lang.Math.random()'><Message>Value java.lang.Math.random()</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6cf1d7e2434a92a96c459185c7e79ab2' cweid='353' rank='10' abbrev='CIPINT' category='SECURITY' priority='1' type='CIPHER_INTEGRITY' instanceOccurrenceMax='1'><ShortMessage>Cipher with no integrity</ShortMessage><LongMessage>The cipher does not provide data integrity</LongMessage><Class classname='com.fortify.samples.riches.PerformTransfer' primary='true'><SourceLine classname='com.fortify.samples.riches.PerformTransfer' start='9' end='79' sourcepath='com/fortify/samples/riches/PerformTransfer.java' sourcefile='PerformTransfer.java'><Message>At PerformTransfer.java:[lines 9-79]</Message></SourceLine><Message>In class com.fortify.samples.riches.PerformTransfer</Message></Class><Method isStatic='false' classname='com.fortify.samples.riches.PerformTransfer' signature='()Ljava/lang/String;' name='execute' primary='true'><SourceLine endBytecode='416' classname='com.fortify.samples.riches.PerformTransfer' start='17' end='54' sourcepath='com/fortify/samples/riches/PerformTransfer.java' sourcefile='PerformTransfer.java' startBytecode='0'></SourceLine><Message>In method com.fortify.samples.riches.PerformTransfer.execute()</Message></Method><SourceLine endBytecode='105' classname='com.fortify.samples.riches.PerformTransfer' start='39' end='39' sourcepath='com/fortify/samples/riches/PerformTransfer.java' sourcefile='PerformTransfer.java' startBytecode='105' primary='true'><Message>At PerformTransfer.java:[line 39]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='1' instanceHash='6cf1d7e2434a92a96c459185c7e79ab2' cweid='353' rank='10' abbrev='CIPINT' category='SECURITY' priority='1' type='CIPHER_INTEGRITY' instanceOccurrenceMax='1'><ShortMessage>Cipher with no integrity</ShortMessage><LongMessage>The cipher does not provide data integrity</LongMessage><Class classname='com.fortify.samples.riches.PerformTransfer' primary='true'><SourceLine classname='com.fortify.samples.riches.PerformTransfer' start='9' end='79' sourcepath='com/fortify/samples/riches/PerformTransfer.java' sourcefile='PerformTransfer.java'><Message>At PerformTransfer.java:[lines 9-79]</Message></SourceLine><Message>In class com.fortify.samples.riches.PerformTransfer</Message></Class><Method isStatic='false' classname='com.fortify.samples.riches.PerformTransfer' signature='()Ljava/lang/String;' name='execute' primary='true'><SourceLine endBytecode='416' classname='com.fortify.samples.riches.PerformTransfer' start='17' end='54' sourcepath='com/fortify/samples/riches/PerformTransfer.java' sourcefile='PerformTransfer.java' startBytecode='0'></SourceLine><Message>In method com.fortify.samples.riches.PerformTransfer.execute()</Message></Method><SourceLine endBytecode='140' classname='com.fortify.samples.riches.PerformTransfer' start='47' end='47' sourcepath='com/fortify/samples/riches/PerformTransfer.java' sourcefile='PerformTransfer.java' startBytecode='140' primary='true'><Message>At PerformTransfer.java:[line 47]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e072bce9494a78c63df788bb071b4f53' cweid='327' rank='10' abbrev='SECECB' category='SECURITY' priority='1' type='ECB_MODE' instanceOccurrenceMax='0'><ShortMessage>ECB mode is insecure</ShortMessage><LongMessage>The cipher uses ECB mode, which provides poor confidentiality for encrypted data</LongMessage><Class classname='com.fortify.samples.riches.PerformTransfer' primary='true'><SourceLine classname='com.fortify.samples.riches.PerformTransfer' start='9' end='79' sourcepath='com/fortify/samples/riches/PerformTransfer.java' sourcefile='PerformTransfer.java'><Message>At PerformTransfer.java:[lines 9-79]</Message></SourceLine><Message>In class com.fortify.samples.riches.PerformTransfer</Message></Class><Method isStatic='false' classname='com.fortify.samples.riches.PerformTransfer' signature='()Ljava/lang/String;' name='execute' primary='true'><SourceLine endBytecode='416' classname='com.fortify.samples.riches.PerformTransfer' start='17' end='54' sourcepath='com/fortify/samples/riches/PerformTransfer.java' sourcefile='PerformTransfer.java' startBytecode='0'></SourceLine><Message>In method com.fortify.samples.riches.PerformTransfer.execute()</Message></Method><SourceLine endBytecode='105' classname='com.fortify.samples.riches.PerformTransfer' start='39' end='39' sourcepath='com/fortify/samples/riches/PerformTransfer.java' sourcefile='PerformTransfer.java' startBytecode='105' primary='true'><Message>At PerformTransfer.java:[line 39]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e4fafad1b8f5b156cdd04faa07f6f411' cweid='321' rank='10' abbrev='SECHCK' category='SECURITY' priority='1' type='HARD_CODE_KEY' instanceOccurrenceMax='0'><ShortMessage>Hard coded key</ShortMessage><LongMessage>Hard coded cryptographic key found</LongMessage><Class classname='com.fortify.samples.riches.PerformTransfer' primary='true'><SourceLine classname='com.fortify.samples.riches.PerformTransfer' start='9' end='79' sourcepath='com/fortify/samples/riches/PerformTransfer.java' sourcefile='PerformTransfer.java'><Message>At PerformTransfer.java:[lines 9-79]</Message></SourceLine><Message>In class com.fortify.samples.riches.PerformTransfer</Message></Class><Method isStatic='false' classname='com.fortify.samples.riches.PerformTransfer' signature='()Ljava/lang/String;' name='execute' primary='true'><SourceLine endBytecode='416' classname='com.fortify.samples.riches.PerformTransfer' start='17' end='54' sourcepath='com/fortify/samples/riches/PerformTransfer.java' sourcefile='PerformTransfer.java' startBytecode='0'></SourceLine><Message>In method com.fortify.samples.riches.PerformTransfer.execute()</Message></Method><SourceLine endBytecode='99' classname='com.fortify.samples.riches.PerformTransfer' start='38' end='38' sourcepath='com/fortify/samples/riches/PerformTransfer.java' sourcefile='PerformTransfer.java' startBytecode='99' primary='true'><Message>At PerformTransfer.java:[line 38]</Message></SourceLine><Method isStatic='false' role='METHOD_CALLED' classname='javax.crypto.spec.SecretKeySpec' signature='([BLjava/lang/String;)V' name='&lt;init&gt;'><SourceLine endBytecode='131' classname='javax.crypto.spec.SecretKeySpec' start='91' end='100' sourcepath='javax/crypto/spec/SecretKeySpec.java' sourcefile='SecretKeySpec.java' startBytecode='0'></SourceLine><Message>Called method new javax.crypto.spec.SecretKeySpec(byte[], String)</Message></Method><Int role='Hard coded parameter number (in reverse order) is' value='2'><Message>Hard coded parameter number (in reverse order) is 2</Message></Int><String value='1'><Message>Value 1</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e56283a1875a68e1947e8cdd65fe2bb5' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='com.fortify.samples.riches.model.LocationService' primary='true'><SourceLine classname='com.fortify.samples.riches.model.LocationService' start='16' end='164' sourcepath='com/fortify/samples/riches/model/LocationService.java' sourcefile='LocationService.java'><Message>At LocationService.java:[lines 16-164]</Message></SourceLine><Message>In class com.fortify.samples.riches.model.LocationService</Message></Class><Method isStatic='true' classname='com.fortify.samples.riches.model.LocationService' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;' name='findAtmByAddress' primary='true'><SourceLine endBytecode='423' classname='com.fortify.samples.riches.model.LocationService' start='124' end='144' sourcepath='com/fortify/samples/riches/model/LocationService.java' sourcefile='LocationService.java' startBytecode='0'></SourceLine><Message>In method com.fortify.samples.riches.model.LocationService.findAtmByAddress(String, String, String)</Message></Method><SourceLine endBytecode='77' classname='com.fortify.samples.riches.model.LocationService' start='133' end='133' sourcepath='com/fortify/samples/riches/model/LocationService.java' sourcefile='LocationService.java' startBytecode='77' primary='true'><Message>At LocationService.java:[line 133]</Message></SourceLine><String role='Sink method' value='java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;'><Message>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/fortify/samples/riches/model/LocationService.findAtmByAddress(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; parameter 1'><Message>Unknown source com/fortify/samples/riches/model/LocationService.findAtmByAddress(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; parameter 1</Message></String><String role='Unknown source' value='com/fortify/samples/riches/model/LocationService.findAtmByAddress(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; parameter 2'><Message>Unknown source com/fortify/samples/riches/model/LocationService.findAtmByAddress(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; parameter 2</Message></String><String role='Unknown source' value='com/fortify/samples/riches/model/LocationService.findAtmByAddress(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; parameter 0'><Message>Unknown source com/fortify/samples/riches/model/LocationService.findAtmByAddress(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; parameter 0</Message></String><SourceLine endBytecode='85' classname='com.fortify.samples.riches.FindLocations' start='32' end='32' sourcepath='com/fortify/samples/riches/FindLocations.java' sourcefile='FindLocations.java' startBytecode='85'><Message>At FindLocations.java:[line 32]</Message></SourceLine><SourceLine endBytecode='43' classname='com.fortify.samples.riches.model.LocationService' start='131' end='131' sourcepath='com/fortify/samples/riches/model/LocationService.java' sourcefile='LocationService.java' startBytecode='43'><Message>At LocationService.java:[line 131]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='da41811fb3e3d04fa66311d0f1ac0e71' cweid='89' rank='12' abbrev='SECSQLIJDBC' category='SECURITY' priority='2' type='SQL_INJECTION_JDBC' instanceOccurrenceMax='0'><ShortMessage>Potential JDBC Injection</ShortMessage><LongMessage>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</LongMessage><Class classname='com.fortify.samples.riches.model.LocationService' primary='true'><SourceLine classname='com.fortify.samples.riches.model.LocationService' start='16' end='164' sourcepath='com/fortify/samples/riches/model/LocationService.java' sourcefile='LocationService.java'><Message>At LocationService.java:[lines 16-164]</Message></SourceLine><Message>In class com.fortify.samples.riches.model.LocationService</Message></Class><Method isStatic='true' classname='com.fortify.samples.riches.model.LocationService' signature='(Ljava/lang/String;)Ljava/util/List;' name='findByZip' primary='true'><SourceLine endBytecode='371' classname='com.fortify.samples.riches.model.LocationService' start='96' end='116' sourcepath='com/fortify/samples/riches/model/LocationService.java' sourcefile='LocationService.java' startBytecode='0'></SourceLine><Message>In method com.fortify.samples.riches.model.LocationService.findByZip(String)</Message></Method><SourceLine endBytecode='48' classname='com.fortify.samples.riches.model.LocationService' start='104' end='104' sourcepath='com/fortify/samples/riches/model/LocationService.java' sourcefile='LocationService.java' startBytecode='48' primary='true'><Message>At LocationService.java:[line 104]</Message></SourceLine><String role='Sink method' value='java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;'><Message>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/fortify/samples/riches/model/LocationService.findByZip(Ljava/lang/String;)Ljava/util/List; parameter 0'><Message>Unknown source com/fortify/samples/riches/model/LocationService.findByZip(Ljava/lang/String;)Ljava/util/List; parameter 0</Message></String><SourceLine endBytecode='183' classname='com.fortify.samples.riches.FindLocations' start='50' end='50' sourcepath='com/fortify/samples/riches/FindLocations.java' sourcefile='FindLocations.java' startBytecode='183'><Message>At FindLocations.java:[line 50]</Message></SourceLine><SourceLine endBytecode='32' classname='com.fortify.samples.riches.model.LocationService' start='103' end='103' sourcepath='com/fortify/samples/riches/model/LocationService.java' sourcefile='LocationService.java' startBytecode='32'><Message>At LocationService.java:[line 103]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='70e25518dcc20e2cd303e7630bdca71a' cweid='89' rank='10' abbrev='SQL' category='SECURITY' priority='1' type='SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE' instanceOccurrenceMax='0'><ShortMessage>Nonconstant string passed to execute or addBatch method on an SQL statement</ShortMessage><LongMessage>com.fortify.samples.riches.model.LocationService.findAtmByAddress(String, String, String) passes a nonconstant String to an execute or addBatch method on an SQL statement</LongMessage><Class classname='com.fortify.samples.riches.model.LocationService' primary='true'><SourceLine classname='com.fortify.samples.riches.model.LocationService' start='16' end='164' sourcepath='com/fortify/samples/riches/model/LocationService.java' sourcefile='LocationService.java'><Message>At LocationService.java:[lines 16-164]</Message></SourceLine><Message>In class com.fortify.samples.riches.model.LocationService</Message></Class><Method isStatic='true' classname='com.fortify.samples.riches.model.LocationService' signature='(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;' name='findAtmByAddress' primary='true'><SourceLine endBytecode='78' classname='com.fortify.samples.riches.model.LocationService' start='124' end='144' sourcepath='com/fortify/samples/riches/model/LocationService.java' sourcefile='LocationService.java' startBytecode='0'></SourceLine><Message>In method com.fortify.samples.riches.model.LocationService.findAtmByAddress(String, String, String)</Message></Method><SourceLine endBytecode='77' classname='com.fortify.samples.riches.model.LocationService' start='133' end='133' sourcepath='com/fortify/samples/riches/model/LocationService.java' sourcefile='LocationService.java' startBytecode='77' primary='true'><Message>At LocationService.java:[line 133]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='28c4aec2144f69f2528bbc4b45dd3940' cweid='89' rank='10' abbrev='SQL' category='SECURITY' priority='1' type='SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING' instanceOccurrenceMax='0'><ShortMessage>A prepared statement is generated from a nonconstant String</ShortMessage><LongMessage>A prepared statement is generated from a nonconstant String in com.fortify.samples.riches.model.LocationService.findByZip(String)</LongMessage><Class classname='com.fortify.samples.riches.model.LocationService' primary='true'><SourceLine classname='com.fortify.samples.riches.model.LocationService' start='16' end='164' sourcepath='com/fortify/samples/riches/model/LocationService.java' sourcefile='LocationService.java'><Message>At LocationService.java:[lines 16-164]</Message></SourceLine><Message>In class com.fortify.samples.riches.model.LocationService</Message></Class><Method isStatic='true' classname='com.fortify.samples.riches.model.LocationService' signature='(Ljava/lang/String;)Ljava/util/List;' name='findByZip' primary='true'><SourceLine endBytecode='70' classname='com.fortify.samples.riches.model.LocationService' start='96' end='116' sourcepath='com/fortify/samples/riches/model/LocationService.java' sourcefile='LocationService.java' startBytecode='0'></SourceLine><Message>In method com.fortify.samples.riches.model.LocationService.findByZip(String)</Message></Method><SourceLine endBytecode='48' classname='com.fortify.samples.riches.model.LocationService' start='104' end='104' sourcepath='com/fortify/samples/riches/model/LocationService.java' sourcefile='LocationService.java' startBytecode='48' primary='true'><Message>At LocationService.java:[line 104]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e8cf337d678f5621c490d09d5bd537d0' cweid='78' rank='12' abbrev='SECCI' category='SECURITY' priority='2' type='COMMAND_INJECTION' instanceOccurrenceMax='0'><ShortMessage>Potential Command Injection</ShortMessage><LongMessage>This usage of java/lang/Runtime.exec([Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection</LongMessage><Class classname='com.fortify.samples.riches.oper.SendMessage' primary='true'><SourceLine classname='com.fortify.samples.riches.oper.SendMessage' start='11' end='160' sourcepath='com/fortify/samples/riches/oper/SendMessage.java' sourcefile='SendMessage.java'><Message>At SendMessage.java:[lines 11-160]</Message></SourceLine><Message>In class com.fortify.samples.riches.oper.SendMessage</Message></Class><Method isStatic='false' classname='com.fortify.samples.riches.oper.SendMessage' signature='([Ljava/lang/String;)Ljava/lang/String;' name='sendMail' primary='true'><SourceLine endBytecode='450' classname='com.fortify.samples.riches.oper.SendMessage' start='68' end='106' sourcepath='com/fortify/samples/riches/oper/SendMessage.java' sourcefile='SendMessage.java' startBytecode='0'></SourceLine><Message>In method com.fortify.samples.riches.oper.SendMessage.sendMail(String[])</Message></Method><SourceLine endBytecode='59' classname='com.fortify.samples.riches.oper.SendMessage' start='83' end='83' sourcepath='com/fortify/samples/riches/oper/SendMessage.java' sourcefile='SendMessage.java' startBytecode='59' primary='true'><Message>At SendMessage.java:[line 83]</Message></SourceLine><String role='Sink method' value='java/lang/Runtime.exec([Ljava/lang/String;)Ljava/lang/Process;'><Message>Sink method java/lang/Runtime.exec([Ljava/lang/String;)Ljava/lang/Process;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/fortify/samples/riches/oper/SendMessage.sendMail([Ljava/lang/String;)Ljava/lang/String; parameter 0'><Message>Unknown source com/fortify/samples/riches/oper/SendMessage.sendMail([Ljava/lang/String;)Ljava/lang/String; parameter 0</Message></String><SourceLine endBytecode='19' classname='com.fortify.samples.riches.oper.SendMessage' start='23' end='23' sourcepath='com/fortify/samples/riches/oper/SendMessage.java' sourcefile='SendMessage.java' startBytecode='19'><Message>At SendMessage.java:[line 23]</Message></SourceLine><SourceLine endBytecode='25' classname='com.fortify.samples.riches.oper.SendMessage' start='24' end='24' sourcepath='com/fortify/samples/riches/oper/SendMessage.java' sourcefile='SendMessage.java' startBytecode='25'><Message>At SendMessage.java:[line 24]</Message></SourceLine><SourceLine endBytecode='120' classname='com.fortify.samples.riches.oper.SendMessage' start='52' end='52' sourcepath='com/fortify/samples/riches/oper/SendMessage.java' sourcefile='SendMessage.java' startBytecode='120'><Message>At SendMessage.java:[line 52]</Message></SourceLine><SourceLine endBytecode='277' classname='com.fortify.samples.riches.oper.SendMessage' start='60' end='60' sourcepath='com/fortify/samples/riches/oper/SendMessage.java' sourcefile='SendMessage.java' startBytecode='277'><Message>At SendMessage.java:[line 60]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='288139240a486c68867f4ff1bfa3ffd7' cweid='78' rank='12' abbrev='SECCI' category='SECURITY' priority='2' type='COMMAND_INJECTION' instanceOccurrenceMax='0'><ShortMessage>Potential Command Injection</ShortMessage><LongMessage>This usage of java/lang/Runtime.exec([Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection</LongMessage><Class classname='com.fortify.samples.riches.oper.SendNewsletter' primary='true'><SourceLine classname='com.fortify.samples.riches.oper.SendNewsletter' start='12' end='127' sourcepath='com/fortify/samples/riches/oper/SendNewsletter.java' sourcefile='SendNewsletter.java'><Message>At SendNewsletter.java:[lines 12-127]</Message></SourceLine><Message>In class com.fortify.samples.riches.oper.SendNewsletter</Message></Class><Method isStatic='false' classname='com.fortify.samples.riches.oper.SendNewsletter' signature='([Ljava/lang/String;)Ljava/lang/String;' name='sendMail' primary='true'><SourceLine endBytecode='440' classname='com.fortify.samples.riches.oper.SendNewsletter' start='55' end='84' sourcepath='com/fortify/samples/riches/oper/SendNewsletter.java' sourcefile='SendNewsletter.java' startBytecode='0'></SourceLine><Message>In method com.fortify.samples.riches.oper.SendNewsletter.sendMail(String[])</Message></Method><SourceLine endBytecode='17' classname='com.fortify.samples.riches.oper.SendNewsletter' start='61' end='61' sourcepath='com/fortify/samples/riches/oper/SendNewsletter.java' sourcefile='SendNewsletter.java' startBytecode='17' primary='true'><Message>At SendNewsletter.java:[line 61]</Message></SourceLine><String role='Sink method' value='java/lang/Runtime.exec([Ljava/lang/String;)Ljava/lang/Process;'><Message>Sink method java/lang/Runtime.exec([Ljava/lang/String;)Ljava/lang/Process;</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/fortify/samples/riches/oper/SendNewsletter.sendMail([Ljava/lang/String;)Ljava/lang/String; parameter 0'><Message>Unknown source com/fortify/samples/riches/oper/SendNewsletter.sendMail([Ljava/lang/String;)Ljava/lang/String; parameter 0</Message></String><SourceLine endBytecode='1' classname='com.fortify.samples.riches.oper.SendNewsletter' start='19' end='19' sourcepath='com/fortify/samples/riches/oper/SendNewsletter.java' sourcefile='SendNewsletter.java' startBytecode='1'><Message>At SendNewsletter.java:[line 19]</Message></SourceLine><SourceLine endBytecode='7' classname='com.fortify.samples.riches.oper.SendNewsletter' start='20' end='20' sourcepath='com/fortify/samples/riches/oper/SendNewsletter.java' sourcefile='SendNewsletter.java' startBytecode='7'><Message>At SendNewsletter.java:[line 20]</Message></SourceLine><SourceLine endBytecode='120' classname='com.fortify.samples.riches.oper.SendNewsletter' start='39' end='39' sourcepath='com/fortify/samples/riches/oper/SendNewsletter.java' sourcefile='SendNewsletter.java' startBytecode='120'><Message>At SendNewsletter.java:[line 39]</Message></SourceLine><SourceLine endBytecode='245' classname='com.fortify.samples.riches.oper.SendNewsletter' start='47' end='47' sourcepath='com/fortify/samples/riches/oper/SendNewsletter.java' sourcefile='SendNewsletter.java' startBytecode='245'><Message>At SendNewsletter.java:[line 47]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='61f66c0e6cab07c91b20669d9a847116' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='com.fortify.samples.riches.oper.UploadProfilePicture' primary='true'><SourceLine classname='com.fortify.samples.riches.oper.UploadProfilePicture' start='15' end='66' sourcepath='com/fortify/samples/riches/oper/UploadProfilePicture.java' sourcefile='UploadProfilePicture.java'><Message>At UploadProfilePicture.java:[lines 15-66]</Message></SourceLine><Message>In class com.fortify.samples.riches.oper.UploadProfilePicture</Message></Class><Method isStatic='false' classname='com.fortify.samples.riches.oper.UploadProfilePicture' signature='()Ljava/lang/String;' name='execute' primary='true'><SourceLine endBytecode='380' classname='com.fortify.samples.riches.oper.UploadProfilePicture' start='41' end='66' sourcepath='com/fortify/samples/riches/oper/UploadProfilePicture.java' sourcefile='UploadProfilePicture.java' startBytecode='0'></SourceLine><Message>In method com.fortify.samples.riches.oper.UploadProfilePicture.execute()</Message></Method><SourceLine endBytecode='125' classname='com.fortify.samples.riches.oper.UploadProfilePicture' start='55' end='55' sourcepath='com/fortify/samples/riches/oper/UploadProfilePicture.java' sourcefile='UploadProfilePicture.java' startBytecode='125' primary='true'><Message>At UploadProfilePicture.java:[line 55]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/fortify/samples/riches/oper/UploadProfilePicture.new_filename'><Message>Unknown source com/fortify/samples/riches/oper/UploadProfilePicture.new_filename</Message></String><SourceLine endBytecode='122' classname='com.fortify.samples.riches.oper.UploadProfilePicture' start='55' end='55' sourcepath='com/fortify/samples/riches/oper/UploadProfilePicture.java' sourcefile='UploadProfilePicture.java' startBytecode='122'><Message>At UploadProfilePicture.java:[line 55]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='f4d43002486da4dd6e6bb0643dc16462' cweid='611' rank='12' abbrev='SECXXEDOC' category='SECURITY' priority='2' type='XXE_DOCUMENT' instanceOccurrenceMax='0'><ShortMessage>XML parsing vulnerable to XXE (DocumentBuilder)</ShortMessage><LongMessage>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</LongMessage><Class classname='com.fortify.samples.riches.restful.XMLUtil' primary='true'><SourceLine classname='com.fortify.samples.riches.restful.XMLUtil' start='23' end='171' sourcepath='com/fortify/samples/riches/restful/XMLUtil.java' sourcefile='XMLUtil.java'><Message>At XMLUtil.java:[lines 23-171]</Message></SourceLine><Message>In class com.fortify.samples.riches.restful.XMLUtil</Message></Class><Method isStatic='true' classname='com.fortify.samples.riches.restful.XMLUtil' signature='(Ljava/lang/String;)Lorg/w3c/dom/Document;' name='getDocument' primary='true'><SourceLine endBytecode='198' classname='com.fortify.samples.riches.restful.XMLUtil' start='31' end='45' sourcepath='com/fortify/samples/riches/restful/XMLUtil.java' sourcefile='XMLUtil.java' startBytecode='0'></SourceLine><Message>In method com.fortify.samples.riches.restful.XMLUtil.getDocument(String)</Message></Method><SourceLine endBytecode='28' classname='com.fortify.samples.riches.restful.XMLUtil' start='33' end='33' sourcepath='com/fortify/samples/riches/restful/XMLUtil.java' sourcefile='XMLUtil.java' startBytecode='28' primary='true'><Message>At XMLUtil.java:[line 33]</Message></SourceLine><String value='DocumentBuilder.parse(...)'><Message>Value DocumentBuilder.parse(...)</Message></String></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='6ef9ae6a7a7eed765003dd54730349d1' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='com.fortify.samples.riches.webservices.BannerAdClient' primary='true'><SourceLine classname='com.fortify.samples.riches.webservices.BannerAdClient' start='9' end='47' sourcepath='com/fortify/samples/riches/webservices/BannerAdClient.java' sourcefile='BannerAdClient.java'><Message>At BannerAdClient.java:[lines 9-47]</Message></SourceLine><Message>In class com.fortify.samples.riches.webservices.BannerAdClient</Message></Class><Method isStatic='true' classname='com.fortify.samples.riches.webservices.BannerAdClient' signature='([Ljava/lang/String;)V' name='main' primary='true'><SourceLine endBytecode='330' classname='com.fortify.samples.riches.webservices.BannerAdClient' start='30' end='47' sourcepath='com/fortify/samples/riches/webservices/BannerAdClient.java' sourcefile='BannerAdClient.java' startBytecode='0'></SourceLine><Message>In method com.fortify.samples.riches.webservices.BannerAdClient.main(String[])</Message></Method><SourceLine endBytecode='69' classname='com.fortify.samples.riches.webservices.BannerAdClient' start='36' end='36' sourcepath='com/fortify/samples/riches/webservices/BannerAdClient.java' sourcefile='BannerAdClient.java' startBytecode='69' primary='true'><Message>At BannerAdClient.java:[line 36]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='java/io/File.getName()Ljava/lang/String;'><Message>Unknown source java/io/File.getName()Ljava/lang/String;</Message></String><SourceLine endBytecode='63' classname='com.fortify.samples.riches.webservices.BannerAdClient' start='36' end='36' sourcepath='com/fortify/samples/riches/webservices/BannerAdClient.java' sourcefile='BannerAdClient.java' startBytecode='63'><Message>At BannerAdClient.java:[line 36]</Message></SourceLine></BugInstance><BugInstance instanceOccurrenceNum='0' instanceHash='e15239663af75924d577e0f688c174e6' cweid='22' rank='12' abbrev='SECPTI' category='SECURITY' priority='2' type='PATH_TRAVERSAL_IN' instanceOccurrenceMax='0'><ShortMessage>Potential Path Traversal (file read)</ShortMessage><LongMessage>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</LongMessage><Class classname='com.fortify.samples.riches.webservices.BannerAdServer' primary='true'><SourceLine classname='com.fortify.samples.riches.webservices.BannerAdServer' start='8' end='36' sourcepath='com/fortify/samples/riches/webservices/BannerAdServer.java' sourcefile='BannerAdServer.java'><Message>At BannerAdServer.java:[lines 8-36]</Message></SourceLine><Message>In class com.fortify.samples.riches.webservices.BannerAdServer</Message></Class><Method isStatic='false' classname='com.fortify.samples.riches.webservices.BannerAdServer' signature='(Ljava/lang/String;)Ljava/io/File;' name='retrieveBannerAd' primary='true'><SourceLine endBytecode='95' classname='com.fortify.samples.riches.webservices.BannerAdServer' start='15' end='16' sourcepath='com/fortify/samples/riches/webservices/BannerAdServer.java' sourcefile='BannerAdServer.java' startBytecode='0'></SourceLine><Message>In method com.fortify.samples.riches.webservices.BannerAdServer.retrieveBannerAd(String)</Message></Method><SourceLine endBytecode='24' classname='com.fortify.samples.riches.webservices.BannerAdServer' start='15' end='15' sourcepath='com/fortify/samples/riches/webservices/BannerAdServer.java' sourcefile='BannerAdServer.java' startBytecode='24' primary='true'><Message>At BannerAdServer.java:[line 15]</Message></SourceLine><String role='Sink method' value='java/io/File.&lt;init&gt;(Ljava/lang/String;)V'><Message>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V</Message></String><String role='Sink parameter' value='0'><Message>Sink parameter 0</Message></String><String role='Unknown source' value='com/fortify/samples/riches/webservices/BannerAdServer.retrieveBannerAd(Ljava/lang/String;)Ljava/io/File; parameter 0'><Message>Unknown source com/fortify/samples/riches/webservices/BannerAdServer.retrieveBannerAd(Ljava/lang/String;)Ljava/io/File; parameter 0</Message></String><String role='Method usage' value='not detected'><Message>Method usage not detected</Message></String><SourceLine endBytecode='18' classname='com.fortify.samples.riches.webservices.BannerAdServer' start='15' end='15' sourcepath='com/fortify/samples/riches/webservices/BannerAdServer.java' sourcefile='BannerAdServer.java' startBytecode='18'><Message>At BannerAdServer.java:[line 15]</Message></SourceLine></BugInstance><BugCategory category='SECURITY'><Description>Security</Description></BugCategory><BugPattern cweid='89' abbrev='SECSQLIJDBC' category='SECURITY' type='SQL_INJECTION_JDBC'><ShortDescription>Potential JDBC Injection</ShortDescription><Details>
            
&lt;p&gt;
The input values included in SQL queries need to be passed in safely.
Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.
&lt;/p&gt;

&lt;p&gt;
    &lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;br/&gt;
    &lt;pre&gt;Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;b&gt;Solution:&lt;/b&gt;&lt;br/&gt;
    &lt;pre&gt;Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;

&lt;b&gt;References (JDBC)&lt;/b&gt;&lt;br/&gt;
&lt;a href="https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html"&gt;Oracle Documentation: The Java Tutorials &amp;gt; Prepared Statements&lt;/a&gt;&lt;br/&gt;
&lt;b&gt;References (SQL injection)&lt;/b&gt;&lt;br/&gt;
&lt;a href="http://projects.webappsec.org/w/page/13246963/SQL%20Injection"&gt;WASC-19: SQL Injection&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://capec.mitre.org/data/definitions/66.html"&gt;CAPEC-66: SQL Injection&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/89.html"&gt;CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection"&gt;OWASP: Top 10 2013-A1-Injection&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet"&gt;OWASP: SQL Injection Prevention Cheat Sheet&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet"&gt;OWASP: Query Parameterization Cheat Sheet&lt;/a&gt;&lt;br/&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern cweid='611' abbrev='SECXXEDOC' category='SECURITY' type='XXE_DOCUMENT'><ShortDescription>XML parsing vulnerable to XXE (DocumentBuilder)</ShortDescription><Details>
            
&lt;!--XXE_GENERIC_START--&gt;
&lt;h3&gt;Attack&lt;/h3&gt;
&lt;p&gt;XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Risk 1: Expose local file content (XXE: &lt;u&gt;X&lt;/u&gt;ML E&lt;u&gt;x&lt;/u&gt;ternal &lt;u&gt;E&lt;/u&gt;ntity)&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;ISO-8859-1&amp;quot;?&amp;gt;
&amp;lt;!DOCTYPE foo [
   &amp;lt;!ENTITY xxe SYSTEM &amp;quot;file:///etc/passwd&amp;quot; &amp;gt; ]&amp;gt;
&amp;lt;foo&amp;gt;&amp;amp;xxe;&amp;lt;/foo&amp;gt;&lt;/pre&gt;
&lt;/p&gt;
&lt;b&gt;Risk 2: Denial of service (XEE: &lt;u&gt;X&lt;/u&gt;ML &lt;u&gt;E&lt;/u&gt;ntity &lt;u&gt;E&lt;/u&gt;xpansion)&lt;/b&gt;
&lt;p&gt;
&lt;pre&gt;
&amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt;
&amp;lt;!DOCTYPE lolz [
 &amp;lt;!ENTITY lol &amp;quot;lol&amp;quot;&amp;gt;
 &amp;lt;!ELEMENT lolz (#PCDATA)&amp;gt;
 &amp;lt;!ENTITY lol1 &amp;quot;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;amp;lol;&amp;quot;&amp;gt;
 &amp;lt;!ENTITY lol2 &amp;quot;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;amp;lol1;&amp;quot;&amp;gt;
 &amp;lt;!ENTITY lol3 &amp;quot;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;amp;lol2;&amp;quot;&amp;gt;
[...]
 &amp;lt;!ENTITY lol9 &amp;quot;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;amp;lol8;&amp;quot;&amp;gt;
]&amp;gt;
&amp;lt;lolz&amp;gt;&amp;amp;lol9;&amp;lt;/lolz&amp;gt;&lt;/pre&gt;
&lt;/p&gt;

&lt;h3&gt;Solution&lt;/h3&gt;
&lt;p&gt;
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
&lt;/p&gt;
&lt;!--XXE_GENERIC_END--&gt;

&lt;p&gt;&lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
&lt;pre&gt;
DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();

Document doc = db.parse(input);&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
The following snippets show two available solutions. You can set one feature or both.
&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Solution using "Secure processing" mode:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
This setting will protect you against Denial of Service attack and remote file access.
&lt;pre&gt;
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);&lt;/pre&gt;
&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Solution disabling DTD:&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;
By disabling DTD, almost all XXE attacks will be prevented.
&lt;pre&gt;
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;!--XXE_GENERIC_START--&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/611.html"&gt;CWE-611: Improper Restriction of XML External Entity Reference ('XXE')&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260"&gt;CERT: IDS10-J. Prevent XML external entity attacks&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing"&gt;OWASP.org: XML External Entity (XXE) Processing&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion"&gt;WS-Attacks.org: XML Entity Expansion&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS"&gt;WS-Attacks.org: XML External Entity DOS&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack"&gt;WS-Attacks.org: XML Entity Reference Attack&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://blog.h3xstream.com/2014/06/identifying-xml-external-entity.html"&gt;Identifying XML External Entity vulnerability (XXE)&lt;/a&gt;&lt;br/&gt;
&lt;!--XXE_GENERIC_END--&gt;
&lt;a href="http://xerces.apache.org/xerces2-j/features.html"&gt;Xerces2 complete features list&lt;/a&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern cweid='89' abbrev='SQL' category='SECURITY' type='SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE'><ShortDescription>Nonconstant string passed to execute or addBatch method on an SQL statement</ShortDescription><Details>

  &lt;p&gt;The method invokes the execute or addBatch method on an SQL statement with a String that seems
to be dynamically generated. Consider using
a prepared statement instead. It is more efficient and less vulnerable to
SQL injection attacks.
&lt;/p&gt;

    </Details></BugPattern><BugPattern cweid='89' abbrev='SQL' category='SECURITY' type='SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING'><ShortDescription>A prepared statement is generated from a nonconstant String</ShortDescription><Details>

  &lt;p&gt;The code creates an SQL prepared statement from a nonconstant String.
If unchecked, tainted data from a user is used in building this String, SQL injection could
be used to make the prepared statement do something unexpected and undesirable.
&lt;/p&gt;

    </Details></BugPattern><BugPattern cweid='22' abbrev='SECPTI' category='SECURITY' type='PATH_TRAVERSAL_IN'><ShortDescription>Potential Path Traversal (file read)</ShortDescription><Details>
            
&lt;p&gt;A file is opened to read its content. The filename comes from an &lt;b&gt;input&lt;/b&gt; parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.&lt;/p&gt;
&lt;p&gt;This rule identifies &lt;b&gt;potential&lt;/b&gt; path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.&lt;/p&gt;
&lt;br/&gt;

&lt;p&gt;
    &lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;

&lt;p&gt;
    &lt;b&gt;Solution:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal"&gt;WASC: Path Traversal&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/Path_Traversal"&gt;OWASP: Path Traversal&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://capec.mitre.org/data/definitions/126.html"&gt;CAPEC-126: Path Traversal&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/22.html"&gt;CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')&lt;/a&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern cweid='78' abbrev='SECCI' category='SECURITY' type='COMMAND_INJECTION'><ShortDescription>Potential Command Injection</ShortDescription><Details>
            
&lt;p&gt;The highlighted API is used to execute a system command. If unfiltered input is passed to this API, it can lead to arbitrary command execution.&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
    &lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;import java.lang.Runtime;

Runtime r = Runtime.getRuntime();
r.exec("/bin/sh -c some_tool" + input);&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/Command_Injection"&gt;OWASP: Command Injection&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection"&gt;OWASP: Top 10 2013-A1-Injection&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/78.html"&gt;CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')&lt;/a&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern cweid='353' abbrev='CIPINT' category='SECURITY' type='CIPHER_INTEGRITY'><ShortDescription>Cipher with no integrity</ShortDescription><Details>
            
&lt;p&gt;
    The ciphertext produced is susceptible to alteration by an adversary. This mean that the cipher provides no way to detect that the
    data has been tampered with. If the ciphertext can be controlled by an attacker, it could be altered without detection.
&lt;/p&gt;
&lt;p&gt;
    The solution is to use a cipher that includes a Hash based Message Authentication Code (HMAC) to sign the data. Combining a HMAC function to the
    existing cipher is prone to error &lt;sup&gt;&lt;a href="https://moxie.org/blog/the-cryptographic-doom-principle/"&gt;[1]&lt;/a&gt;&lt;/sup&gt;. Specifically,
    it is always recommended that you be able to verify the HMAC first, and only if the data is unmodified, do you then perform any cryptographic
    functions on the data.
&lt;/p&gt;
&lt;p&gt;The following modes are vulnerable because they don't provide a HMAC:&lt;br/&gt;
    - CBC&lt;br/&gt;
    - OFB&lt;br/&gt;
    - CTR&lt;br/&gt;
    - ECB&lt;br/&gt;&lt;br/&gt;
    The following snippets code are some examples of vulnerable code.&lt;br/&gt;&lt;br/&gt;
    &lt;b&gt;Code at risk:&lt;/b&gt;&lt;br/&gt;
    &lt;i&gt;AES in CBC mode&lt;/i&gt;&lt;br/&gt;

    &lt;pre&gt;Cipher c = Cipher.getInstance("AES/CBC/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);&lt;/pre&gt;
    &lt;br/&gt;
    &lt;i&gt;Triple DES with ECB mode&lt;/i&gt;&lt;br/&gt;

&lt;pre&gt;Cipher c = Cipher.getInstance("DESede/ECB/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;b&gt;Solution:&lt;/b&gt;
    &lt;pre&gt;Cipher c = Cipher.getInstance("AES/GCM/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
In the example solution above, the GCM mode introduces an HMAC into the resulting encrypted data, providing integrity of the result.
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
    &lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
    &lt;a href="https://en.wikipedia.org/wiki/Authenticated_encryption"&gt;Wikipedia: Authenticated encryption&lt;/a&gt;&lt;br/&gt;
    &lt;a href="https://csrc.nist.gov/projects/block-cipher-techniques/bcm/modes-develoment#01"&gt;NIST: Authenticated Encryption Modes&lt;/a&gt;&lt;br/&gt;
    &lt;a href="https://moxie.org/blog/the-cryptographic-doom-principle/"&gt;Moxie Marlinspike's blog: The Cryptographic Doom Principle&lt;/a&gt;&lt;br/&gt;
    &lt;a href="https://cwe.mitre.org/data/definitions/353.html"&gt;CWE-353: Missing Support for Integrity Check&lt;/a&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern cweid='321' abbrev='SECHCK' category='SECURITY' type='HARD_CODE_KEY'><ShortDescription>Hard coded key</ShortDescription><Details>
            
&lt;p&gt;
Cryptographic keys should not be kept in the source code. The source code can be widely shared in an enterprise environment, and is
certainly shared in open source. To be managed safely, passwords and secret keys should be stored in separate configuration files or keystores.
(Hard coded passwords are reported separately by the &lt;i&gt;Hard coded password&lt;/i&gt; pattern)
&lt;/p&gt;
&lt;p&gt;
&lt;p&gt;&lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;br/&gt;

&lt;pre&gt;byte[] key = {1, 2, 3, 4, 5, 6, 7, 8};
SecretKeySpec spec = new SecretKeySpec(key, "AES");
Cipher aes = Cipher.getInstance("AES");
aes.init(Cipher.ENCRYPT_MODE, spec);
return aesCipher.doFinal(secretData);&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/321.html"&gt;CWE-321: Use of Hard-coded Cryptographic Key&lt;/a&gt;&lt;br/&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern cweid='330' abbrev='SECPR' category='SECURITY' type='PREDICTABLE_RANDOM'><ShortDescription>Predictable pseudorandom number generator</ShortDescription><Details>
            
&lt;p&gt;The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token&lt;/li&gt;
&lt;li&gt;a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form&lt;/li&gt;
&lt;li&gt;any other secret value&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
A quick fix could be to replace the use of &lt;code&gt;java.util.Random&lt;/code&gt; with something stronger, such as &lt;code&gt;java.security.SecureRandom&lt;/code&gt;.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Vulnerable Code:&lt;/b&gt;&lt;br/&gt;
&lt;pre&gt;String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Solution:&lt;/b&gt;
&lt;pre&gt;import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html"&gt;Cracking Random Number Generators - Part 1 (https://jazzy.id.au)&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers"&gt;CERT: MSC02-J. Generate strong random numbers&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://cwe.mitre.org/data/definitions/330.html"&gt;CWE-330: Use of Insufficiently Random Values&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html"&gt;Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)&lt;/a&gt;
&lt;/p&gt;

        </Details></BugPattern><BugPattern cweid='327' abbrev='SECECB' category='SECURITY' type='ECB_MODE'><ShortDescription>ECB mode is insecure</ShortDescription><Details>
            
&lt;p&gt;An authentication cipher mode which provides better confidentiality of the encrypted data should be used instead of Electronic Code Book (ECB) mode,
which does not provide good confidentiality. Specifically, ECB mode produces the same output for the same input each time. So,
for example, if a user is sending a password, the encrypted value is the same each time. This allows an attacker to intercept
and replay the data.&lt;/p&gt;
&lt;p&gt;
To fix this, something like Galois/Counter Mode (GCM) should be used instead.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Code at risk:&lt;/b&gt;
    &lt;pre&gt;Cipher c = Cipher.getInstance("AES/ECB/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;b&gt;Solution:&lt;/b&gt;
    &lt;pre&gt;Cipher c = Cipher.getInstance("AES/GCM/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);&lt;/pre&gt;
&lt;/p&gt;
&lt;br/&gt;
&lt;p&gt;
&lt;b&gt;References&lt;/b&gt;&lt;br/&gt;
&lt;a href="https://en.wikipedia.org/wiki/Authenticated_encryption"&gt;Wikipedia: Authenticated encryption&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://csrc.nist.gov/projects/block-cipher-techniques/bcm/modes-develoment#01"&gt;NIST: Authenticated Encryption Modes&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://en.wikipedia.org/wiki/Block_cipher_modes_of_operation#Electronic_codebook_.28ECB.29"&gt;Wikipedia: Block cipher modes of operation&lt;/a&gt;&lt;br/&gt;
&lt;a href="https://csrc.nist.gov/publications/detail/sp/800-38a/final"&gt;NIST: Recommendation for Block Cipher Modes of Operation&lt;/a&gt;
&lt;/p&gt;

        </Details></BugPattern><BugCode abbrev='SECHCK'><Description>Hard coded key</Description></BugCode><BugCode abbrev='SECPR'><Description>Predictable Pseudo Random Generator</Description></BugCode><BugCode abbrev='SECXXEDOC'><Description>XXE Vulnerability using DocumentBuilder</Description></BugCode><BugCode abbrev='SECCI'><Description>Command Injection</Description></BugCode><BugCode abbrev='SECPTI'><Description>Potential Path Traversal (file read)</Description></BugCode><BugCode abbrev='CIPINT'><Description>Cipher with no integrity</Description></BugCode><BugCode abbrev='SECSQLIJDBC'><Description>SQL Injection (JDBC)</Description></BugCode><BugCode abbrev='SECECB'><Description>ECB Mode</Description></BugCode><BugCode abbrev='SQL'><Description>Potential SQL Problem</Description></BugCode><Errors missingClasses='0' errors='0'></Errors><FindBugsSummary num_packages='7' total_classes='47' priority_1='8' priority_2='10' total_size='2198' clock_seconds='18.63' referenced_classes='175' vm_version='25.121-b13' total_bugs='18' java_version='1.8.0_121' gc_seconds='0.84' alloc_mbytes='455.50' cpu_seconds='145.79' peak_mbytes='232.28' timestamp='Thu, 9 Nov 2023 12:37:58 +0000'><FileStats path='com/fortify/samples/riches/AccountDetails.java' size='33' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/AccountSummary.java' size='30' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/AdminSupport.java' size='12' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/Check.java' size='15' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/DeleteMessage.java' size='13' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/FindLocations.java' size='53' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/FundException.java' size='4' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/Messages.java' size='13' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/PayBill.java' size='12' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/PerformChangePass.java' size='41' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/PerformCheck.java' size='63' bugHash='dba709175411863c06fa250dca26193d' bugCount='2'></FileStats><FileStats path='com/fortify/samples/riches/PerformRegistration.java' size='121' bugHash='6818bc0ede9f3cc962a9a11b9e15571a' bugCount='2'></FileStats><FileStats path='com/fortify/samples/riches/PerformTransfer.java' size='45' bugHash='e0d1a78e2151e348c97539f55ab21cfa' bugCount='4'></FileStats><FileStats path='com/fortify/samples/riches/Transfer.java' size='15' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/ViewMessage.java' size='44' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/database/ConnFactory.java' size='35' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/database/ConnectionFactory.java' size='38' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/database/DatabaseController.java' size='39' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/legacy/mail/SendMail.java' size='30' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/model/Account.java' size='49' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/model/AccountService.java' size='174' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/model/Location.java' size='72' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/model/LocationService.java' size='90' bugHash='f3a36f651d05fbefbd8f3b647b6a2119' bugCount='4'></FileStats><FileStats path='com/fortify/samples/riches/model/Message.java' size='65' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/model/MessageService.java' size='76' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/model/Profile.java' size='65' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/model/ProfileService.java' size='133' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/model/Role.java' size='33' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/model/Transaction.java' size='72' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/model/TransactionService.java' size='106' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/oper/Admin.java' size='13' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/oper/AdminUtil.java' size='76' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/oper/BrowseAccount.java' size='21' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/oper/CreateAccount.java' size='15' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/oper/DeleteAccount.java' size='15' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/oper/Files.java' size='6' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/oper/Newsletter.java' size='13' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/oper/SendMessage.java' size='89' bugHash='115727ddb3ddaf77f09f575e80bbe269' bugCount='1'></FileStats><FileStats path='com/fortify/samples/riches/oper/SendNewsletter.java' size='69' bugHash='7be7c0b9801103ca1bced007f872b7dd' bugCount='1'></FileStats><FileStats path='com/fortify/samples/riches/oper/UploadProfilePicture.java' size='37' bugHash='69c806c2ba8ddb679befb4e5be1ac4b6' bugCount='1'></FileStats><FileStats path='com/fortify/samples/riches/restful/AccountResources.java' size='64' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/restful/ITransactionResources.java' size='4' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/restful/TransactionResources.java' size='44' bugCount='0'></FileStats><FileStats path='com/fortify/samples/riches/restful/XMLUtil.java' size='94' bugHash='8c7221a0d08c0e42e18f3ec2eea29791' bugCount='1'></FileStats><FileStats path='com/fortify/samples/riches/webservices/BannerAdClient.java' size='28' bugHash='7f230a9d610faa6805220b8581250c5a' bugCount='1'></FileStats><FileStats path='com/fortify/samples/riches/webservices/BannerAdServer.java' size='17' bugHash='3a503153fccf302351aecc19ae54c0dd' bugCount='1'></FileStats><FileStats path='com/fortify/samples/riches/webservices/BannerAdSource.java' size='2' bugCount='0'></FileStats><PackageStats package='com.fortify.samples.riches' priority_1='6' total_bugs='8' priority_2='2' total_size='514' total_types='15'><ClassStats bugs='0' size='33' interface='false' sourceFile='AccountDetails.java' class='com.fortify.samples.riches.AccountDetails'></ClassStats><ClassStats bugs='0' size='30' interface='false' sourceFile='AccountSummary.java' class='com.fortify.samples.riches.AccountSummary'></ClassStats><ClassStats bugs='0' size='12' interface='false' sourceFile='AdminSupport.java' class='com.fortify.samples.riches.AdminSupport'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='Check.java' class='com.fortify.samples.riches.Check'></ClassStats><ClassStats bugs='0' size='13' interface='false' sourceFile='DeleteMessage.java' class='com.fortify.samples.riches.DeleteMessage'></ClassStats><ClassStats bugs='0' size='53' interface='false' sourceFile='FindLocations.java' class='com.fortify.samples.riches.FindLocations'></ClassStats><ClassStats bugs='0' size='4' interface='false' sourceFile='FundException.java' class='com.fortify.samples.riches.FundException'></ClassStats><ClassStats bugs='0' size='13' interface='false' sourceFile='Messages.java' class='com.fortify.samples.riches.Messages'></ClassStats><ClassStats bugs='0' size='12' interface='false' sourceFile='PayBill.java' class='com.fortify.samples.riches.PayBill'></ClassStats><ClassStats bugs='0' size='41' interface='false' sourceFile='PerformChangePass.java' class='com.fortify.samples.riches.PerformChangePass'></ClassStats><ClassStats bugs='2' size='63' priority_1='2' interface='false' sourceFile='PerformCheck.java' class='com.fortify.samples.riches.PerformCheck'></ClassStats><ClassStats bugs='2' size='121' priority_2='2' interface='false' sourceFile='PerformRegistration.java' class='com.fortify.samples.riches.PerformRegistration'></ClassStats><ClassStats bugs='4' size='45' priority_1='4' interface='false' sourceFile='PerformTransfer.java' class='com.fortify.samples.riches.PerformTransfer'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='Transfer.java' class='com.fortify.samples.riches.Transfer'></ClassStats><ClassStats bugs='0' size='44' interface='false' sourceFile='ViewMessage.java' class='com.fortify.samples.riches.ViewMessage'></ClassStats></PackageStats><PackageStats package='com.fortify.samples.riches.database' total_bugs='0' total_size='112' total_types='3'><ClassStats bugs='0' size='35' interface='false' sourceFile='ConnFactory.java' class='com.fortify.samples.riches.database.ConnFactory'></ClassStats><ClassStats bugs='0' size='38' interface='false' sourceFile='ConnectionFactory.java' class='com.fortify.samples.riches.database.ConnectionFactory'></ClassStats><ClassStats bugs='0' size='39' interface='false' sourceFile='DatabaseController.java' class='com.fortify.samples.riches.database.DatabaseController'></ClassStats></PackageStats><PackageStats package='com.fortify.samples.riches.legacy.mail' total_bugs='0' total_size='30' total_types='1'><ClassStats bugs='0' size='30' interface='false' sourceFile='SendMail.java' class='com.fortify.samples.riches.legacy.mail.SendMail'></ClassStats></PackageStats><PackageStats package='com.fortify.samples.riches.model' priority_1='2' total_bugs='4' priority_2='2' total_size='935' total_types='11'><ClassStats bugs='0' size='49' interface='false' sourceFile='Account.java' class='com.fortify.samples.riches.model.Account'></ClassStats><ClassStats bugs='0' size='174' interface='false' sourceFile='AccountService.java' class='com.fortify.samples.riches.model.AccountService'></ClassStats><ClassStats bugs='0' size='72' interface='false' sourceFile='Location.java' class='com.fortify.samples.riches.model.Location'></ClassStats><ClassStats bugs='4' size='90' priority_1='2' priority_2='2' interface='false' sourceFile='LocationService.java' class='com.fortify.samples.riches.model.LocationService'></ClassStats><ClassStats bugs='0' size='65' interface='false' sourceFile='Message.java' class='com.fortify.samples.riches.model.Message'></ClassStats><ClassStats bugs='0' size='76' interface='false' sourceFile='MessageService.java' class='com.fortify.samples.riches.model.MessageService'></ClassStats><ClassStats bugs='0' size='65' interface='false' sourceFile='Profile.java' class='com.fortify.samples.riches.model.Profile'></ClassStats><ClassStats bugs='0' size='133' interface='false' sourceFile='ProfileService.java' class='com.fortify.samples.riches.model.ProfileService'></ClassStats><ClassStats bugs='0' size='33' interface='false' sourceFile='Role.java' class='com.fortify.samples.riches.model.Role'></ClassStats><ClassStats bugs='0' size='72' interface='false' sourceFile='Transaction.java' class='com.fortify.samples.riches.model.Transaction'></ClassStats><ClassStats bugs='0' size='106' interface='false' sourceFile='TransactionService.java' class='com.fortify.samples.riches.model.TransactionService'></ClassStats></PackageStats><PackageStats package='com.fortify.samples.riches.oper' total_bugs='3' priority_2='3' total_size='354' total_types='10'><ClassStats bugs='0' size='13' interface='false' sourceFile='Admin.java' class='com.fortify.samples.riches.oper.Admin'></ClassStats><ClassStats bugs='0' size='76' interface='false' sourceFile='AdminUtil.java' class='com.fortify.samples.riches.oper.AdminUtil'></ClassStats><ClassStats bugs='0' size='21' interface='false' sourceFile='BrowseAccount.java' class='com.fortify.samples.riches.oper.BrowseAccount'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='CreateAccount.java' class='com.fortify.samples.riches.oper.CreateAccount'></ClassStats><ClassStats bugs='0' size='15' interface='false' sourceFile='DeleteAccount.java' class='com.fortify.samples.riches.oper.DeleteAccount'></ClassStats><ClassStats bugs='0' size='6' interface='false' sourceFile='Files.java' class='com.fortify.samples.riches.oper.Files'></ClassStats><ClassStats bugs='0' size='13' interface='false' sourceFile='Newsletter.java' class='com.fortify.samples.riches.oper.Newsletter'></ClassStats><ClassStats bugs='1' size='89' priority_2='1' interface='false' sourceFile='SendMessage.java' class='com.fortify.samples.riches.oper.SendMessage'></ClassStats><ClassStats bugs='1' size='69' priority_2='1' interface='false' sourceFile='SendNewsletter.java' class='com.fortify.samples.riches.oper.SendNewsletter'></ClassStats><ClassStats bugs='1' size='37' priority_2='1' interface='false' sourceFile='UploadProfilePicture.java' class='com.fortify.samples.riches.oper.UploadProfilePicture'></ClassStats></PackageStats><PackageStats package='com.fortify.samples.riches.restful' total_bugs='1' priority_2='1' total_size='206' total_types='4'><ClassStats bugs='0' size='64' interface='false' sourceFile='AccountResources.java' class='com.fortify.samples.riches.restful.AccountResources'></ClassStats><ClassStats bugs='0' size='4' interface='true' sourceFile='ITransactionResources.java' class='com.fortify.samples.riches.restful.ITransactionResources'></ClassStats><ClassStats bugs='0' size='44' interface='false' sourceFile='TransactionResources.java' class='com.fortify.samples.riches.restful.TransactionResources'></ClassStats><ClassStats bugs='1' size='94' priority_2='1' interface='false' sourceFile='XMLUtil.java' class='com.fortify.samples.riches.restful.XMLUtil'></ClassStats></PackageStats><PackageStats package='com.fortify.samples.riches.webservices' total_bugs='2' priority_2='2' total_size='47' total_types='3'><ClassStats bugs='1' size='28' priority_2='1' interface='false' sourceFile='BannerAdClient.java' class='com.fortify.samples.riches.webservices.BannerAdClient'></ClassStats><ClassStats bugs='1' size='17' priority_2='1' interface='false' sourceFile='BannerAdServer.java' class='com.fortify.samples.riches.webservices.BannerAdServer'></ClassStats><ClassStats bugs='0' size='2' interface='true' sourceFile='BannerAdSource.java' class='com.fortify.samples.riches.webservices.BannerAdSource'></ClassStats></PackageStats><FindBugsProfile><ClassProfile avgMicrosecondsPerInvocation='1475' totalMilliseconds='1436' name='edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine' maxMicrosecondsPerInvocation='88440' standardDeviationMicrosecondsPerInvocation='4686' invocations='974'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3114' totalMilliseconds='1121' name='edu.umd.cs.findbugs.ba.npe.NullDerefAndRedundantComparisonFinder' maxMicrosecondsPerInvocation='601331' standardDeviationMicrosecondsPerInvocation='31741' invocations='360'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3759' totalMilliseconds='657' name='edu.umd.cs.findbugs.detect.FieldItemSummary' maxMicrosecondsPerInvocation='53405' standardDeviationMicrosecondsPerInvocation='8125' invocations='175'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3676' totalMilliseconds='643' name='edu.umd.cs.findbugs.detect.FindNoSideEffectMethods' maxMicrosecondsPerInvocation='43990' standardDeviationMicrosecondsPerInvocation='7048' invocations='175'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1714' totalMilliseconds='617' name='com.h3xstream.findsecbugs.taintanalysis.TaintDataflowEngine' maxMicrosecondsPerInvocation='36176' standardDeviationMicrosecondsPerInvocation='4434' invocations='360'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1332' totalMilliseconds='498' name='edu.umd.cs.findbugs.classfile.engine.bcel.TypeDataflowFactory' maxMicrosecondsPerInvocation='58189' standardDeviationMicrosecondsPerInvocation='4086' invocations='374'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1317' totalMilliseconds='474' name='edu.umd.cs.findbugs.classfile.engine.bcel.IsNullValueDataflowFactory' maxMicrosecondsPerInvocation='23648' standardDeviationMicrosecondsPerInvocation='2660' invocations='360'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='738' totalMilliseconds='452' name='edu.umd.cs.findbugs.OpcodeStack$JumpInfoFactory' maxMicrosecondsPerInvocation='14176' standardDeviationMicrosecondsPerInvocation='1573' invocations='613'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='405' totalMilliseconds='397' name='edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine' maxMicrosecondsPerInvocation='6150' standardDeviationMicrosecondsPerInvocation='580' invocations='980'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1038' totalMilliseconds='390' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueNumberDataflowFactory' maxMicrosecondsPerInvocation='36542' standardDeviationMicrosecondsPerInvocation='2655' invocations='376'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1010' totalMilliseconds='367' name='edu.umd.cs.findbugs.classfile.engine.bcel.CFGFactory' maxMicrosecondsPerInvocation='47934' standardDeviationMicrosecondsPerInvocation='2935' invocations='364'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='887' totalMilliseconds='319' name='edu.umd.cs.findbugs.classfile.engine.bcel.UnconditionalValueDerefDataflowFactory' maxMicrosecondsPerInvocation='16528' standardDeviationMicrosecondsPerInvocation='1817' invocations='360'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1745' totalMilliseconds='314' name='edu.umd.cs.findbugs.detect.FindRefComparison$SpecialTypeAnalysis' maxMicrosecondsPerInvocation='47466' standardDeviationMicrosecondsPerInvocation='4211' invocations='180'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='850' totalMilliseconds='309' name='edu.umd.cs.findbugs.classfile.engine.bcel.MethodGenFactory' maxMicrosecondsPerInvocation='174680' standardDeviationMicrosecondsPerInvocation='9157' invocations='364'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1675' totalMilliseconds='293' name='edu.umd.cs.findbugs.detect.BuildObligationPolicyDatabase' maxMicrosecondsPerInvocation='141428' standardDeviationMicrosecondsPerInvocation='10735' invocations='175'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='5481' totalMilliseconds='257' name='edu.umd.cs.findbugs.detect.ConstructorThrow' maxMicrosecondsPerInvocation='46991' standardDeviationMicrosecondsPerInvocation='8195' invocations='47'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='747' totalMilliseconds='210' name='edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine' maxMicrosecondsPerInvocation='81231' standardDeviationMicrosecondsPerInvocation='4917' invocations='282'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='4376' totalMilliseconds='205' name='edu.umd.cs.findbugs.detect.FindOpenStream' maxMicrosecondsPerInvocation='79365' standardDeviationMicrosecondsPerInvocation='12270' invocations='47'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1148' totalMilliseconds='200' name='edu.umd.cs.findbugs.detect.NoteDirectlyRelevantTypeQualifiers' maxMicrosecondsPerInvocation='27403' standardDeviationMicrosecondsPerInvocation='3161' invocations='175'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='198' totalMilliseconds='184' name='edu.umd.cs.findbugs.util.TopologicalSort' maxMicrosecondsPerInvocation='56790' standardDeviationMicrosecondsPerInvocation='1887' invocations='928'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='3916' totalMilliseconds='184' name='edu.umd.cs.findbugs.detect.DontReusePublicIdentifiers' maxMicrosecondsPerInvocation='168543' standardDeviationMicrosecondsPerInvocation='24275' invocations='47'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1030' totalMilliseconds='180' name='edu.umd.cs.findbugs.detect.BuildStringPassthruGraph' maxMicrosecondsPerInvocation='18683' standardDeviationMicrosecondsPerInvocation='2608' invocations='175'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='850' totalMilliseconds='148' name='edu.umd.cs.findbugs.detect.FunctionsThatMightBeMistakenForProcedures' maxMicrosecondsPerInvocation='28846' standardDeviationMicrosecondsPerInvocation='2612' invocations='175'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='715' totalMilliseconds='125' name='edu.umd.cs.findbugs.detect.CalledMethods' maxMicrosecondsPerInvocation='10651' standardDeviationMicrosecondsPerInvocation='1603' invocations='175'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='647' totalMilliseconds='113' name='edu.umd.cs.findbugs.detect.OverridingEqualsNotSymmetrical' maxMicrosecondsPerInvocation='27703' standardDeviationMicrosecondsPerInvocation='2245' invocations='175'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2346' totalMilliseconds='110' name='edu.umd.cs.findbugs.detect.FindReturnRef' maxMicrosecondsPerInvocation='54277' standardDeviationMicrosecondsPerInvocation='7788' invocations='47'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='983' totalMilliseconds='108' name='edu.umd.cs.findbugs.ba.obl.ObligationAnalysis' maxMicrosecondsPerInvocation='9846' standardDeviationMicrosecondsPerInvocation='1539' invocations='110'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2268' totalMilliseconds='106' name='edu.umd.cs.findbugs.detect.LoadOfKnownNullValue' maxMicrosecondsPerInvocation='12382' standardDeviationMicrosecondsPerInvocation='2626' invocations='47'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='16' totalMilliseconds='101' name='edu.umd.cs.findbugs.ba.npe.TypeQualifierNullnessAnnotationDatabase' maxMicrosecondsPerInvocation='6089' standardDeviationMicrosecondsPerInvocation='139' invocations='6209'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='269' totalMilliseconds='97' name='edu.umd.cs.findbugs.classfile.engine.bcel.ConstantDataflowFactory' maxMicrosecondsPerInvocation='6914' standardDeviationMicrosecondsPerInvocation='665' invocations='360'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='2032' totalMilliseconds='95' name='edu.umd.cs.findbugs.detect.DumbMethods' maxMicrosecondsPerInvocation='9354' standardDeviationMicrosecondsPerInvocation='2228' invocations='47'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='523' totalMilliseconds='91' name='edu.umd.cs.findbugs.detect.ReflectiveClasses' maxMicrosecondsPerInvocation='19821' standardDeviationMicrosecondsPerInvocation='1896' invocations='175'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1879' totalMilliseconds='88' name='edu.umd.cs.findbugs.detect.FindDeadLocalStores' maxMicrosecondsPerInvocation='9835' standardDeviationMicrosecondsPerInvocation='2424' invocations='47'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1873' totalMilliseconds='88' name='edu.umd.cs.findbugs.detect.FindInconsistentSync2' maxMicrosecondsPerInvocation='17389' standardDeviationMicrosecondsPerInvocation='2740' invocations='47'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1786' totalMilliseconds='83' name='edu.umd.cs.findbugs.detect.FindUselessObjects' maxMicrosecondsPerInvocation='19599' standardDeviationMicrosecondsPerInvocation='3634' invocations='47'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1619' totalMilliseconds='79' name='edu.umd.cs.findbugs.detect.StreamResourceTracker' maxMicrosecondsPerInvocation='7625' standardDeviationMicrosecondsPerInvocation='1631' invocations='49'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1663' totalMilliseconds='78' name='edu.umd.cs.findbugs.detect.CheckRelaxingNullnessAnnotation' maxMicrosecondsPerInvocation='32111' standardDeviationMicrosecondsPerInvocation='4710' invocations='47'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1560' totalMilliseconds='73' name='com.h3xstream.findsecbugs.file.PathTraversalDetector' maxMicrosecondsPerInvocation='28790' standardDeviationMicrosecondsPerInvocation='4262' invocations='47'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='195' totalMilliseconds='71' name='edu.umd.cs.findbugs.classfile.engine.bcel.ValueRangeAnalysisFactory' maxMicrosecondsPerInvocation='14795' standardDeviationMicrosecondsPerInvocation='1054' invocations='364'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1407' totalMilliseconds='66' name='edu.umd.cs.findbugs.detect.UnreadFields' maxMicrosecondsPerInvocation='7037' standardDeviationMicrosecondsPerInvocation='1366' invocations='47'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='368' totalMilliseconds='64' name='edu.umd.cs.findbugs.detect.EqualsOperandShouldHaveClassCompatibleWithThis' maxMicrosecondsPerInvocation='8366' standardDeviationMicrosecondsPerInvocation='874' invocations='175'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1329' totalMilliseconds='62' name='edu.umd.cs.findbugs.detect.FindUnsatisfiedObligation' maxMicrosecondsPerInvocation='19026' standardDeviationMicrosecondsPerInvocation='2952' invocations='47'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1323' totalMilliseconds='62' name='edu.umd.cs.findbugs.detect.FindNullDeref' maxMicrosecondsPerInvocation='9731' standardDeviationMicrosecondsPerInvocation='1785' invocations='47'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1299' totalMilliseconds='61' name='edu.umd.cs.findbugs.detect.RuntimeExceptionCapture' maxMicrosecondsPerInvocation='10824' standardDeviationMicrosecondsPerInvocation='2096' invocations='47'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1293' totalMilliseconds='60' name='edu.umd.cs.findbugs.detect.FindHEmismatch' maxMicrosecondsPerInvocation='37233' standardDeviationMicrosecondsPerInvocation='5320' invocations='47'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='167' totalMilliseconds='60' name='edu.umd.cs.findbugs.detect.FindNullDeref$CheckCallSitesAndReturnInstructions' maxMicrosecondsPerInvocation='3596' standardDeviationMicrosecondsPerInvocation='423' invocations='360'></ClassProfile><ClassProfile avgMicrosecondsPerInvocation='1254' totalMilliseconds='58' name='com.h3xstream.findsecbugs.password.ConstantPasswordDetector' maxMicrosecondsPerInvocation='13641' standardDeviationMicrosecondsPerInvocation='2114' invocations='47'></ClassProfile></FindBugsProfile></FindBugsSummary><ClassFeatures></ClassFeatures><History></History></BugCollection>