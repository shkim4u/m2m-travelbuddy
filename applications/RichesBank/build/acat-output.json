{"@id":"1","jobRecord":{"@id":"2","jobSummary":{"jobId":"86d4e422-cb19-4d08-8a3b-44157c3488c8","status":"COMPLETE","statusMessage":"","acatConfiguration":{"activeShims":{"arn:acat:shim/bosco":{"id":"arn:acat:shim/bosco","name":"Bosco","className":"com.amazonaws.acat.shim.bosco.BoscoShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/bosco/","constraints":{"execTimeInMs":2400000,"cpuTimeInMs":2400000,"residentMemoryInByte":536870912}},"arn:acat:shim/gosec":{"id":"arn:acat:shim/gosec","name":"gosec","className":"com.amazonaws.acat.shim.gosec.AcatGoSecShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/gosec/","constraints":{"execTimeInMs":2700000,"cpuTimeInMs":2700000,"residentMemoryInByte":2147483648}},"arn:acat:shim/dragonglass":{"id":"arn:acat:shim/dragonglass","name":"Dragonglass","className":"com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/dragonglass/","constraints":{"execTimeInMs":900000,"cpuTimeInMs":900000,"residentMemoryInByte":1073741824}},"arn:acat:shim/retirejs":{"id":"arn:acat:shim/retirejs","name":"RetireJs","className":"com.amazonaws.acat.shim.retirejs.RetireJsShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/retirejs/","constraints":{"execTimeInMs":600000,"cpuTimeInMs":600000,"residentMemoryInByte":1073741824}},"arn:acat:shim/orangeboxconfiguration":{"id":"arn:acat:shim/orangeboxconfiguration","name":"orangeboxconfiguration","className":"com.amazonaws.acat.shim.orangeboxconfiguration.OrangeBoxConfigurationShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/orangeboxconfiguration/","constraints":{"execTimeInMs":2700000,"cpuTimeInMs":2700000,"residentMemoryInByte":1073741824}},"arn:acat:shim/cfnlint":{"id":"arn:acat:shim/cfnlint","name":"Cfnlint","className":"com.amazonaws.acat.shim.cfnlint.AcatCfnLintShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/cfnlint/","constraints":{"execTimeInMs":2400000,"cpuTimeInMs":2400000,"residentMemoryInByte":1073741824}},"arn:acat:shim/guru":{"id":"arn:acat:shim/guru","name":"Guru","className":"com.amazonaws.acat.shim.guru.AcatGuruShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/guru/","constraints":{"execTimeInMs":2700000,"cpuTimeInMs":2700000,"residentMemoryInByte":1073741824}},"arn:acat:shim/hostnametypo":{"id":"arn:acat:shim/hostnametypo","name":"HostnameTypoDetection","className":"com.amazonaws.acat.shim.hostnametypo.AcatHostnameTypoDetectionShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/hostnametypodetection/","constraints":{"execTimeInMs":1800000,"cpuTimeInMs":1800000,"residentMemoryInByte":1073741824}},"arn:acat:shim/bandit":{"id":"arn:acat:shim/bandit","name":"Bandit","className":"com.amazonaws.acat.shim.bandit.AcatBanditShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/bandit/","constraints":{"execTimeInMs":3600000,"cpuTimeInMs":3600000,"residentMemoryInByte":536870912}},"arn:acat:shim/dragonstone":{"id":"arn:acat:shim/dragonstone","name":"dragonstone","className":"com.amazonaws.acat.shim.dragonstone.AcatDragonstoneShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/dragonstone/","constraints":{"execTimeInMs":90000,"cpuTimeInMs":90000,"residentMemoryInByte":10737418240}},"arn:acat:shim/binaryscanning":{"id":"arn:acat:shim/binaryscanning","name":"binaryscanning","className":"com.amazonaws.acat.shim.binaryscanning.AcatBinaryScanningShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/binaryscanning/","constraints":{"execTimeInMs":2700000,"cpuTimeInMs":2700000,"residentMemoryInByte":1073741824}}},"ruleToVulMap":{"bosco/external-cdn":{"name":"External CDN Reference","remediation":"Instead of pulling javascript from external repositories (e.g., code.jquery.com/jquery-3.1.1.min.js) please host all your code in Amazon-owned CDNs.\nPlease see the following: https://www.aristotle.a2z.com/implementations/180 https://www.aristotle.a2z.com/recommendations/11","description":"Amazon cannot control the behavior of third-party hosting providers. Consuming third-party JS code could result in malicious scripts running in Amazon pages (e.g., stealing cookies, launching phishing attacks on customers, leaking sensitive information from user-agent strings or HTTP requests).\n","importance":"HIGH","cwe":["829"],"crBlocking":"NOT_BLOCKING","rules":["bosco/external-cdn"]},"cfnlint/EA022":{"name":"Open Virtual Private Cloud (VPC) Security group in CloudFormation template","remediation":"N/A","description":"Security groups that allow inbound access from all IPv4 or IPv6 addresses may enable  unintentional access to the allow-listed ports. Service teams should make sure that  Security group rules are restricted to only allow traffic on designated ports from approved  sources such as other approved Security groups in the account, a pre-approved list of IP addresses,  or CIDR ranges that correspond to an approved service dependency.  Visit https://www.aristotle.a2z.com/recommendations/211 to learn more.\n","importance":"HIGH","cwe":["284","287"],"crBlocking":"NOT_BLOCKING","rules":["cfnlint/EA022"]},"dragonglass/amiDescribeImageRequestV1":{"name":"Insecure AMI selection (AMI sniping)","remediation":"Select an AMI by ensuring that a unique image is specified.\nPlease see the following: https://www.aristotle.a2z.com/recommendations/168","description":"Selecting an AMI without a unique identifier for the image  may result in launching a different AMI with malicious third-party software installed.","importance":"HIGH","cwe":["732"],"crBlocking":"NOT_BLOCKING","rules":["dragonglass/amiDescribeImageRequestV1"]},"cfnlint/EA021":{"name":"Container image hosted in DockerHub","remediation":"Please update the flagged resources to use images hosted in ECR public. If the image you're using is not available in ECR public, please follow the instructions here: * https://w.amazon.com/bin/view/Spencer/Onboarding/ECR-Public-Onboarding-FAQ/#HWhatiftheimagewereferenceisnotavailableinECRPublic3F\nIf you have more questions, please reach out to the `#ecr-public-onboarding-campaign` slack channel.\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/118","description":"Container images hosted in external repositories could be compromised or modified unexpectedly, affecting your availability and security posture. They could also be accidentally deleted or removed from the third party repository.\nEven when the image is hosted in DockerHub and belongs to the Amazon organization, DockerHub imposes lower throttling limits, which could impact the availability of your service.\n","importance":"HIGH","cwe":["829"],"crBlocking":"NOT_BLOCKING","rules":["bosco/amazon-dockerhub-image","cfnlint/EA021"]},"bosco/coral-heapdump-spring-xml":{"name":"Insecure Coral HeapDump Handler Detected","remediation":"For Spring-based Coral services, the handler chain is typically defined in configuration/spring-configuration/application/service-chain.xml (look for bean reference <bean class=\\\"com.amazon.coral.service.HeapDumpHandler\\\"/>). For Guice-based Coral services or if your service uses a Spring config but does not use XML, the handler chain is typically defined in CoralModule.java (the specific path varies but look for an instantiation like `handlerChain.add(new HeapDumpHandler());`.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/198 https://www.aristotle.a2z.com/recommendations/34","description":"Coral HeapDump handler is enabled with insufficient access control. In production, any memory dump of the application will be vulnerable to unauthorized access, and there is also a risk of disk space exhaustion.\n","importance":"HIGH","cwe":["489","226","212","244"],"crBlocking":"NOT_BLOCKING","rules":["bosco/coral-heapdump-spring-xml","bosco/coral-heapdump-guice-scala"]},"bosco/bidirectional-characters":{"name":"Bidirectional Unicode characters used in malicious way","remediation":"Avoid using or permitting bidirectional Unicode characters if they change the logic of the code\nPlease see the following: https://www.aristotle.a2z.com/recommendations/279","description":"Bidirectional Unicode characters can change the visual representation of the code.  Malicious users can use this property to make the code do something that the human reader doesn't expect.\n","importance":"HIGH","cwe":["176"],"crBlocking":"NOT_BLOCKING","rules":["bosco/bidirectional-characters"]},"bosco/reverse-tabnabbing":{"name":"Reverse Tabnabbing","remediation":"Add the noopener and noreferrer values in the rel attribute in <a> tags or in the windowFeatures argument of window.open() calls.\nPlease see the following: https://www.aristotle.a2z.com/recommendations/232","description":"Reverse tabnabbing is an attack that is possible when a link is configured to open a new tab in a browser by, for example, adding the `target=\"_blank\"` attribute to an `<a>` tag. If done incorrectly, the new page is able to control the referrer and opener objects of the parent window, and use that control to replace the parent site with a phishing site.\n","importance":"MEDIUM","cwe":["1022"],"crBlocking":"NOT_BLOCKING","rules":["bosco/reverse-tabnabbing"]},"bosco/insecure-nginx-ssl-protocols":{"name":"Insecure Nginx SSL(Secure Sockets Layer) Protocols Detected","remediation":"Please disable or remove any reference of SSLv1, SSLv2, and SSLv3.\nPlease see the following: https://www.aristotle.a2z.com/implementations/293 https://www.aristotle.a2z.com/recommendations/21","description":"Configuring Nginx to support older protocols like SSL versions 1, 2, or 3 can leave the server susceptible to downgrade attacks where the used version will be lower then the negotiated protocol version.","importance":"HIGH","cwe":["311","319","757","327"],"crBlocking":"NOT_BLOCKING","rules":["bosco/insecure-nginx-ssl-protocols"]},"documentation/PASS_ROLE_WITH_STAR_IN_RESOURCE":{"name":"IAM Policy with PassRole and star in Resource","remediation":"We recommend that you specify allowed ARNs in the `Resource` element. Additionally, you can reduce permissions to a single service by using the `iam:PassedToService` condition key.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/243","description":"Policies that allow `iam:PassRole` and that include a wildcard (`*`) in the Resource element can allow your principals to access more services or features than you intended.\nThis finding was generated by ACAT using the Access Analyzer policy validator. You can run your policy in the IAM policy validator using the IAM console to get a more detailed report on this finding. See here for more: * https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-policy-validation.html\n","importance":"MEDIUM","cwe":["668","284"],"crBlocking":"NOT_BLOCKING","rules":["documentation/PASS_ROLE_WITH_STAR_IN_RESOURCE"]},"bosco/AngularJS-strict-contextual-escaping-disabled-js-files":{"name":"Strict Contextual Escaping(SCE) in AngularJS is Disabled","remediation":"Strict contextual escaping is enabled by default starting with AngularJS version 1.2 and above. Strict contextual escaping should NEVER be disabled.\nPlease see the following: https://www.aristotle.a2z.com/implementations/292 https://www.aristotle.a2z.com/recommendations/1","description":"AngularJS provides Strict Contextual Escaping (SCE), a framework solution to prevent Cross-Site Scripting (XSS) vulnerabilities.\nDisabling Strict Contextual Escaping (SCE) in AngularJS may introduce Cross-Site Scripting (XSS) and Clickjacking vulnerabilities.","importance":"HIGH","cwe":["601","838"],"crBlocking":"NOT_BLOCKING","rules":["bosco/AngularJS-strict-contextual-escaping-disabled-js-files"]},"bosco/hardcoded-aws-creds-generic-new-prefixes":{"name":"Hardcoded Credentials","remediation":"For applications running in the Corp or Prod fabric:Use Odin (http://odin.amazon.com/)\nFor applications running in Native AWS -  Consider AWS Secrets Manager (https://aws.amazon.com/secrets-manager/) or Odin Everywhere (https://w.amazon.com/index.php/Odin/OdinEverywhere).\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/implementations/48 https://www.aristotle.a2z.com/recommendations/59","description":"Hardcoded credentials need to comply to the [style guide for safe names](https://alpha.www.docs.aws.a2z.com/awsstyleguide/latest/styleguide/safenames.html#credentials)  or be removed from code, even when used for tests. Flagged hardcoded credentials that are active **must also be rotated** as they might  have been seen by anyone with access to the source code. For more information see this  [Wiki](https://w.amazon.com/bin/view/AWS_IT_Security/Security_Automation_Integrators/ACAT/Rules/FAQs/HardcodedCredentials).\n","importance":"HIGH","cwe":["259","523","311","798","257"],"crBlocking":"NOT_BLOCKING","rules":["bosco/hardcoded-aws-creds-generic","bosco/hardcoded-aws-creds-generic-new-prefixes"]},"bosco/nginx-proxy-ssl-off":{"name":"Lack of Nginx Proxy TLS Verification","remediation":"Explicitly set `proxy_ssl_verify on` to ensure end-to-end TLS certificate verification when proxying requests.\nPlease see the following: https://www.aristotle.a2z.com/implementations/293 https://www.aristotle.a2z.com/recommendations/21","description":"Nginx can be configured to proxy incoming requests to other HTTPS endpoints. However, if the identity of the HTTPS endpoint is not verified by checking the TLS public certificate presented by the endpoint, then the Nginx service could be exposed to manipulator-in-the-middle attacks. Explicitly set `proxy_ssl_verify on` in your configuration to ensure end-to-end TLS certificate verification when proxying requests.","importance":"MEDIUM","cwe":["295"],"crBlocking":"NOT_BLOCKING","rules":["bosco/nginx-proxy-ssl-off"]},"cfnlint/W2501":{"name":"Insecure password practices in cloudformation template (Hardcoded password or NoEcho missing)","remediation":"You should always use dynamic references to retrieve credentials and use the NoEcho property for sensitive input parameters.\nPlease see the following: https://www.aristotle.a2z.com/implementations/156","description":"Hardcoded credentials can result in leakage of sensitive information and compromise of user accounts.","importance":"HIGH","cwe":["259","321","798"],"crBlocking":"NOT_BLOCKING","rules":["cfnlint/W2501"]},"documentation/PASS_ROLE_WITH_STAR_IN_ACTION_AND_RESOURCE":{"name":"IAM Policy with PassRole and star in Action and Resource","remediation":"We recommend that you specify allowed ARNs in the `Resource` element. Additionally, you can reduce permissions to a single service by using the `iam:PassedToService` condition key.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/243","description":"Policies with a wildcard (`*`) in the `Action` and `Resource` elements can allow your principals to access more services or features than you intended.\nThis finding was generated by ACAT using the Access Analyzer policy validator. You can run your policy in the IAM policy validator using the IAM console to get a more detailed report on this finding. See here for more: * https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-policy-validation.html\n","importance":"MEDIUM","cwe":["668","284"],"crBlocking":"NOT_BLOCKING","rules":["documentation/PASS_ROLE_WITH_STAR_IN_ACTION_AND_RESOURCE"]},"guru/HardcodedDatabasePasswordJava":{"name":"Hardcoded Database Connection Password","remediation":"Use AWS Secrets Manager (https://w.amazon.com/bin/view/SecretsManager/AWSServiceIntegrationWithSecretsManager/). Ensure that the exposed secrets are disabled and deleted from code.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/implementations/48 https://www.aristotle.a2z.com/recommendations/59","description":"A hardcoded database connection password is present in the code. Exposing database connection credentials means that anyone with access to the server can perform privileged actions to the database.\n","importance":"HIGH","cwe":["259","523","311","798","257"],"crBlocking":"NOT_BLOCKING","rules":["guru/HardcodedDatabasePasswordJava","guru/HardcodedDatabasePasswordPython","guru/HardcodedDatabasePasswordJavaScript"]},"bosco/rails-hard-coded-secret-token":{"name":"Hard Coded Secret Token Detected","remediation":"For applications running in the Corp or Prod fabric:Use Odin (http://odin.amazon.com/)\nFor applications running in Native AWS - Consider AWS Secrets Manager (https://aws.amazon.com/secrets-manager/) or Odin Everywhere (https://w.amazon.com/index.php/Odin/OdinEverywhere). For test resources, if Odin is not a viable choice, consider to use SecureRandom.hex(128).\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/recommendations/59","description":"Hard coded or insecurely stored tokens in source code. These credentials can be seen by anyone with access to source code.","importance":"HIGH","cwe":["259","523","311","798","257"],"crBlocking":"NOT_BLOCKING","rules":["bosco/rails-hard-coded-secret-token"]},"dragonglass/cryptoComplianceSignature":{"name":"Insecure digital signature","remediation":"Use approved digital signatures.\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/implementations/234 https://www.aristotle.a2z.com/recommendations/59","description":"Usage of weak cryptographic primitives allows attackers to access data they are not authorized to access. Strong encryption and signing is crucial to protect customer data.","importance":"HIGH","cwe":["327"],"crBlocking":"NOT_BLOCKING","rules":["dragonglass/cryptoComplianceSignature"]},"guru/XmlExternalEntityInjectionSchemaFactory":{"name":"Insecure XML parser initialization in Java","remediation":"Configure your Java XML parser to disallow processing of Document Type Definition (DTD) or processing of any external reference in the XML document. For details on how to address this issue for a particular XML parser, please consult  the rule FAQ linked in the finding ticket. Consult your AppSec affinity engineer for approval on downgrading the finding severity from Sev2 to Sev3 in case the input to the parser is coming from trusted source.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/255 https://www.aristotle.a2z.com/recommendations/174","description":"XML parsers that allow XML external entity (XXE) resolution are susceptible to  XXE injection attacks which can lead to high impact security vulnerabilities  such as Server Side Request Forgery (SSRF) and disclosure of sensitive data  from the filesystem.\n","importance":"HIGH","cwe":["611"],"crBlocking":"__EVERYONE__","rules":["guru/XmlExternalEntityInjection","guru/XmlExternalEntityInjectionXmlInputFactory","guru/XmlExternalEntityInjectionSAXBuilderXMLReader","guru/XmlExternalEntityInjectionSAXParser","guru/XmlExternalEntityInjectionTransformerFactory","guru/XmlExternalEntityInjectionValidator","guru/XmlExternalEntityInjectionSchemaFactory"]},"cfnlint/EA012":{"name":"Container image from external repository","remediation":"Please ensure that you are following the container repository usage guidelines found [here](https://builderhub.corp.amazon.com/docs/containers-repo-usage.html).\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/118","description":"Container images hosted in external repositories could become compromised or modified unexpectedly, affecting your availability and security posture. They can also be accidentally deleted or removed from the third party repository either by mistake or through an author's decision to remove the image in question.\n","importance":"HIGH","cwe":["829"],"crBlocking":"NOT_BLOCKING","rules":["bosco/external-docker-image","cfnlint/EA012"]},"cfnlint/EA011":{"name":"S3 bucket without versioning","remediation":"Enable bucket versioning in your Cloudformation template\nPlease see the following: https://www.aristotle.a2z.com/implementations/153","description":"Bucket versioning allows you to recover from unauthorized or accidental overwrites and deletions of S3 objects. All buckets that contain customer content, Amazon proprietary data, metadata, or audit data, must have versioning enabled.","importance":"LOW","cwe":["664","693"],"crBlocking":"NOT_BLOCKING","rules":["cfnlint/EA011"]},"guru/HardcodedDatabasePasswordJavaScript":{"name":"Hardcoded Database Connection Password","remediation":"Use AWS Secrets Manager (https://w.amazon.com/bin/view/SecretsManager/AWSServiceIntegrationWithSecretsManager/). Ensure that the exposed secrets are disabled and deleted from code.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/implementations/48 https://www.aristotle.a2z.com/recommendations/59","description":"A hardcoded database connection password is present in the code. Exposing database connection credentials means that anyone with access to the server can perform privileged actions to the database.\n","importance":"HIGH","cwe":["259","523","311","798","257"],"crBlocking":"NOT_BLOCKING","rules":["guru/HardcodedDatabasePasswordJava","guru/HardcodedDatabasePasswordPython","guru/HardcodedDatabasePasswordJavaScript"]},"cfnlint/EA010":{"name":"ALB instance with missing or disabled routing.http.drop_invalid_header_fields.enabled option","remediation":"Set `routing.http.drop_invalid_header_fields.enabled` option to true.\nPlease see the following: https://www.aristotle.a2z.com/recommendations/206","description":"Omitting or disabling the `routing.http.drop_invalid_header_fields.enabled` option in ALB instances results in potential exposure to HTTP DeSync attacks. HTTP DeSync attacks can result in leakage of sensitive customer information, authorization bypass, or malicious content being served to customers.","importance":"MEDIUM","cwe":["444"],"crBlocking":"NOT_BLOCKING","rules":["cfnlint/EA010"]},"documentation/PASS_ROLE_WITH_STAR_IN_RESOURCE_AND_NOT_ACTION":{"name":"IAM Policy with PassRole, star in Resource and NotAction","remediation":"We recommend that you specify allowed ARNs in the `Resource` element. Additionally, you can reduce permissions to a single service by using the `iam:PassedToService` condition key.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/243","description":"Using the NotAction element in a policy with a wildcard (`*`) in the Resource element can allow your principals to access more services or features than you intended.\nThis finding was generated by ACAT using the Access Analyzer policy validator. You can run your policy in the IAM policy validator using the IAM console to get a more detailed report on this finding. See here for more: * https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-policy-validation.html\n","importance":"MEDIUM","cwe":["668","284"],"crBlocking":"NOT_BLOCKING","rules":["documentation/PASS_ROLE_WITH_STAR_IN_RESOURCE_AND_NOT_ACTION"]},"guru/CipherFromGetAlgorithmJava":{"name":"Insecure Cryptographic Cipher","remediation":"Use recommended algorithms (Guidance tab on https://w.amazon.com/bin/view/AWSCryptoBR/Cryptosystems) to create secure ciphers.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/234 https://www.aristotle.a2z.com/recommendations/17","description":"Instantiating a cipher from the `java.security.Key#getAlgorithm()` method results in an insecure cipher. Usage of insecure cryptographic ciphers allows attackers to access data they are not authorized to access.\n","importance":"HIGH","cwe":["1240","327","338","326","335","352","916","331"],"crBlocking":"NOT_BLOCKING","rules":["guru/CipherFromGetAlgorithmJava"]},"documentation/DENY_NOTACTION_WITH_UNSUPPORTED_TAG_CONDITION_KEY_FOR_SERVICE":{"name":"IAM Policy with Deny, NotAction and unsupported tag condition key for service","remediation":"Please see the following: https://www.aristotle.a2z.com/implementations/243","description":"Using unsupported tag condition keys in the Condition element of a policy with \"Effect\": \"Deny\" can be overly permissive, because the condition is ignored for that service. We recommend that you remove the service actions that don’t support the condition key and create another statement to deny access to specific resources for those actions.\nIf you use the `aws:ResourceTag` condition key and it’s not supported by a service action, then the key is not included in the request context. In this case, the condition in the Deny statement always returns false and the action is never denied. This happens even if the resource is tagged correctly.\nWhen a service supports the `aws:ResourceTag` condition key, you can use tags to control access to that service’s resources. This is known as attribute-based access control (ABAC). Services that don’t support these keys require you to control access to resources using resource-based access control (RBAC).\nThis finding was generated by ACAT using the Access Analyzer policy validator. You can run your policy in the IAM policy validator using the IAM console to get a more detailed report on this finding. See here for more: * https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-policy-validation.html\n","importance":"MEDIUM","cwe":[],"crBlocking":"NOT_BLOCKING","rules":["documentation/DENY_NOTACTION_WITH_UNSUPPORTED_TAG_CONDITION_KEY_FOR_SERVICE"]},"orangeboxconfiguration/debug-prod":{"name":"Debug mode enabled in production stage in OrangeBox configuration","remediation":"Please set the 'exceptionDataView' option to 'false'.\nPlease see the following: https://www.aristotle.a2z.com/recommendations/34","description":"The 'exceptionDataView' option is set to 'true' in a production stage. Enabling this option will result in exception messages and stack traces being visible on the error page, potentially leaking sensitive information to the console users.","importance":"HIGH","cwe":["489"],"crBlocking":"NOT_BLOCKING","rules":["orangeboxconfiguration/debug-prod"]},"guru/GithubWorkflowIdentifier":{"name":"Script Injection in GitHub Actions workflows","remediation":"Use an action instead of an inline script (recommended). For more information visit https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#good-practices-for-mitigating-script-injection-attacks\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/427","description":"Every GitHub Actions event trigger provides a GitHub context value that contains information about the triggering event, such as which user triggered it, the branch name, and other event context details. Some of this event data, like the base repository name or the hash value of a commit, is unlikely to provide inappropriate access. However, many other types of event context data, such as github.event.issue.title, are user controlled and must be treated as potentially untrusted input. For more information visit https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#understanding-the-risk-of-script-injections\n","importance":"HIGH","cwe":[],"crBlocking":"NOT_BLOCKING","rules":["guru/GithubWorkflowIdentifier"]},"guru/CommandInjection":{"name":"Improper Neutralization of Input Used in a Command (Command Injection)","remediation":"If at all possible, use library and framework calls to perform the desired functionality rather than directly calling native OS commands. Where user input needs to be passed to an OS command, you should avoid using `Runtime.getRuntime().exec()`. Please convert a command string into an array and use `ProcessBuilder` in order to separate user inputs from commands. If a shell command (e.g., bash) is needed when calling `ProcessBuilder`, you must apply strict input validation, as well as output encoding and escaping of dangerous OS shell metacharacters.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/131 https://www.aristotle.a2z.com/implementations/132 https://www.aristotle.a2z.com/implementations/133 https://www.aristotle.a2z.com/recommendations/1","description":"Passing user-provided input to Python's subprocess, OS, and command functions without validation or sanitization makes your code vulnerable to running arbitrary OS commands. This could allow attackers to execute unexpected, dangerous commands directly on the operating system.\n","importance":"HIGH","cwe":["74","77","78","88"],"crBlocking":"NOT_BLOCKING","rules":["guru/CommandInjection","guru/CommandInjectionPython"]},"orangeboxconfiguration/path-style-s3-csp":{"name":"Path-style S3 bucket reference in CSP policy in OrangeBox configuration","remediation":"Please use virtual-hosted style links to reference all S3 buckets.\nPlease see the following: https://www.aristotle.a2z.com/implementations/347 https://www.aristotle.a2z.com/implementations/348","description":"Path-style links to S3 buckets are deprecated and explicitly disallowed in CSP policies.","importance":"LOW","cwe":["79"],"crBlocking":"NOT_BLOCKING","rules":["orangeboxconfiguration/path-style-s3-csp"]},"bosco/jdwp-non-xml":{"name":"Insecure Java Debug Wire Protocol (JDWP) configuration detected in your code","remediation":"The mitigation of this issue depends on your use case. If you do not require remote debugging or if the code insecurely configuring JDWP is not used, please remove the respective configuration options (e.g., `-agentlib:jdwp=..`, `-Xrunjdwp=..`). If remote debugging is required enable JDWP to use a local port and connect to the debugged machine over SSH.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/222 https://www.aristotle.a2z.com/recommendations/34","description":"The Java Debug Wire Protocol (JDWP) is the protocol used for communication between a debugger and the JVM being debugged. Deployed Java applications utilizing remote debugging via an open JDWP port are vulnerable to arbitrary code execution.\n","importance":"HIGH","cwe":["610","489","306"],"crBlocking":"NOT_BLOCKING","rules":["bosco/jdwp-xml","bosco/jdwp-non-xml"]},"documentation/ALLOW_WITH_NOT_PRINCIPAL":{"name":"IAM Policy with Allow effect and NotPrincipal","remediation":"We recommend that you specify principals that need access using the `Principal` element. Alternatively, you can allow broad access and then add another statement that uses the `NotPrincipal` element with \"Effect\": \"Deny\".\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/243","description":"We strongly recommend that you do not use NotPrincipal in the same policy statement as \"Effect\": \"Allow\". Doing so allows all principals except the one named in the NotPrincipal element. We do not recommend this because the permissions specified in the policy statement will be granted to all principals except for the ones specified. By doing this, you might grant access to anonymous (unauthenticated) users.\nThis finding was generated by ACAT using the Access Analyzer policy validator. You can check your policy in the policy validator using the IAM console to get a more detailed report on this finding. See here for more: * https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-policy-validation.html\n","importance":"MEDIUM","cwe":[],"crBlocking":"NOT_BLOCKING","rules":["documentation/ALLOW_WITH_NOT_PRINCIPAL"]},"bosco/jmx-open-port":{"name":"Insecure remote management and remote monitoring via JMX detected in your code","remediation":"Setting `com.sun.management.jmxremote.authenticate=false`\\n`com.sun.management.jmxremote.ssl=false`\\n (or their equivalent system properties `jmxremote.authenticate=false`, `jmxremote.ssl=false`) in your Java application, disables security for monitoring and management from remote systems. Note that if you are setting the property `com.sun.management.jmxremote.host=localhost`, then you are NOT vulnerable (for JDK 8u102 and above). \\n A detailed explanation of mitigation and verification is available in the linked Aristotle article. 1. If you do not require remote management and monitoring disable jmxremote by removing below jmxremote configuration:\\n jmxremote.port=  jmxremote.authenticate=false  jmxremote.ssl=false  2. If you cannot disable jmxremote, enable JMX to listen on localhost only: -Dcom.sun.management.jmxremote.host=localhost. If you need remote management, you can use SSH tunneling to access a JMX instance that is listening on localhost. Please see the Aristotle article for details on how to setup SSH tunneling.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/223 https://www.aristotle.a2z.com/recommendations/34 https://www.aristotle.a2z.com/recommendations/58","description":"Remote management/monitoring via JMX with disabled security is vulnerable to Remote Code Execution (RCE), allowing attackers to install malware, logging tools, or take control of the target host.  Setting com.sun.management.jmxremote.authenticate=false\\ncom.sun.management.jmxremote.ssl=false\\n (or their equivalent system properties jmxremote.authenticate=false, jmxremote.ssl=false) in your Java application, disables security properties for monitoring and management from remote systems. See the Aristotle article for more details.\n","importance":"HIGH","cwe":["489","287","526","319","1220"],"crBlocking":"NOT_BLOCKING","rules":["bosco/jmx-open-port","bosco/jmx-non-xml-rule"]},"guru/CommandInjectionPython":{"name":"Improper Neutralization of Input Used in a Command (Command Injection)","remediation":"If at all possible, use library and framework calls to perform the desired functionality rather than directly calling native OS commands. Where user input needs to be passed to an OS command, you should avoid using `Runtime.getRuntime().exec()`. Please convert a command string into an array and use `ProcessBuilder` in order to separate user inputs from commands. If a shell command (e.g., bash) is needed when calling `ProcessBuilder`, you must apply strict input validation, as well as output encoding and escaping of dangerous OS shell metacharacters.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/131 https://www.aristotle.a2z.com/implementations/132 https://www.aristotle.a2z.com/implementations/133 https://www.aristotle.a2z.com/recommendations/1","description":"Passing user-provided input to Python's subprocess, OS, and command functions without validation or sanitization makes your code vulnerable to running arbitrary OS commands. This could allow attackers to execute unexpected, dangerous commands directly on the operating system.\n","importance":"HIGH","cwe":["74","77","78","88"],"crBlocking":"NOT_BLOCKING","rules":["guru/CommandInjection","guru/CommandInjectionPython"]},"cfnlint/EA004":{"name":"SNS Topic without encryption","remediation":"Data published to an SNS topic should be encrypted via SSE.\nPlease see the following: https://www.aristotle.a2z.com/implementations/280","description":"Data passing through SNS may remain on the SNS service hosts for some time. During that time, a breach of SNS could potentially expose that data.","importance":"MEDIUM","cwe":["311","312","1013","922"],"crBlocking":"NOT_BLOCKING","rules":["cfnlint/EA004"]},"bosco/jdwp-xml":{"name":"Insecure Java Debug Wire Protocol (JDWP) configuration detected in your code","remediation":"The mitigation of this issue depends on your use case. If you do not require remote debugging or if the code insecurely configuring JDWP is not used, please remove the respective configuration options (e.g., `-agentlib:jdwp=..`, `-Xrunjdwp=..`). If remote debugging is required enable JDWP to use a local port and connect to the debugged machine over SSH.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/222 https://www.aristotle.a2z.com/recommendations/34","description":"The Java Debug Wire Protocol (JDWP) is the protocol used for communication between a debugger and the JVM being debugged. Deployed Java applications utilizing remote debugging via an open JDWP port are vulnerable to arbitrary code execution.\n","importance":"HIGH","cwe":["610","489","306"],"crBlocking":"NOT_BLOCKING","rules":["bosco/jdwp-xml","bosco/jdwp-non-xml"]},"cfnlint/EA003":{"name":"EBS volume without encryption","remediation":"All EBS volumes are encrypted.\nPlease see the following: https://www.aristotle.a2z.com/implementations/251","description":"If an EBS volume is unencrypted, a malicious actor gaining access to a raw data storage will be able to access the data stored at rest.","importance":"MEDIUM","cwe":["311","312","1013","922"],"crBlocking":"NOT_BLOCKING","rules":["cfnlint/EA003"]},"bosco/tomcat-directory-traversal":{"name":"Potential directory traversal","remediation":"When Tomcat is used behind a proxy, please ensure that both `ALLOW_BACKSLASH` and `ALLOW_ENCODED_SLASH` are set to `false`.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/372","description":"When Tomcat is used behind a proxy (including, but not limited to, Apache HTTP server with `mod_proxy` and `mod_jk`) configured to only proxy some contexts, an HTTP request containing strings like `../` may allow attackers to work around the context restriction of the proxy, and access the non-proxied contexts. An attacker could abuse this setting to bypass proxy protections and access arbitrary files on the system or possibly gain access to the Tomcat Manager Application.\n","importance":"MEDIUM","cwe":["22"],"crBlocking":"NOT_BLOCKING","rules":["bosco/tomcat-directory-traversal","bosco/tomcat-directory-traversal-xml"]},"bosco/ng-bind-html":{"name":"Unsafe AngularJS directive ngBindHtml used","remediation":"Please use safer alternatives to ng-bind-html like ng-bind.\nPlease see the following: https://www.aristotle.a2z.com/implementations/68 https://www.aristotle.a2z.com/recommendations/1","description":"With ngBindHtml directive, AngularJS attempts to sanitize the provided HTML with the requirement of using 'sanitize' library. However, this type of sanitization depends on complex tokenization that is error prone and is dependent on how the library works on specific browser. This leads to attacks like XSS.","importance":"HIGH","cwe":["838","20","79"],"crBlocking":"NOT_BLOCKING","rules":["bosco/ng-bind-html"]},"cfnlint/EA002":{"name":"SQS queue without encryption","remediation":"Ensure that all SQS queues use encryption at rest.\nPlease see the following: https://www.aristotle.a2z.com/implementations/122","description":"Data passing through SQS may remain on SQS service hosts for some time. During that time, a breach of SQS could potentially expose that data.","importance":"MEDIUM","cwe":["312"],"crBlocking":"NOT_BLOCKING","rules":["cfnlint/EA002"]},"cfnlint/EA001":{"name":"Data trace logging enabled in production","remediation":"Please disable the DataTraceEnabled option in production stages by setting DataTraceEnabled to False.\nPlease see the following: https://www.aristotle.a2z.com/implementations/233","description":"The DataTraceEnabled logging option should be disabled in production stages since it would capture full request response data in the logs.\n This might result in leaking sensitive customer data in the logs.","importance":"HIGH","cwe":["779"],"crBlocking":"NOT_BLOCKING","rules":["cfnlint/EA001"]},"bosco/unsafe-eval-csp-configuration":{"name":"Unsafe-eval in CSP configuration","remediation":"Please use safer alternatives to unsafe-eval.\nPlease see the following: https://www.aristotle.a2z.com/implementations/2 https://www.aristotle.a2z.com/recommendations/26","description":"A CSP header can protect websites against cross-site scripting(XSS). When properly configured, it helps modern browsers block any script or style that is not explicitly allowlisted. However, the use of 'unsafe-eval' in CSP allows eval() calls to be executed and thereby weakens the whole system.","importance":"MEDIUM","cwe":["16"],"crBlocking":"NOT_BLOCKING","rules":["bosco/unsafe-eval-csp-configuration"]},"guru/XmlExternalEntityInjectionTransformerFactory":{"name":"Insecure XML parser initialization in Java","remediation":"Configure your Java XML parser to disallow processing of Document Type Definition (DTD) or processing of any external reference in the XML document. For details on how to address this issue for a particular XML parser, please consult  the rule FAQ linked in the finding ticket. Consult your AppSec affinity engineer for approval on downgrading the finding severity from Sev2 to Sev3 in case the input to the parser is coming from trusted source.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/255 https://www.aristotle.a2z.com/recommendations/174","description":"XML parsers that allow XML external entity (XXE) resolution are susceptible to  XXE injection attacks which can lead to high impact security vulnerabilities  such as Server Side Request Forgery (SSRF) and disclosure of sensitive data  from the filesystem.\n","importance":"HIGH","cwe":["611"],"crBlocking":"__EVERYONE__","rules":["guru/XmlExternalEntityInjection","guru/XmlExternalEntityInjectionXmlInputFactory","guru/XmlExternalEntityInjectionSAXBuilderXMLReader","guru/XmlExternalEntityInjectionSAXParser","guru/XmlExternalEntityInjectionTransformerFactory","guru/XmlExternalEntityInjectionValidator","guru/XmlExternalEntityInjectionSchemaFactory"]},"guru/XmlExternalEntityInjectionXmlInputFactory":{"name":"Insecure XML parser initialization in Java","remediation":"Configure your Java XML parser to disallow processing of Document Type Definition (DTD) or processing of any external reference in the XML document. For details on how to address this issue for a particular XML parser, please consult  the rule FAQ linked in the finding ticket. Consult your AppSec affinity engineer for approval on downgrading the finding severity from Sev2 to Sev3 in case the input to the parser is coming from trusted source.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/255 https://www.aristotle.a2z.com/recommendations/174","description":"XML parsers that allow XML external entity (XXE) resolution are susceptible to  XXE injection attacks which can lead to high impact security vulnerabilities  such as Server Side Request Forgery (SSRF) and disclosure of sensitive data  from the filesystem.\n","importance":"HIGH","cwe":["611"],"crBlocking":"__EVERYONE__","rules":["guru/XmlExternalEntityInjection","guru/XmlExternalEntityInjectionXmlInputFactory","guru/XmlExternalEntityInjectionSAXBuilderXMLReader","guru/XmlExternalEntityInjectionSAXParser","guru/XmlExternalEntityInjectionTransformerFactory","guru/XmlExternalEntityInjectionValidator","guru/XmlExternalEntityInjectionSchemaFactory"]},"documentation/PASS_ROLE_WITH_STAR_IN_ACTION_AND_NOT_RESOURCE":{"name":"IAM Policy with PassRole, star in Action and NotResource","remediation":"We recommend that you specify allowed ARNs in the `Resource` element. Additionally, you can reduce permissions to a single service by using the `iam:PassedToService` condition key.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/243","description":"Policies with a wildcard (`*`) in the `Action` that include the `NotResource` element can allow your principals to access more services or features than you intended.\nThis finding was generated by ACAT using the Access Analyzer policy validator. You can run your policy in the IAM policy validator using the IAM console to get a more detailed report on this finding. See here for more: * https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-policy-validation.html\n","importance":"MEDIUM","cwe":["668","284"],"crBlocking":"NOT_BLOCKING","rules":["documentation/PASS_ROLE_WITH_STAR_IN_ACTION_AND_NOT_RESOURCE"]},"dragonglass/cryptoComplianceCipherNoIntegrity":{"name":"Cipher without integrity check","remediation":"Use approved ciphers.\nPlease see the following: https://www.aristotle.a2z.com/implementations/234","description":"Usage of weak cryptographic primitives allows attackers to access data they are not authorized to access. Strong encryption and signing is crucial to protect customer data.","importance":"MEDIUM","cwe":["1240","327","338","326","335","352","916","331"],"crBlocking":"NOT_BLOCKING","rules":["dragonglass/cryptoComplianceCipherNoIntegrity"]},"bosco/deprecated_odincsrftokenmanagers-xpath":{"name":"Usage of Deprecated OdinCsrfTokenManagers 0x80 and 0x81","remediation":"Version 0x83 should be used instead of the deprecated versions.\nPlease see the following: https://www.aristotle.a2z.com/implementations/312 https://www.aristotle.a2z.com/recommendations/97","description":"Versions 0x80 and 0x81 have been deprecated and updated to use a stronger HMAC protocol and a longer key(of minimum 16 bit length).","importance":"HIGH","cwe":["477","441"],"crBlocking":"NOT_BLOCKING","rules":["bosco/deprecated_odincsrftokenmanagers","bosco/deprecated_odincsrftokenmanagers-xpath"]},"cfnlint/EA009":{"name":"DocumentDB cluster without encryption","remediation":"Enable encryption for all DocumentDB clusters.\nPlease see the following: https://www.aristotle.a2z.com/implementations/313","description":"If a DocumentDB cluster is unencrypted, a malicious actor gaining access to the cluster will be able to access the data stored at rest.","importance":"MEDIUM","cwe":["311","312","1013","922"],"crBlocking":"NOT_BLOCKING","rules":["cfnlint/EA009"]},"cfnlint/EA008":{"name":"Redshift DB cluster without encryption","remediation":"Enable encryption in all Redshift DB clusters.\nPlease see the following: https://www.aristotle.a2z.com/implementations/140","description":"If a Redshift DB cluster is unencrypted, a malicious actor gaining access to the cluster will be able to access the data stored at rest.","importance":"MEDIUM","cwe":["311","312","1013","922"],"crBlocking":"NOT_BLOCKING","rules":["cfnlint/EA008"]},"bosco/unsafe-inline-csp-configuration":{"name":"Unsafe-inline in CSP configuration","remediation":"Please use safer alternatives to unsafe-inline like textContent.\nPlease see the following: https://www.aristotle.a2z.com/recommendations/228","description":"A CSP header can protect websites against cross-site scripting(XSS). When properly configured, it helps modern browsers block any script or style that is not explicitly allowlisted. However, the use of 'unsafe-inline' in CSP allows unknown scripts and styles to be executed and thereby weakens the whole system.","importance":"MEDIUM","cwe":["16"],"crBlocking":"NOT_BLOCKING","rules":["bosco/unsafe-inline-csp-configuration"]},"cfnlint/EA007":{"name":"Kinesis stream without encryption","remediation":"Enable encryption in all Kinesis streams.\nPlease see the following: https://www.aristotle.a2z.com/implementations/98","description":"If an Kinesis stream is unencrypted, a malicious actor gaining access to the stream will be able to access the data stored at rest.","importance":"MEDIUM","cwe":["311","312","1013","922"],"crBlocking":"NOT_BLOCKING","rules":["cfnlint/EA007"]},"bosco/config-open-network-access":{"name":"Open network access in Brazil Config","remediation":"Please disable network access by setting the value of \"network-access\" to \"blocked\". If your package requires network access for the build process, please consult your security engineer.\nResources: * Importing from a well-known repository: https://w.amazon.com/bin/view/BuilderTools/Product/BrazilThirdPartyTool/UserGuide#Install_BrazilThirdPartyTool_from_Builder_Toolbox * More background and recommendations on steps to remove open network access: http://h.com/bin/view/SandboxedBuilds/NetJailOptions * Slack Channel: #packagebuildopennetworkblocking * Open a ticket: https://issues.amazon.com/issues/create?template=1df58033-539d-4f1b-90fe-f4741328bf43\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/172","description":"Enabling network access during build is highly discouraged since it opens an avenue for attacks and enables dangerous practices such as using packages from the internet.\nStarting on 5/31/21 packages will not be allowed to have open network access during build. At this time, Brazil will no longer be respecting an open configuration and your builds may fail.\n","importance":"HIGH","cwe":["502"],"crBlocking":"NOT_BLOCKING","rules":["bosco/config-open-network-access"]},"cfnlint/EA006":{"name":"S3 bucket without encryption","remediation":"Enable encryption in all S3 buckets.\nPlease see the following: https://www.aristotle.a2z.com/implementations/169","description":"If an S3 bucket is unencrypted, a malicious actor gaining access to the bucket will be able to access the data stored at rest.","importance":"MEDIUM","cwe":["311","312","1013","922"],"crBlocking":"NOT_BLOCKING","rules":["cfnlint/EA006"]},"cfnlint/EA005":{"name":"Neptune DB cluster without encryption","remediation":"Neptune DB clusters have encryption enabled.\nPlease see the following: https://www.aristotle.a2z.com/implementations/272","description":"If an Neptune DB cluster is unencrypted, a malicious actor gaining access to the cluster will be able to access the data stored at rest.","importance":"MEDIUM","cwe":["311","312","1013","922"],"crBlocking":"NOT_BLOCKING","rules":["cfnlint/EA005"]},"bosco/coral-heapdump-guice-scala":{"name":"Insecure Coral HeapDump Handler Detected","remediation":"For Spring-based Coral services, the handler chain is typically defined in configuration/spring-configuration/application/service-chain.xml (look for bean reference <bean class=\\\"com.amazon.coral.service.HeapDumpHandler\\\"/>). For Guice-based Coral services or if your service uses a Spring config but does not use XML, the handler chain is typically defined in CoralModule.java (the specific path varies but look for an instantiation like `handlerChain.add(new HeapDumpHandler());`.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/198 https://www.aristotle.a2z.com/recommendations/34","description":"Coral HeapDump handler is enabled with insufficient access control. In production, any memory dump of the application will be vulnerable to unauthorized access, and there is also a risk of disk space exhaustion.\n","importance":"HIGH","cwe":["489","226","212","244"],"crBlocking":"NOT_BLOCKING","rules":["bosco/coral-heapdump-spring-xml","bosco/coral-heapdump-guice-scala"]},"guru/MixingServicePrincipals":{"name":"Allow-listing pre-production service principals to production","remediation":"Ensure that the allow-listed service principals correspond to the correct stage being configured.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/361 https://www.aristotle.a2z.com/recommendations/60","description":"Pre-production accounts typically have broader access than production accounts. Allow-listing pre-production service principals for production stages can lead to information disclosure and access control bypass in the latter.\n","importance":"MEDIUM","cwe":["285"],"crBlocking":"NOT_BLOCKING","rules":["guru/MixingServicePrincipals"]},"bosco/xml-decoder":{"name":"Avoid Deserialization with Xml Decoder","remediation":"Avoid using the readObject() method from the XmlDecoder class.\nPlease see the following: https://www.aristotle.a2z.com/implementations/311 https://www.aristotle.a2z.com/recommendations/170","description":"Deserialization from an untrusted source using the XMLDecoder library can lead to unexpected code execution.","importance":"HIGH","cwe":["74","16","502","91"],"crBlocking":"NOT_BLOCKING","rules":["bosco/xml-decoder"]},"bosco/coral-sigv4-xml":{"name":"Use Sigv4 as the secure default authentication mechanism","remediation":"Please migrate your service to use Sigv4 as the authentication mechanism.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/85","description":"All internal and external AWS Web Services should be using Sigv4 as their authentication mechanism. Please see [here](https://w.amazon.com/bin/view/AWSAuth/Signature/History) for more information about the flaws of non-V4 authentication.\n","importance":"MEDIUM","cwe":["287"],"crBlocking":"NOT_BLOCKING","rules":["bosco/coral-sigv4-xml"]},"documentation/DENY_WITH_UNSUPPORTED_TAG_CONDITION_KEY_FOR_SERVICE":{"name":"IAM Policy with Deny and unsupported tag condition key for service","remediation":"Please see the following: https://www.aristotle.a2z.com/implementations/243","description":"Using unsupported tag condition keys in the Condition element of a policy with \"Effect\": \"Deny\" can be overly permissive, because the condition is ignored for that service. We recommend that you remove the service actions that don’t support the condition key and create another statement to deny access to specific resources for those actions.\nIf you use the `aws:ResourceTag` condition key and it’s not supported by a service action, then the key is not included in the request context. In this case, the condition in the Deny statement always returns false and the action is never denied. This happens even if the resource is tagged correctly.\nWhen a service supports the `aws:ResourceTag` condition key, you can use tags to control access to that service’s resources. This is known as attribute-based access control (ABAC). Services that don’t support these keys require you to control access to resources using resource-based access control (RBAC).\nThis finding was generated by ACAT using the Access Analyzer policy validator. You can run your policy in the IAM policy validator using the IAM console to get a more detailed report on this finding. See here for more: * https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-policy-validation.html\n","importance":"MEDIUM","cwe":[],"crBlocking":"NOT_BLOCKING","rules":["documentation/DENY_WITH_UNSUPPORTED_TAG_CONDITION_KEY_FOR_SERVICE"]},"dragonglass/threadLocalInCoroutine":{"name":"Possible data leakage in Kotlin coroutine","remediation":"To use a `ThreadLocal` variable within a coroutine please make use of the [`ThreadLocal.asContextElement` function](https://kotlinlang.org/docs/coroutine-context-and-dispatchers.html#thread-local-data). It creates an additional context element which keeps the value of the given `ThreadLocal` and restores it every time the coroutine switches its context.\nPlease see the following: https://www.aristotle.a2z.com/recommendations/117","description":"Kotlin has the concept of coroutines, which have a different concurrency model than threads while still sharing some common characteristics (e.g., memory space sharing).  If a `ThreadLocal` variable is used within a coroutine without using `ThreadLocal.asContextElement` then data leaks might be possible. `ThreadLocal` memory is by definition localized to a thread.  Since coroutines aren't bound to the thread model, there is a chance that the memory being processed by one coroutine is accessed by another coroutine in the event where a coroutine is suspended or otherwise non-active.  The code flagged is launching a coroutine that uses `ThreadLocal` context without a previous call to the `ThreadLocal.asContextElement` function.\n","importance":"MEDIUM","cwe":["668"],"crBlocking":"NOT_BLOCKING","rules":["dragonglass/threadLocalInCoroutine"]},"bosco/amazon-dockerhub-image":{"name":"Container image hosted in DockerHub","remediation":"Please update the flagged resources to use images hosted in ECR public. If the image you're using is not available in ECR public, please follow the instructions here: * https://w.amazon.com/bin/view/Spencer/Onboarding/ECR-Public-Onboarding-FAQ/#HWhatiftheimagewereferenceisnotavailableinECRPublic3F\nIf you have more questions, please reach out to the `#ecr-public-onboarding-campaign` slack channel.\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/118","description":"Container images hosted in external repositories could be compromised or modified unexpectedly, affecting your availability and security posture. They could also be accidentally deleted or removed from the third party repository.\nEven when the image is hosted in DockerHub and belongs to the Amazon organization, DockerHub imposes lower throttling limits, which could impact the availability of your service.\n","importance":"HIGH","cwe":["829"],"crBlocking":"NOT_BLOCKING","rules":["bosco/amazon-dockerhub-image","cfnlint/EA021"]},"guru/HardcodedDatabasePasswordPython":{"name":"Hardcoded Database Connection Password","remediation":"Use AWS Secrets Manager (https://w.amazon.com/bin/view/SecretsManager/AWSServiceIntegrationWithSecretsManager/). Ensure that the exposed secrets are disabled and deleted from code.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/implementations/48 https://www.aristotle.a2z.com/recommendations/59","description":"A hardcoded database connection password is present in the code. Exposing database connection credentials means that anyone with access to the server can perform privileged actions to the database.\n","importance":"HIGH","cwe":["259","523","311","798","257"],"crBlocking":"NOT_BLOCKING","rules":["guru/HardcodedDatabasePasswordJava","guru/HardcodedDatabasePasswordPython","guru/HardcodedDatabasePasswordJavaScript"]},"bosco/php-mysql-hard-coded-credentials":{"name":"Hard Coded Database Credentials Detected","remediation":"For applications running in the Corp or Prod fabric - Use Odin (http://odin.amazon.com/)\nFor applications running in Native AWS - Consider AWS Secrets Manager (https://aws.amazon.com/secrets-manager/) or Odin Everywhere (https://w.amazon.com/index.php/Odin/OdinEverywhere).\nEnsure secrets are deleted from the code.\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/recommendations/59","description":"Hard coded or insecurely stored credentials in source code. These credentials can be seen by anyone with access to source code.","importance":"HIGH","cwe":["259","523","311","798","257"],"crBlocking":"NOT_BLOCKING","rules":["bosco/hibernate-hard-coded-credential","bosco/php-mysql-hard-coded-credentials"]},"documentation/confused-deputy":{"name":"IAM Policy missing confused deputy protection","remediation":"1. Double check the following:\n  a. If you believe you have been misidentified as the owner of the identified templates  — please state your use case in this ticket; you may not have any action to take.\n  b. If you know it's not an issue due to the template context, please describe why the identified template is not an issue. Doing so means you may not have any action to take.\n2. Otherwise:\n  a. Include `aws:SourceAccount` and/or `aws:SourceArn` in every example where a service principal is granted access via resource policy.\n  b. Either link to existing guidance or explain for customers what adding the context keys means access wise.\n3. Make sure that both the “Caller” and the “Callee” service are ready to support the new templates before pushing it out. AWS AppSec must verify the completion of the criteria and give documented approval before downgrading or closing this ticket.\nFor more information, please see the following: * https://w.amazon.com/bin/view/AWSAuth/AccessManagement/Resource_Policy_Confused_Deputy_Protection/ * https://w.amazon.com/bin/view/S3UserSecurity/Projects/ConfusedDeputyProtection/ * Join the \"confused-deputy\" slack channel\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/97","description":"Your service has been identified as owning/vending resource policies in a documentation page that could be affected by a confused deputy issue. If the resource polices specified include service principals without also specifying the `aws:sourceAccount` or `aws:sourceARN` context keys, we’re putting customers at risk.\n","importance":"HIGH","cwe":["441"],"crBlocking":"NOT_BLOCKING","rules":["documentation/confused-deputy"]},"orangeboxconfiguration/missing-default-src-csp":{"name":"Missing default-src directive in OrangeBox configuration","remediation":"Please define an appropriate 'default-src' directive in your CSP policy.\nPlease see the following: https://www.aristotle.a2z.com/implementations/347 https://www.aristotle.a2z.com/implementations/348","description":"A CSP policy helps protect websites against cross-site scripting (XSS) attacks. The 'default-src' directive in a CSP policy is a directive which serves as a fallback for other directives when they are not explicitly defined. Omitting the 'default-src' directive may reduce the effectiveness of the CSP policy and lead to XSS attacks.","importance":"MEDIUM","cwe":["79"],"crBlocking":"NOT_BLOCKING","rules":["orangeboxconfiguration/missing-default-src-csp"]},"gosec/G306":{"name":"Weak file permissions used when writing to a new file","remediation":"For most non-executable files, it is recommended to create them permissions 644 or stricter (owner can read/write, group/others can read).\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/61","description":"Creating a file with overly permissive access settings could expose information to the wrong sphere.\n","importance":"MEDIUM","cwe":["276"],"crBlocking":"NOT_BLOCKING","rules":["gosec/G306"]},"dragonglass/cryptoComplianceMac":{"name":"Insecure message authentication code","remediation":"Use approved message authentication codes.\nPlease see the following: https://www.aristotle.a2z.com/implementations/234","description":"Usage of weak cryptographic primitives allows attackers to access data they are not authorized to access. Strong encryption and signing is crucial to protect customer data.","importance":"MEDIUM","cwe":["326","327"],"crBlocking":"NOT_BLOCKING","rules":["dragonglass/cryptoComplianceMac"]},"guru/CrossSiteScriptingSpring":{"name":"Reflected Cross-site Scripting","remediation":"If possible, assume all inputs are malicious and use an \"accept known good\" input validation strategy, i.e., use a list of possible inputs that strictly conform to specifications. If this conservative approach is not applicable, perform proper encoding, escaping, and quoting. All data in the request should be validated, not just parameters that the user is supposed to specify. This includes things like hidden fields, cookies, headers, and the URL itself.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/324 https://www.aristotle.a2z.com/recommendations/189","description":"User provided data, such as URL parameters, POST data payloads, or cookies, should always be considered untrusted. Endpoints reflecting back untrusted data to the contents of a website could allow attackers to inject code that will be executed in the user’s browser. This could enable a wide range of serious attacks including stealing session cookies, downloading and installing malicious files, redirecting users to malicious domains, or even providing a vector to deliver a cross site request forgery (CSRF) attack.\n","importance":"HIGH","cwe":["74","79","80","81","83","84","86"],"crBlocking":"NOT_BLOCKING","rules":["bosco/jsp-request-parameter","guru/CrossSiteScripting","guru/CrossSiteScriptingSpring"]},"bosco/deprecated_odincsrftokenmanagers":{"name":"Usage of Deprecated OdinCsrfTokenManagers 0x80 and 0x81","remediation":"Version 0x83 should be used instead of the deprecated versions.\nPlease see the following: https://www.aristotle.a2z.com/implementations/312 https://www.aristotle.a2z.com/recommendations/97","description":"Versions 0x80 and 0x81 have been deprecated and updated to use a stronger HMAC protocol and a longer key(of minimum 16 bit length).","importance":"HIGH","cwe":["477","441"],"crBlocking":"NOT_BLOCKING","rules":["bosco/deprecated_odincsrftokenmanagers","bosco/deprecated_odincsrftokenmanagers-xpath"]},"bosco/apache-mtls-bypass":{"name":"Wildcard entries for client certificate in configuration files","remediation":"Service teams should not use wildcards anywhere within configuration files that are used to determine whether a client certificate is allowed to access the service. Visit https://www.aristotle.a2z.com/recommendations/137 to know more.\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/137","description":"Wildcard entries used in configuration files to allow client certificate to access the service. An attacker can request a certificate with a known pattern and access a restricted service.\n","importance":"HIGH","cwe":["295","284","287"],"crBlocking":"NOT_BLOCKING","rules":["bosco/apache-mtls-bypass"]},"gosec/G302":{"name":"Weak file permissions used with chmod","remediation":"For most directories, it is recommended to have permissions 755 or stricter (owner can read/write/execute, group/others can read/execute), and for files to have permissions 644 or stricter (owner can read/write, group/others can read).\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/61","description":"Overly permissive access settings could expose information to the wrong sphere.\n","importance":"MEDIUM","cwe":["276"],"crBlocking":"NOT_BLOCKING","rules":["gosec/G302"]},"bosco/plaintext-http":{"name":"Plaintext HTTP","remediation":"Any reference to HTTP should be replaced with HTTPS.\nPlease see the following: https://www.aristotle.a2z.com/recommendations/21","description":"When using http protocol, data in transit is unencrypted. In such cases, there is a threat of a network-based attacker who can eavesdrop/manipulate network traffic.","importance":"MEDIUM","cwe":["311","319"],"crBlocking":"NOT_BLOCKING","rules":["bosco/plaintext-http"]},"bosco/external_resources_via_Helm_charts":{"name":"Third-party software being installed from external resources via HelmCharts","remediation":"Host HelmCharts on AWS/Amazon owned domain or in S3.      Please consult the [Aristotle guidance](https://www.aristotle.a2z.com/implementations/419) for more information on how to mitigate this issue.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/419 https://www.aristotle.a2z.com/recommendations/118","description":"Third-party hosted HelmChart repositories dynamically loaded in your environment could be compromised or  modified unexpectedly, affecting chart availability and integrity.  These repositories can also be deleted or removed by third-party infrastructure either by mistake or through  an author’s decision to retire the dependency in question. An attacker can also leverage a vulnerable HelmChart YAML file to gain access to sensitive data  hosted in a Kubernetes cluster.\n","importance":"HIGH","cwe":["74"],"crBlocking":"NOT_BLOCKING","rules":["bosco/external_resources_via_Helm_charts"]},"bosco/rsa-private-key":{"name":"Hard Coded RSA Private Key Detected","remediation":"For applications running in the Corp or Prod fabric:Use Odin (http://odin.amazon.com/)\nFor applications running in Native AWS -  Consider AWS Secrets Manager (https://aws.amazon.com/secrets-manager/) or Odin Everywhere (https://w.amazon.com/index.php/Odin/OdinEverywhere).\nPlease see the following: https://www.aristotle.a2z.com/implementations/48 https://www.aristotle.a2z.com/recommendations/59","description":"Hard coded or insecurely stored secrets in source code. These credentials can be seen by anyone with access to source code.","importance":"HIGH","cwe":["259","672","311","798","257"],"crBlocking":"NOT_BLOCKING","rules":["bosco/rsa-private-key"]},"dragonstone/sensitive-data-logging":{"name":"Application logging of sensitive data","remediation":"Please do not log sensitive data and delete sensitive data that has already been recorded in logs.\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/44","description":"ACAT detected logging of data marked as sensitive using the sensitive trait in the corresponding Coral model. While using the sensitive trait will result in redacting the data marked as sensitive from the Coral request logs, it will have no effect if the data is logged in the application log.\nLogged information can be read and harvested by anyone with access to the logs. If the logged data contains sensitive information, it can be used by malicious actors to break the confidentiality of the system, hijack accounts, or enable other attacks.\n","importance":"HIGH","cwe":["497","209","532"],"crBlocking":"NOT_BLOCKING","rules":["guru/InsecureLogging","dragonstone/sensitive-data-logging"]},"gosec/G301":{"name":"Weak file permissions used when creating a directory","remediation":"In most cases, it is recommended to create directories with permissions 755 or stricter (owner can read/write/execute, group/others can read/execute).\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/61","description":"Creating a directory with overly permissive access settings could expose information to malicious actors.\n","importance":"MEDIUM","cwe":["276"],"crBlocking":"NOT_BLOCKING","rules":["gosec/G301"]},"guru/CrossSiteScripting":{"name":"Reflected Cross-site Scripting","remediation":"If possible, assume all inputs are malicious and use an \"accept known good\" input validation strategy, i.e., use a list of possible inputs that strictly conform to specifications. If this conservative approach is not applicable, perform proper encoding, escaping, and quoting. All data in the request should be validated, not just parameters that the user is supposed to specify. This includes things like hidden fields, cookies, headers, and the URL itself.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/324 https://www.aristotle.a2z.com/recommendations/189","description":"User provided data, such as URL parameters, POST data payloads, or cookies, should always be considered untrusted. Endpoints reflecting back untrusted data to the contents of a website could allow attackers to inject code that will be executed in the user’s browser. This could enable a wide range of serious attacks including stealing session cookies, downloading and installing malicious files, redirecting users to malicious domains, or even providing a vector to deliver a cross site request forgery (CSRF) attack.\n","importance":"HIGH","cwe":["74","79","80","81","83","84","86"],"crBlocking":"NOT_BLOCKING","rules":["bosco/jsp-request-parameter","guru/CrossSiteScripting","guru/CrossSiteScriptingSpring"]},"cfnlint/EAE01":{"name":"Bucket Policy Missing Confused Deputy Protection","remediation":"1. Double check the following:\n  a. If you believe you have been misidentified as the owner of the identified templates  — please state your use case in this ticket; you may not have any action to take.\n  b. If you know it's not an issue due to the template context, please describe why the identified template is not an issue. Doing so means you may not have any action to take.\n2. Otherwise:\n  a. Include `aws:SourceAccount` and/or `aws:SourceArn` in every example where a service principal is granted access via resource policy.\n  b. Either link to existing guidance or explain for customers what adding the context keys means access wise.\n3. Make sure that both the “Caller” and the “Callee” service are ready to support the new templates before pushing it out. Appsec must verify the completion of the criteria and give documented approval before downgrading or closing this ticket.\nFor more information, please see the following: * https://w.amazon.com/bin/view/AWSAuth/AccessManagement/Resource_Policy_Confused_Deputy_Protection/ * https://w.amazon.com/bin/view/S3UserSecurity/Projects/ConfusedDeputyProtection/ * Join the \"confused-deputy\" slack channel\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/97","description":"When one AWS service (ServiceA) uses their Service Principal to call another (such as S3) to access a resource on a customer’s behalf, customers need a way to assert that ServiceA is accessing their resource on behalf of expected users and scenarios only. This is done by setting and checking `aws:SourceAccount` and `aws:SourceArn` during these calls. Otherwise, a customer does not have a way to prevent an unwanted actor using ServiceA to get access to resources in ServiceB.\n","importance":"HIGH","cwe":["441"],"crBlocking":"NOT_BLOCKING","rules":["bosco/s3-confused-deputy","cfnlint/EAE01"]},"bosco/hibernate-hard-coded-credential":{"name":"Hard Coded Database Credentials Detected","remediation":"For applications running in the Corp or Prod fabric - Use Odin (http://odin.amazon.com/)\nFor applications running in Native AWS - Consider AWS Secrets Manager (https://aws.amazon.com/secrets-manager/) or Odin Everywhere (https://w.amazon.com/index.php/Odin/OdinEverywhere).\nEnsure secrets are deleted from the code.\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/recommendations/59","description":"Hard coded or insecurely stored credentials in source code. These credentials can be seen by anyone with access to source code.","importance":"HIGH","cwe":["259","523","311","798","257"],"crBlocking":"NOT_BLOCKING","rules":["bosco/hibernate-hard-coded-credential","bosco/php-mysql-hard-coded-credentials"]},"bosco/java-weak-cipher":{"name":"Weak cipher","remediation":"Use approved ciphers.\nPlease see the following: https://www.aristotle.a2z.com/implementations/234 https://www.aristotle.a2z.com/recommendations/17","description":"Usage of weak cryptographic primitives allows attackers to access data they are not authorized to access. Strong encryption and signing is crucial to protect customer data.","importance":"HIGH","cwe":["327","326"],"crBlocking":"NOT_BLOCKING","rules":["bosco/java-weak-cipher","dragonglass/cryptoComplianceCipher"]},"guru/InsecureLogging":{"name":"Application logging of sensitive data","remediation":"Please do not log sensitive data and delete sensitive data that has already been recorded in logs.\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/44","description":"ACAT detected logging of data marked as sensitive using the sensitive trait in the corresponding Coral model. While using the sensitive trait will result in redacting the data marked as sensitive from the Coral request logs, it will have no effect if the data is logged in the application log.\nLogged information can be read and harvested by anyone with access to the logs. If the logged data contains sensitive information, it can be used by malicious actors to break the confidentiality of the system, hijack accounts, or enable other attacks.\n","importance":"HIGH","cwe":["497","209","532"],"crBlocking":"NOT_BLOCKING","rules":["guru/InsecureLogging","dragonstone/sensitive-data-logging"]},"dragonglass/cryptoComplianceDigest":{"name":"Insecure cryptographic hash function","remediation":"Use approved cryptographic hash functions - https://policy.amazon.com/standard/143\n","description":"Usage of weak cryptographic primitives allows attackers to access data they are not authorized to access. Strong encryption and signing is crucial to protect customer data.","importance":"MEDIUM","cwe":["327"],"crBlocking":"NOT_BLOCKING","rules":["dragonglass/cryptoComplianceDigest"]},"bosco/no-xss-header":{"name":"Missing X-XSS-Protection header in OrangeBox configuration","remediation":"Set the X-XSS-Protection header within OranbeBox configurations.\nPlease see the following: https://www.aristotle.a2z.com/recommendations/26","description":"The X-XSS-Protection header instructs Web Browsers to enable their XSS filters. Setting this header to an appropriate value adds an additional layer of security against XSS.","importance":"HIGH","cwe":["16"],"crBlocking":"NOT_BLOCKING","rules":["bosco/no-xss-header"]},"guru/XmlExternalEntityInjectionValidator":{"name":"Insecure XML parser initialization in Java","remediation":"Configure your Java XML parser to disallow processing of Document Type Definition (DTD) or processing of any external reference in the XML document. For details on how to address this issue for a particular XML parser, please consult  the rule FAQ linked in the finding ticket. Consult your AppSec affinity engineer for approval on downgrading the finding severity from Sev2 to Sev3 in case the input to the parser is coming from trusted source.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/255 https://www.aristotle.a2z.com/recommendations/174","description":"XML parsers that allow XML external entity (XXE) resolution are susceptible to  XXE injection attacks which can lead to high impact security vulnerabilities  such as Server Side Request Forgery (SSRF) and disclosure of sensitive data  from the filesystem.\n","importance":"HIGH","cwe":["611"],"crBlocking":"__EVERYONE__","rules":["guru/XmlExternalEntityInjection","guru/XmlExternalEntityInjectionXmlInputFactory","guru/XmlExternalEntityInjectionSAXBuilderXMLReader","guru/XmlExternalEntityInjectionSAXParser","guru/XmlExternalEntityInjectionTransformerFactory","guru/XmlExternalEntityInjectionValidator","guru/XmlExternalEntityInjectionSchemaFactory"]},"guru/JQueryVulnerableVersion":{"name":"Referenced jQuery with known vulnerabilities","remediation":"The recommended approach for using jQuery internally is to use NpmPrettyMuch  (https://w.amazon.com/bin/view/NpmPrettyMuch). Do not use jQuery library version below 3.5.0\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/11","description":"Referencing jQuery versions older than 3.5.0 is known to introduce Cross-Site Scripting and  Prototype Pollution vulnerabilities in the application.\n","importance":"HIGH","cwe":[],"crBlocking":"NOT_BLOCKING","rules":["guru/JQueryVulnerableVersion"]},"dragonglass/cryptoComplianceSecureRandom":{"name":"Not recommended instantiation of java.security.SecureRandom","remediation":"Avoid using SecureRandom.getInstance(). Use new SecureRandom() instead.\nPlease see the following: https://www.aristotle.a2z.com/recommendations/224","description":"Instantiating SecureRandom with SecureRandom.getInstance() is potentially insecure. The PRNG algorithm selection should be left to the implementation and not enforced by the user.","importance":"MEDIUM","cwe":["330","338"],"crBlocking":"NOT_BLOCKING","rules":["dragonglass/cryptoComplianceSecureRandom"]},"bosco/third-party-code-includes":{"name":"Third party code embedded in the package","remediation":"If the third-party code you would like to use exists as a GitFarm package, then declare a dependency to that code in your BrazilConfig file in order to use it, otherwise, please utilize BrazilThirdPartyTool to import it.\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/11","description":"Directly embedding third-party libraries or frameworks in your package presents a security risk as the corresponding code might contain unpatched security vulnerabilities or remain outdated for long periods of time.  Check if your third-party packages already exist in GitFarm and import it in your Brazil Config file. If the code you'd like to import is not in GitFarm please use BrazilThirdPartyTool to import it.\n","importance":"MEDIUM","cwe":["829","1104"],"crBlocking":"NOT_BLOCKING","rules":["bosco/third-party-code-includes"]},"bosco/short-hibernate-id":{"name":"Database key with insufficient size","remediation":"The auto-increment field of the table should be either a 64 bit integer (i.e., a long), or a string to avoid integer overflow problems when the number of table entries cannot be stored in a 32 bit integer.\nPlease see the following: https://www.aristotle.a2z.com/implementations/339 https://www.aristotle.a2z.com/recommendations/48","description":"Setting the database key to a 32-bit integer allows for, at most, 2^32-1 entries in the database table. Exceeding this number of entries in the table can lead to a total or partial application outage. Unless there is a well-defined upper bound on the number of entries in your database table, please consider setting the table identifier to a 64-bit integer (i.e. a long) or a string.","importance":"MEDIUM","cwe":["787"],"crBlocking":"NOT_BLOCKING","rules":["bosco/short-hibernate-id"]},"hardcodedcredentials/active-aws-creds":{"name":"Active Hardcoded AWS Credentials","remediation":"The hardcoded credentials should be considered compromised and must be rotated immediately. You can find  detailed steps on rotating the credentials in the rule FAQ linked in this ticket. Furthermore, ensure that the credentials associated with this finding are removed from the codebase. \nNever hardcode or store AWS credentials.  For applications running in native AWS, use IAM Roles. For applications in Substrate/Prod/Corp use Turtle. Example or test AWS credentials must comply with the [style guide for safe names](https://alpha.www.docs.aws.a2z.com/awsstyleguide/latest/styleguide/safenames.html#credentials).\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/48 https://www.aristotle.a2z.com/recommendations/59","description":"Hardcoded AWS credentials enable unauthorized access to the account to which the credentials belong. This can lead to  various attacks such as unauthorized access to sensitive data and using the compromised account for launching  other attacks.\nTickets are assigned based on the ownership of the account, when possible. Otherwise the owner of the code package will be ticketed.\n","importance":"CRITICAL","cwe":["259","523","311","798","257"],"crBlocking":"__EVERYONE__","rules":["hardcodedcredentials/active-aws-creds"]},"bosco/no-content-header":{"name":"Missing X-Content-Type-Options header in OrangeBox configuration","remediation":"Set the X-Content-Type-Options header within OranbeBox configurations.\nPlease see the following: https://www.aristotle.a2z.com/recommendations/26","description":"The X-Content-Type-Options header can be set to instruct Web Browsers to only load content when the correct MIME type is set thus providing protection against some types of XSS attacks.","importance":"HIGH","cwe":["16"],"crBlocking":"NOT_BLOCKING","rules":["bosco/no-content-header"]},"bosco/xsa":{"name":"Cross-Site Authentication (XSA)","remediation":"Please use target=\"_blank\" and rel=\"noopener noreferrer\" for any links you define towards untrusted sites. For example, the anchor tag `<a href=\"www.untrusted.com\">` should become `<a href=\"www.untrusted.com\" target=\"_blank\" rel=\"noopener noreferrer\">`\n\n","description":"Cross-Site Authentication (XSA) is an attack where a trusted site links to an untrusted (third-party) site that then requests an HTTP authentication prompt to be displayed on the foreground of the trusted site. This can confuse users on the origin of the prompt and can result in users giving away their credentials.\n","importance":"MEDIUM","cwe":["200"],"crBlocking":"NOT_BLOCKING","rules":["bosco/xsa"]},"bosco/jsp-request-parameter":{"name":"Reflected Cross-site Scripting","remediation":"If possible, assume all inputs are malicious and use an \"accept known good\" input validation strategy, i.e., use a list of possible inputs that strictly conform to specifications. If this conservative approach is not applicable, perform proper encoding, escaping, and quoting. All data in the request should be validated, not just parameters that the user is supposed to specify. This includes things like hidden fields, cookies, headers, and the URL itself.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/324 https://www.aristotle.a2z.com/recommendations/189","description":"User provided data, such as URL parameters, POST data payloads, or cookies, should always be considered untrusted. Endpoints reflecting back untrusted data to the contents of a website could allow attackers to inject code that will be executed in the user’s browser. This could enable a wide range of serious attacks including stealing session cookies, downloading and installing malicious files, redirecting users to malicious domains, or even providing a vector to deliver a cross site request forgery (CSRF) attack.\n","importance":"HIGH","cwe":["74","79","80","81","83","84","86"],"crBlocking":"NOT_BLOCKING","rules":["bosco/jsp-request-parameter","guru/CrossSiteScripting","guru/CrossSiteScriptingSpring"]},"bosco/aws-cli-no-ssl":{"name":"AWS CLI usage without verifying Server Certificate","remediation":"Please do NOT explicitly disable server certificate verification with --no-verify-ssl option in your AWS cli commands.\nPlease see the following: https://www.aristotle.a2z.com/implementations/304","description":"Verifying the identity of the hosts you are connecting to applies to most protocols like SSH, LDAP etc.\nCertificate validation should be enabled by default when using aws cli, otherwise, it would lead to authentication bypass or man-in-the-middle attacks.","importance":"HIGH","cwe":["295"],"crBlocking":"NOT_BLOCKING","rules":["bosco/aws-cli-no-ssl"]},"guru/XmlExternalEntityInjectionSAXParser":{"name":"Insecure XML parser initialization in Java","remediation":"Configure your Java XML parser to disallow processing of Document Type Definition (DTD) or processing of any external reference in the XML document. For details on how to address this issue for a particular XML parser, please consult  the rule FAQ linked in the finding ticket. Consult your AppSec affinity engineer for approval on downgrading the finding severity from Sev2 to Sev3 in case the input to the parser is coming from trusted source.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/255 https://www.aristotle.a2z.com/recommendations/174","description":"XML parsers that allow XML external entity (XXE) resolution are susceptible to  XXE injection attacks which can lead to high impact security vulnerabilities  such as Server Side Request Forgery (SSRF) and disclosure of sensitive data  from the filesystem.\n","importance":"HIGH","cwe":["611"],"crBlocking":"__EVERYONE__","rules":["guru/XmlExternalEntityInjection","guru/XmlExternalEntityInjectionXmlInputFactory","guru/XmlExternalEntityInjectionSAXBuilderXMLReader","guru/XmlExternalEntityInjectionSAXParser","guru/XmlExternalEntityInjectionTransformerFactory","guru/XmlExternalEntityInjectionValidator","guru/XmlExternalEntityInjectionSchemaFactory"]},"guru/HardcodedFluxoPasswordJava":{"name":"Hardcoded Fluxo Client Password","remediation":"For applications running in the Corp or Prod fabric: Use Odin (http://odin.amazon.com/). For applications running in Native AWS - consider AWS Secrets Manager (https://aws.amazon.com/secrets-manager/) or Odin Everywhere (https://w.amazon.com/index.php/Odin/OdinEverywhere).\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/implementations/48 https://www.aristotle.a2z.com/recommendations/59","description":"Having the username and password for Fluxo grants you the permission to create, read, and take actions on all tickets/CTIs that the resolver groups has permission to access. Exposing the username and password means that someone who is not supposed to have permissions could be able to perform unauthorized actions on tickets.\n","importance":"HIGH","cwe":["259","523","311","798","257"],"crBlocking":"NOT_BLOCKING","rules":["guru/HardcodedFluxoPasswordJava","guru/HardcodedFluxoPasswordPython"]},"hostnametypo/mistyped-hostname":{"name":"Typo in hostname","remediation":"Please fix the typo in the hostname.\nPlease see the following: https://www.aristotle.a2z.com/implementations/180","description":"Typos in hostnames may result in retrieving sensitive resources such as code from potentially malicious servers.","importance":"MEDIUM","cwe":["829"],"crBlocking":"NOT_BLOCKING","rules":["hostnametypo/mistyped-hostname"]},"guru/SQLInjectionPython":{"name":"Improper neutralization of input used in an SQL command (Python) (SQL Injection)","remediation":"Use prepared statements with parameterized queries whenever possible. Parameterized queries are very useful against SQL injection because they allow the database to distinguish between SQL code and data, regardless of what user input is supplied. Where parameterized queries are not possible, you must apply strict input validation and sanitization.\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/16","description":"An SQL injection attack can occur when untrusted user input is included in a SQL statement in such a way  that the input is treated as SQL code. If the input is not validated or sanitized, a malicious actor can alter query logic, or insert additional statements that modify the backend database.\n","importance":"HIGH","cwe":["89"],"crBlocking":"NOT_BLOCKING","rules":["guru/SQLInjectionPython"]},"bosco/tomcat-directory-traversal-xml":{"name":"Potential directory traversal","remediation":"When Tomcat is used behind a proxy, please ensure that both `ALLOW_BACKSLASH` and `ALLOW_ENCODED_SLASH` are set to `false`.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/372","description":"When Tomcat is used behind a proxy (including, but not limited to, Apache HTTP server with `mod_proxy` and `mod_jk`) configured to only proxy some contexts, an HTTP request containing strings like `../` may allow attackers to work around the context restriction of the proxy, and access the non-proxied contexts. An attacker could abuse this setting to bypass proxy protections and access arbitrary files on the system or possibly gain access to the Tomcat Manager Application.\n","importance":"MEDIUM","cwe":["22"],"crBlocking":"NOT_BLOCKING","rules":["bosco/tomcat-directory-traversal","bosco/tomcat-directory-traversal-xml"]},"guru/ReDoSCoral":{"name":"Regular expression Denial of Service (ReDoS)","remediation":"Inspect whether your application is using regular expression to parse data or any form of string input.  Ensure that all those regular expressions do not contain vulnerable structures that  could introduce catastrophic backtracking. Please find more information about the vulnerable structures in [the Aristotle guidance](https://www.aristotle.a2z.com/implementations/192).  You can run [acat-cli](https://w.amazon.com/bin/view/AWS_IT_Security/Security_Automation_Integrators/ACAT/Guides/CLI) on the flagged package to verify your fix, and to obtain the the specific vulnerable structure of  the flagged regular expression, along with the corresponding attack string. Please be very careful when  changing the logic of input validation for a service that is already in production. Before deploying the  fix, please validate the new regular expression against all the current data.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/192","description":"Regular-expression Denial of Service (ReDoS) occurs when the regex matcher implementation takes too long to decide whether an input string matches. This is due to catastrophic backtracking, which means  the implementation tries too many ways to match an input with a regex one character after another.  An attacker can craft particular strings to trigger the worst-case matching time of vulnerable  regular expressions, leading to overwhelming, or crashing the application.\n","importance":"HIGH","cwe":["1333"],"crBlocking":"NOT_BLOCKING","rules":["guru/ReDoSCoral"]},"bosco/jsonp":{"name":"JSONP Usage Detected","remediation":"Use CORS instead of JSONP.\nPlease see the following: https://www.aristotle.a2z.com/implementations/237 https://www.aristotle.a2z.com/recommendations/31","description":"JSONP is not an approved technology at Amazon, because enabling it opens the requester to the prospect of a cross-domain script injection.","importance":"HIGH","cwe":["668","1240","942","338","326","335","352","916","331"],"crBlocking":"NOT_BLOCKING","rules":["bosco/jsonp"]},"bosco/java-hard-coded-timber-credential":{"name":"Hard Coded Timber Credentials Detected","remediation":"For applications running in the Corp or Prod fabric:Use Odin (http://odin.amazon.com/)\nFor applications running in Native AWS - Consider AWS Secrets Manager (https://aws.amazon.com/secrets-manager/) or Odin Everywhere (https://w.amazon.com/index.php/Odin/OdinEverywhere).\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/recommendations/59","description":"Hard coded or insecurely stored credentials in source code. These credentials can be seen by anyone with access to source code.","importance":"HIGH","cwe":["259","523","311","798","257"],"crBlocking":"NOT_BLOCKING","rules":["bosco/java-hard-coded-timber-credential"]},"guru/ConnectionStringInjection":{"name":"Improper Neutralization of Input Used in a Database Connection String","remediation":"If possible, assume all inputs are malicious and use an \"accept known good\" input validation strategy, i.e., use a list of possible inputs that strictly conform to specifications. If this conservative approach is not applicable, you must apply strict output encoding and escaping of dangerous connection string metacharacters, including question marks (?), ampersands (&), and any other possible delimiters.\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/1","description":"A connection string injection attack can occur when dynamic string concatenation is used to build connection strings that are based on untrusted user input. If the string is not properly validated and sanitized, an attacker can potentially access sensitive data on the server, or use it as a gadget for Java deserialization attacks.\n","importance":"HIGH","cwe":["137"],"crBlocking":"NOT_BLOCKING","rules":["guru/ConnectionStringInjection"]},"bosco/insecure-csrf-config":{"name":"Missing or insecure CSRF protection in OrangeBox configuration","remediation":"Please enable CSRF protection in OrangeBox consoles.\nPlease see the following: https://www.aristotle.a2z.com/implementations/167","description":"CSRF is a traditional web application vulnerability where an authenticated and authorized user can confuse your service into misusing its authority to grant access to resources of another customer. OrangeBox consoles can protect from CSRF by enabling the generation of CSRF tokens within the OrangeBox configuration file.","importance":"HIGH","cwe":["352"],"crBlocking":"NOT_BLOCKING","rules":["bosco/insecure-csrf-config"]},"documentation/PASS_ROLE_WITH_NOT_ACTION_AND_NOT_RESOURCE":{"name":"IAM Policy with PassRole, NotAction and NotResource","remediation":"We recommend that you specify allowed ARNs in the `Resource` element. Additionally, you can reduce permissions to a single service by using the `iam:PassedToService` condition key.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/243","description":"Using the `NotAction` element and listing some resources in the `NotResource` element can allow your principals to access more services or features than you intended.\nThis finding was generated by ACAT using the Access Analyzer policy validator. You can run your policy in the IAM policy validator using the IAM console to get a more detailed report on this finding. See here for more: * https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-policy-validation.html\n","importance":"MEDIUM","cwe":["668","284"],"crBlocking":"NOT_BLOCKING","rules":["documentation/PASS_ROLE_WITH_NOT_ACTION_AND_NOT_RESOURCE"]},"gosec/G402":{"name":"Weak TLS connection settings","remediation":"For general guidance around configuring TLS securely, please see https://w.amazon.com/bin/view/AWS_Security_Assurance/AWS_SAPR/AWS_GEAR/GEAR_CORE/GC5/\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/234 https://www.aristotle.a2z.com/recommendations/21","description":"Insecure TLS configurations could compromise the security of your data in transit.\n","importance":"HIGH","cwe":["295"],"crBlocking":"NOT_BLOCKING","rules":["gosec/G402"]},"bosco/external-cocoapods":{"name":"CocoaPods pointing to external repositories","remediation":"Please ensure that you are following the CocoaPods usage guidelines found [here](https://w.amazon.com/bin/view/BrazilBuildSystem/CocoaPods/#HConsumingaThird-PartyCocoaPod).\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/118","description":"Third party dependencies pulled from external repositories could become compromised or modified unexpectedly, affecting your availability and security posture.\nPackages will not be allowed to have access to the network during MacOS builds in the near future. At that time, packages accessing external repositories directly will be failing.\n","importance":"HIGH","cwe":["829"],"crBlocking":"NOT_BLOCKING","rules":["bosco/external-cocoapods"]},"bosco/non-ecr-docker-image":{"name":"Container Images Hosted in External Repositories","remediation":"1.[BuilderHub security guidelines](https://builderhub.corp.amazon.com/docs/containers-repo-usage.html)  require all container images to be pulled from an internal ECR repository,  meaning the repository is owned by either a Conduit or Isengard account. These guidelines also provide a list of internal images on ECR. 2.[ECR-Public-Onboarding-FAQ](https://w.amazon.com/bin/view/Spencer/Onboarding/ECR-Public-Onboarding-FAQ)  provides guidance on how to update code references to external repositories to ECR Public,  as well as instructions for Amazon images migration to ECR Public. If you have more questions, please reach out to the #ecr-public-onboarding-campaign Slack channel. 3. You can create or access company repositories on ACR at https://acr.builder-tools.aws.dev/#/.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/367 https://www.aristotle.a2z.com/implementations/368 https://www.aristotle.a2z.com/recommendations/118","description":"Usage of external images detected in a Dockerfile. Images are considered external if they are not hosted on ECR or ACR.  Directly referencing third-party hosted dependencies can lead to a compromise of an Amazon product or service  due to a lack of consistent security bar being applied to the third-party resources. Utilizing external images in Dockerfiles risks the security of the service: if the image repository service is compromised,  the container image will also be compromised.  Moreover, using external Docker images poses an availability risk if the image pull is throttled.\n","importance":"HIGH","cwe":["829"],"crBlocking":"NOT_BLOCKING","rules":["bosco/non-ecr-docker-image"]},"gosec/G403":{"name":"Insecure RSA key length","remediation":"Please use approved ciphers as per w.amazon.com/index.php/AWSCryptoBR/Cryptosystems\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/234 https://www.aristotle.a2z.com/recommendations/17","description":"Usage of RSA with a key that has fewer than 2048 bits is not allowed within AWS unless you have explicit sign-off by both AWS AppSec and CryptoBR, as such small keys offer insufficient security guarantees.\n","importance":"HIGH","cwe":["310"],"crBlocking":"NOT_BLOCKING","rules":["gosec/G403"]},"bosco/banned-c-api":{"name":"Unsafe C functions that do not check memory bounds","remediation":"Avoid using the unsafe c/cpp library methods.\nPlease see the following: https://www.aristotle.a2z.com/implementations/290 https://www.aristotle.a2z.com/recommendations/74","description":"C or CPP library methods like strcpy(), sprintf(), gets(), which do not consider bounds verification are notorious and \n usage of such methods would lead to un-intended out-of-bounds read/write attacks from malicious users.","importance":"MEDIUM","cwe":["120","242","937","676"],"crBlocking":"NOT_BLOCKING","rules":["bosco/banned-c-api"]},"bosco/prod-wire-logging-in-log4j-xml-file":{"name":"Wire Logging Enabled in Prod","remediation":"Wire logging should be disabled.\nPlease see the following: https://www.aristotle.a2z.com/implementations/39 https://www.aristotle.a2z.com/recommendations/34","description":"Wire logging, in addition to producing extremely large amounts of log data, has the possibility of logging critical and restricted data. Enabling wire logging in production can lead to leakage of such data.","importance":"HIGH","cwe":["489","532"],"crBlocking":"NOT_BLOCKING","rules":["bosco/prod-wire-logging-in-log4j-xml-file","bosco/prod-wire-logging-in-log4j-properties-file"]},"guru/XmlExternalEntityInjectionSAXBuilderXMLReader":{"name":"Insecure XML parser initialization in Java","remediation":"Configure your Java XML parser to disallow processing of Document Type Definition (DTD) or processing of any external reference in the XML document. For details on how to address this issue for a particular XML parser, please consult  the rule FAQ linked in the finding ticket. Consult your AppSec affinity engineer for approval on downgrading the finding severity from Sev2 to Sev3 in case the input to the parser is coming from trusted source.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/255 https://www.aristotle.a2z.com/recommendations/174","description":"XML parsers that allow XML external entity (XXE) resolution are susceptible to  XXE injection attacks which can lead to high impact security vulnerabilities  such as Server Side Request Forgery (SSRF) and disclosure of sensitive data  from the filesystem.\n","importance":"HIGH","cwe":["611"],"crBlocking":"__EVERYONE__","rules":["guru/XmlExternalEntityInjection","guru/XmlExternalEntityInjectionXmlInputFactory","guru/XmlExternalEntityInjectionSAXBuilderXMLReader","guru/XmlExternalEntityInjectionSAXParser","guru/XmlExternalEntityInjectionTransformerFactory","guru/XmlExternalEntityInjectionValidator","guru/XmlExternalEntityInjectionSchemaFactory"]},"dragonglass/cryptoComplianceKeyPairGenerator":{"name":"Insecure usage of java.security.KeyPairGenerator","remediation":"Use approved ciphers.\nPlease see the following: https://www.aristotle.a2z.com/implementations/234 https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/recommendations/327 https://www.aristotle.a2z.com/recommendations/17 https://www.aristotle.a2z.com/recommendations/59","description":"Usage of weak cryptographic primitives allows attackers to access data they are not authorized to access. Strong encryption and signing is crucial to protect customer data.","importance":"HIGH","cwe":["327"],"crBlocking":"NOT_BLOCKING","rules":["dragonglass/cryptoComplianceKeyPairGenerator","dragonglass/cryptoComplianceKeyGenerator"]},"dragonglass/cryptoComplianceKeyAgreement":{"name":"Usage of javax.crypto.KeyAgreement","remediation":"Use approved ciphers.\nPlease see the following: https://www.aristotle.a2z.com/implementations/234 https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/recommendations/17 https://www.aristotle.a2z.com/recommendations/59","description":"The class javax.crypto.KeyAgreement provides access to low level cryptographic primitives and its usage should be avoided.","importance":"MEDIUM","cwe":["327","322"],"crBlocking":"NOT_BLOCKING","rules":["dragonglass/cryptoComplianceKeyAgreement"]},"bosco/prod-wire-logging-in-log4j-properties-file":{"name":"Wire Logging Enabled in Prod","remediation":"Wire logging should be disabled.\nPlease see the following: https://www.aristotle.a2z.com/implementations/39 https://www.aristotle.a2z.com/recommendations/34","description":"Wire logging, in addition to producing extremely large amounts of log data, has the possibility of logging critical and restricted data. Enabling wire logging in production can lead to leakage of such data.","importance":"HIGH","cwe":["489","532"],"crBlocking":"NOT_BLOCKING","rules":["bosco/prod-wire-logging-in-log4j-xml-file","bosco/prod-wire-logging-in-log4j-properties-file"]},"bosco/s3-confused-deputy":{"name":"Bucket Policy Missing Confused Deputy Protection","remediation":"1. Double check the following:\n  a. If you believe you have been misidentified as the owner of the identified templates  — please state your use case in this ticket; you may not have any action to take.\n  b. If you know it's not an issue due to the template context, please describe why the identified template is not an issue. Doing so means you may not have any action to take.\n2. Otherwise:\n  a. Include `aws:SourceAccount` and/or `aws:SourceArn` in every example where a service principal is granted access via resource policy.\n  b. Either link to existing guidance or explain for customers what adding the context keys means access wise.\n3. Make sure that both the “Caller” and the “Callee” service are ready to support the new templates before pushing it out. Appsec must verify the completion of the criteria and give documented approval before downgrading or closing this ticket.\nFor more information, please see the following: * https://w.amazon.com/bin/view/AWSAuth/AccessManagement/Resource_Policy_Confused_Deputy_Protection/ * https://w.amazon.com/bin/view/S3UserSecurity/Projects/ConfusedDeputyProtection/ * Join the \"confused-deputy\" slack channel\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/97","description":"When one AWS service (ServiceA) uses their Service Principal to call another (such as S3) to access a resource on a customer’s behalf, customers need a way to assert that ServiceA is accessing their resource on behalf of expected users and scenarios only. This is done by setting and checking `aws:SourceAccount` and `aws:SourceArn` during these calls. Otherwise, a customer does not have a way to prevent an unwanted actor using ServiceA to get access to resources in ServiceB.\n","importance":"HIGH","cwe":["441"],"crBlocking":"NOT_BLOCKING","rules":["bosco/s3-confused-deputy","cfnlint/EAE01"]},"bosco/apache-zeppelin-hard-coded-ad-credentials":{"name":"Apache Zeppelin Hardcoded AD Credentials","remediation":"Remove the hardcoded credentials from the source code and instead retrieve them from AWS Secrets Manager (https://aws.amazon.com/secrets-manager/). Visit https://w.amazon.com/bin/view/Secrets to know more.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/recommendations/59","description":"Hardcoded or insecurely stored active directory credentials in source code.  These credentials can be viewed by anyone with access to source code. Further, they can be used to authenticate to running Apache Zeppelin notebook server instances.\n","importance":"HIGH","cwe":["259","523","311","798","257"],"crBlocking":"NOT_BLOCKING","rules":["bosco/apache-zeppelin-hard-coded-ad-credentials"]},"dragonglass/hardcodedCredentials":{"name":"Hardcoded credentials","remediation":"For applications running in the Corp or Prod fabric:Use Odin (http://odin.amazon.com/)\nFor applications running in Native AWS -  Consider AWS Secrets Manager (https://aws.amazon.com/secrets-manager/) or Odin Everywhere (https://w.amazon.com/index.php/Odin/OdinEverywhere).\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/implementations/48 https://www.aristotle.a2z.com/recommendations/59","description":"Hardcoded credentials need to comply to the [style guide for safe names](https://alpha.www.docs.aws.a2z.com/awsstyleguide/latest/styleguide/safenames.html#credentials) or be removed from code, even when used for tests. Flagged hardcoded credentials that are active **must also be rotated** as they might have been seen by anyone with access to the source code.","importance":"HIGH","cwe":["259","523","311","798","257"],"crBlocking":"NOT_BLOCKING","rules":["dragonglass/hardcodedCredentials"]},"guru/HardcodedActiveGithubToken":{"name":"Hardcoded Active Github Access Token","remediation":"Since the credential is now exposed to anyone with access to this source code, you need to delete the token in question from your Github account. Before you attempt to delete the credential, please make sure the deletion doesn't affect any production workloads or result in outage in services you own. Detailed instructions on how to identify the Github account associated with  the credential and how to delete the credential can be found in the FAQ.\nOnce you've rotated the credential, you can use AWS Secrets Manager to store your credentials and dynamically fetch them at runtime.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/recommendations/59","description":"ACAT has found hardcoded Github access tokens inside source code packages you own. ACAT has validated that these tokens are active. Hardcoding Github access tokens inside source code  allows anyone with access to the source code to harvest these tokens and use them to perform unauthorized actions on Github resources. This may also expose sensitive data residing on  private repositories to unauthorized actors\n","importance":"CRITICAL","cwe":["259","523","311","798","257"],"crBlocking":"__EVERYONE__","rules":["guru/HardcodedActiveGithubToken"]},"documentation/FORALLVALUES_WITH_SINGLE_VALUED_KEY":{"name":"IAM Policy with ForAllValues and single valued key","remediation":"We recommend that you use `ForAllValues` only with multivalued conditions.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/243","description":"We recommend that you use `ForAllValues` only with multivalued conditions. The `ForAllValues` set operator tests whether the value of every member of the request set is a subset of the condition key set. The condition returns true if every key value in the request matches at least one value in the policy. It also returns true if there are no keys in the request, or if the key values resolve to a null data set, such as an empty string.\nThis finding was generated by ACAT using the Access Analyzer policy validator. You can run your policy in the IAM policy validator using the IAM console to get a more detailed report on this finding. See here for more: * https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-policy-validation.html\n","importance":"MEDIUM","cwe":[],"crBlocking":"NOT_BLOCKING","rules":["documentation/FORALLVALUES_WITH_SINGLE_VALUED_KEY"]},"bosco/external-docker-image":{"name":"Container image from external repository","remediation":"Please ensure that you are following the container repository usage guidelines found [here](https://builderhub.corp.amazon.com/docs/containers-repo-usage.html).\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/118","description":"Container images hosted in external repositories could become compromised or modified unexpectedly, affecting your availability and security posture. They can also be accidentally deleted or removed from the third party repository either by mistake or through an author's decision to remove the image in question.\n","importance":"HIGH","cwe":["829"],"crBlocking":"NOT_BLOCKING","rules":["bosco/external-docker-image","cfnlint/EA012"]},"dragonglass/cryptoComplianceCipher":{"name":"Weak cipher","remediation":"Use approved ciphers.\nPlease see the following: https://www.aristotle.a2z.com/implementations/234 https://www.aristotle.a2z.com/recommendations/17","description":"Usage of weak cryptographic primitives allows attackers to access data they are not authorized to access. Strong encryption and signing is crucial to protect customer data.","importance":"HIGH","cwe":["327","326"],"crBlocking":"NOT_BLOCKING","rules":["bosco/java-weak-cipher","dragonglass/cryptoComplianceCipher"]},"bosco/no-xframe-header":{"name":"Missing X-Frame-Options header in OrangeBox configuration","remediation":"Set the X-Frame-Options header within OranbeBox configurations.\nPlease see the following: https://www.aristotle.a2z.com/recommendations/26","description":"The X-Frame-Options header allows sites control over how your site may be framed within an iframe. Setting this header to an appropriate value helps to protect against attacks such as clickjacking.","importance":"HIGH","cwe":["16"],"crBlocking":"NOT_BLOCKING","rules":["bosco/no-xframe-header"]},"guru/HardcodedActiveDatabasePasswordJava":{"name":"Hardcoded Active JDBC Credentials in Java","remediation":"Since the credential is now exposed to anyone with access to this source code, you need to rotate the credential to mitigate the risk. Before you attempt to rotate the credential, please make sure the rotation doesn't affect any production workloads or result in outage in services you own. You can find detailed instructions on how to rotate the credentials in the FAQ.\nOnce you've rotated the credential, you can use AWS Secrets Manager to store your credentials and dynamically fetch them at runtime.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/recommendations/59","description":"An active hardcoded database connection password is present in the code, which ACAT has verified can be used to gain access to the database. This may expose sensitive data residing on the database, or allow unauthorized actions to be executed on the database. \n","importance":"CRITICAL","cwe":["259","523","311","798","257"],"crBlocking":"__EVERYONE__","rules":["guru/HardcodedActiveDatabasePasswordJava"]},"bandit/B501/request_with_no_cert_validation":{"name":"Server Certificate Not Validated","remediation":"Please ensure that target host certification verification configuration is in place.\nPlease see the following: https://www.aristotle.a2z.com/implementations/304 https://www.aristotle.a2z.com/recommendations/24","description":"Verifying the identity of the hosts you are connecting to applies to most protocols like SSH, LDAP etc.\nCertificate validation should be enabled by default, otherwise, it would lead to authentication bypass or man-in-the-middle attacks.","importance":"HIGH","cwe":["295"],"crBlocking":"NOT_BLOCKING","rules":["bandit/B501/request_with_no_cert_validation"]},"documentation/MISSING_PAIRED_CONDITION_KEYS":{"name":"IAM Policy with missing paired condition keys","remediation":"Please see the following: https://www.aristotle.a2z.com/implementations/243","description":"Some condition keys are more secure when paired with other related condition keys. We recommend that you include the related condition keys in the same condition block as the existing condition key. This makes the permissions granted through the policy more secure.\nFor example, you can use the `aws:VpcSourceIp` condition key to compare the IP address from which a request was made with the IP address that you specify in the policy. We recommend that you add the related `aws:SourceVPC` condition key. This checks whether the request comes from the VPC that you specify in the policy and the IP address that you specify.\nThis finding was generated by ACAT using the Access Analyzer policy validator. You can run your policy in the IAM policy validator using the IAM console to get a more detailed report on this finding. See here for more: * https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-policy-validation.html\n","importance":"MEDIUM","cwe":[],"crBlocking":"NOT_BLOCKING","rules":["documentation/MISSING_PAIRED_CONDITION_KEYS"]},"guru/HardcodedOAuthSecret":{"name":"Hardcoded OAuth Client Secret","remediation":"For applications running in the Corp or Prod fabric: Use Odin (http://odin.amazon.com/). For applications running in Native AWS - consider AWS Secrets Manager (https://aws.amazon.com/secrets-manager/) or Odin Everywhere (https://w.amazon.com/index.php/Odin/OdinEverywhere).\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/implementations/48 https://www.aristotle.a2z.com/recommendations/59","description":"A hardcoded OAuth client secret is present in the code and can be seen by anyone with access to that code. Access to the secret allows an attacker to impersonate the client and obtain the privileges of the corresponding \"client_id\" acting as an instance of the client.\n","importance":"HIGH","cwe":["259","523","311","798","257"],"crBlocking":"NOT_BLOCKING","rules":["guru/HardcodedOAuthSecret"]},"documentation/PASS_ROLE_WITH_NOT_RESOURCE":{"name":"IAM Policy with PassRole and NotResource","remediation":"We recommend that you specify allowed ARNs in the `Resource` element. Additionally, you can reduce permissions to a single service by using the `iam:PassedToService` condition key.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/243","description":"Using `iam:PassRole` in a policy with the `NotResource` element can allow your principals to access more services or features than you intended.\nThis finding was generated by ACAT using the Access Analyzer policy validator. You can run your policy in the IAM policy validator using the IAM console to get a more detailed report on this finding. See here for more: * https://docs.aws.amazon.com/IAM/latest/UserGuide/access-analyzer-policy-validation.html\n","importance":"MEDIUM","cwe":["668","284"],"crBlocking":"NOT_BLOCKING","rules":["documentation/PASS_ROLE_WITH_NOT_RESOURCE"]},"bosco/ruby-debug-option":{"name":"Rails consider_all_requests_local option enabled in production","remediation":"Please disable this option by setting the corresponding value to \"false\" in production environments.\nPlease see the following: https://www.aristotle.a2z.com/recommendations/34","description":"The consider_all_requests_local option in Rails results in verbatim error messages including displaying part of the application source code. Having this option enabled in a production environment can result in leakage of sensitive information.","importance":"HIGH","cwe":["489"],"crBlocking":"NOT_BLOCKING","rules":["bosco/ruby-debug-option"]},"bandit/B506/yaml_load":{"name":"Unsafe YAML Load","remediation":"Please use safe methods to load untrusted data with PyYaml and Ruby's standard YAML library.\nPlease see the following: https://www.aristotle.a2z.com/implementations/306 https://www.aristotle.a2z.com/recommendations/3","description":"Using insecure methods to load untrusted data with YAML might lead to remote code execution. \nThis is a known vulnerability in PyYaml library and Ruby's standard YAML library.","importance":"HIGH","cwe":["74","94","20"],"crBlocking":"NOT_BLOCKING","rules":["bandit/B506/yaml_load"]},"bosco/coral-http-delegator":{"name":"Coral HttpDelegator class detected","remediation":"Please make sure you are using Coral's delegation feature with a strict allow-list. Make sure you are aware that using the HttpDelegator against an Identity will modify this Identity, replacing the callerID by the targetID. The usage of RestrictedDelegator should be preferred. Long term mitigation should be discussed with your AppSec affinity engineer.\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/19","description":"The HttpDelegator class has been deprecated since 2011 and potentially allows any visitor to your service to bypass required authentications. This may be a critical risk depending on the way each service is configured, the audience that the service is exposed to, and the data that the service processes.\n","importance":"HIGH","cwe":["288"],"crBlocking":"NOT_BLOCKING","rules":["bosco/coral-http-delegator"]},"bosco/hardcoded-oidccryptopassphrase":{"name":"Hardcoded OIDC Passphrase","remediation":"Remove the hardcoded passphrase and retrieve it from AWS Secrets Manager (https://aws.amazon.com/secrets-manager/) or Turtle (https://w.amazon.com/bin/view/TurtleAdoption). Visit https://w.amazon.com/bin/view/Secrets to know more.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/36","description":"Hardcoding sensitive information such as OIDCCryptoPassphrase and OIDCRedisCachePassword in OIDC configurations allows any malicious insider to craft cookie values to impersonate any Amazonian to the site or access encrypted caches used by the OIDC server.\n","importance":"HIGH","cwe":["798","200"],"crBlocking":"NOT_BLOCKING","rules":["bosco/hardcoded-oidccryptopassphrase"]},"guru/XmlExternalEntityInjection":{"name":"Insecure XML parser initialization in Java","remediation":"Configure your Java XML parser to disallow processing of Document Type Definition (DTD) or processing of any external reference in the XML document. For details on how to address this issue for a particular XML parser, please consult  the rule FAQ linked in the finding ticket. Consult your AppSec affinity engineer for approval on downgrading the finding severity from Sev2 to Sev3 in case the input to the parser is coming from trusted source.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/255 https://www.aristotle.a2z.com/recommendations/174","description":"XML parsers that allow XML external entity (XXE) resolution are susceptible to  XXE injection attacks which can lead to high impact security vulnerabilities  such as Server Side Request Forgery (SSRF) and disclosure of sensitive data  from the filesystem.\n","importance":"HIGH","cwe":["611"],"crBlocking":"__EVERYONE__","rules":["guru/XmlExternalEntityInjection","guru/XmlExternalEntityInjectionXmlInputFactory","guru/XmlExternalEntityInjectionSAXBuilderXMLReader","guru/XmlExternalEntityInjectionSAXParser","guru/XmlExternalEntityInjectionTransformerFactory","guru/XmlExternalEntityInjectionValidator","guru/XmlExternalEntityInjectionSchemaFactory"]},"bosco/sudo-in-apollo-activation":{"name":"Usage of sudo in non-admin Apollo activation scripts","remediation":"Remove sudo if it is not required. Otherwise, put the scripts under the admin directory, such as ApolloCmd/ActivateAdmin. They execute as root in a more controlled context provided by the Apollo daemon. In addition to fixing the scripts, restrict your account with appropriate sudo permissions.\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/61","description":"The usage of sudo in non-admin Apollo activation scripts, which are run-as-user by Apollo, indicates that the service account could be permitted for passwordless sudo. This creates a path for escalation to administrative privileges and increases the attack vectors in the event of compromise. To prevent these types of security incidents, teams need to ensure they are following the Principle of Least Privilege wherever possible.\n","importance":"MEDIUM","cwe":["250"],"crBlocking":"NOT_BLOCKING","rules":["bosco/sudo-in-apollo-activation"]},"guru/ShadowAccounts":{"name":"Creation of Shadow Accounts","remediation":"1. The use of shadow accounts should be approved by AppSec through a security review. 2. Service teams' justifications for adoption of shadow accounts should be reviewed by the AWS Accounts team,  who can help your team find alternatives to the use of shadow accounts. 3. Service teams should engage their affinity engineers and escalate this issue to PEs for review.\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/255","description":"The use of shadow accounts for production services is a security anti-pattern. The use of shadow accounts is  detected when the growth of the service is linearly correlated to number of accounts being created. Creating  shadow accounts in a production service is considered a security anti-pattern for the following reasons: - It contradicts with account ownership and access control. When an account is created by a service team  but the account information belongs to a customer, the ownership is not well-defined. Therefore, in situations  where the user loses access to the account, access is at risk of being granted to the wrong person/organization.  - AWS Account Event Service (AES) is a centralized service for the creation and deletion of accounts in AWS,  which is being used to apply GDPR requirements and customer agreements. With shadow accounts, customers' privacy  would be violated, as AES will not be able to send the right signals to the right AWS services. Creating shadow  accounts could cause customers to lose control over their content, e.g., a customer is unable to close a related  shadow account.   - Using shadow accounts will fail/limit fraud detection/reaction models as the account’s information is no longer  associated with the end-customer. Denied Party Screening (DPS) models, which are meant for screening accounts of a  sanctioned individual/entity/area, are also prone to fail when shadow accounts are used since users are not going  through the usual sign up/sign in process. For more information, please see [here](https://w.amazon.com/bin/view/AWSAccounts/WhyShadowAccountsAreBad/).\n","importance":"HIGH","cwe":[],"crBlocking":"NOT_BLOCKING","rules":["guru/ShadowAccounts"]},"guru/HardcodedActiveQuipToken":{"name":"Hardcoded Active Quip Token","remediation":"Since the credential is now exposed to anyone with access to this source code, you need to rotate the token in question. Before you attempt to delete the credential, please make sure the deletion doesn't affect any production workloads or result in outage in services you own. Detailed instructions on how to identify the Quip token owner and how to rotate the token can be found in the FAQ linked below.\nPlease use AWS Secrets Manager or similar solutions recommended in the Aristotle article linked below to store credentials. Remove any service dependency and rotate the existing hardcoded credentials\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/recommendations/59","description":"ACAT has detected a hardcoded Quip Access Token inside packages you own. ACAT has verified the token is active and can be used to gain access to internal Amazon Quip documents.  This may expose sensitive Amazon business data by allowing unauthorized access to Quip documents using the hardcoded token\n","importance":"CRITICAL","cwe":["259","523","311","798","257"],"crBlocking":"__EVERYONE__","rules":["guru/HardcodedActiveQuipToken"]},"gosec/G108":{"name":"Profiling endpoint exposed on /debug/pprof","remediation":"It is not recommended to have `pprof` exposed in production. If you need to use `pprof` to profile your application, use a local port different from the one used by your http server. A common setup would be to have a web server exposed to the internet on port 80 and a separate `pprof` server on localhost (e.g., port 6060) that is only accessible locally.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/352 https://www.aristotle.a2z.com/recommendations/183","description":"Profiling endpoints exposed via `net/http/pprof` might expose sensitive information such as function names, file paths, or business-critical info such as web-server traffic to external entities.\n","importance":"MEDIUM","cwe":["200"],"crBlocking":"NOT_BLOCKING","rules":["gosec/G108"]},"guru/SQLInjection":{"name":"Improper Neutralization of Input Used in an SQL Command ('SQL Injection')","remediation":"Use prepared statements with parameterized queries whenever possible. Parameterized queries are very useful against SQL injection because they allow the database to distinguish between SQL code and data, regardless of what user input is supplied. Where parameterized queries are not possible, you must apply strict input validation and sanitization.\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/16","description":"An SQL injection attack can occur when untrusted user input is included in an SQL statement in such a way that part of the input is treated as SQL code. If the input is not validated or sanitized, a malicious actor can alter query logic, or insert additional statements that modify the backend database.\n","importance":"HIGH","cwe":["89"],"crBlocking":"NOT_BLOCKING","rules":["guru/SQLInjection"]},"gosec/G505":{"name":"Insecure cryptographic hash function (SHA1)","remediation":"Please use approved ciphers as per [the CryptoBR guidance](https://w.amazon.com/bin/view/AWSCryptoBR/Cryptosystems).\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/234 https://www.aristotle.a2z.com/recommendations/17","description":"Usage of weak cryptographic primitives could allow malicious actors to access data they are not authorized to access. Strong encryption and signing is crucial to protect customer data. Usage of SHA1 is not permitted within AWS even if they are not used for cryptographic purposes.\n","importance":"MEDIUM","cwe":["327"],"crBlocking":"NOT_BLOCKING","rules":["gosec/G505"]},"bosco/react-html-all":{"name":"Usage of innerHTML or outerHTML","remediation":"Refer Aristotle implementation and recommendation for mitigation.\nPlease see the following: https://www.aristotle.a2z.com/implementations/324 https://www.aristotle.a2z.com/recommendations/189","description":"Use innerHTML or outerHTML only with trusted content that you FULLY control. Do NOT concatenate service content  (e.g., translations or templates) with user data (e.g., resource names, descriptions, error messages) without any sanitization.\nIf you need to render any input controlled by users, either (1) refactor the code to avoid use of innerHTML/outerHTML  and rely on default framework syntax or, (2) ONLY if absolutely necessary, sanitize the input using up-to-date library  (e.g., [AWSConsoleSanitizer](https://code.amazon.com/packages/AWSConsoleSanitizer)). Please note that sanitizing user  input is a complex and error-prone process and such libraries are also not free from security issues. Incorrect use of innerHTML or outerHTML is a common source of critical security vulnerabilities such as Cross-Site scripting (XSS).\n","importance":"MEDIUM","cwe":["79","20"],"crBlocking":"NOT_BLOCKING","rules":["bosco/react-html-all"]},"bosco/slack-webhook-url":{"name":"Hardcoding Slack WebHook URLs in code","remediation":"Remove the URLs from code and store them in a secrets manager\nPlease see the following: https://www.aristotle.a2z.com/implementations/36","description":"Slack WebHook URLs are meant to be private and hence pose a threat if visible in code. Attackers can use these URLs to post messages in private channels and trick users into downloading malicious apps which gives an attacker the permissions to access/modify files.\n","importance":"HIGH","cwe":["798","200"],"crBlocking":"NOT_BLOCKING","rules":["bosco/slack-webhook-url"]},"bosco/apache-zeppelin-hard-coded-user-credentials":{"name":"Apache Zeppelin Hardcoded User Credentials","remediation":"Remove the hardcoded credentials from the source code and instead retrieve them from AWS Secrets Manager (https://aws.amazon.com/secrets-manager/). Visit https://w.amazon.com/bin/view/Secrets to know more.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/recommendations/59","description":"Hardcoded or insecurely stored credentials in source code.  These credentials can be viewed by anyone with access to source code. Further, they can be used to authenticate to running Apache Zeppelin notebook server instances.\n","importance":"HIGH","cwe":["259","523","311","798","257"],"crBlocking":"NOT_BLOCKING","rules":["bosco/apache-zeppelin-hard-coded-user-credentials"]},"bosco/jmx-non-xml-rule":{"name":"Insecure remote management and remote monitoring via JMX detected in your code","remediation":"Setting `com.sun.management.jmxremote.authenticate=false`\\n`com.sun.management.jmxremote.ssl=false`\\n (or their equivalent system properties `jmxremote.authenticate=false`, `jmxremote.ssl=false`) in your Java application, disables security for monitoring and management from remote systems. Note that if you are setting the property `com.sun.management.jmxremote.host=localhost`, then you are NOT vulnerable (for JDK 8u102 and above). \\n A detailed explanation of mitigation and verification is available in the linked Aristotle article. 1. If you do not require remote management and monitoring disable jmxremote by removing below jmxremote configuration:\\n jmxremote.port=  jmxremote.authenticate=false  jmxremote.ssl=false  2. If you cannot disable jmxremote, enable JMX to listen on localhost only: -Dcom.sun.management.jmxremote.host=localhost. If you need remote management, you can use SSH tunneling to access a JMX instance that is listening on localhost. Please see the Aristotle article for details on how to setup SSH tunneling.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/223 https://www.aristotle.a2z.com/recommendations/34 https://www.aristotle.a2z.com/recommendations/58","description":"Remote management/monitoring via JMX with disabled security is vulnerable to Remote Code Execution (RCE), allowing attackers to install malware, logging tools, or take control of the target host.  Setting com.sun.management.jmxremote.authenticate=false\\ncom.sun.management.jmxremote.ssl=false\\n (or their equivalent system properties jmxremote.authenticate=false, jmxremote.ssl=false) in your Java application, disables security properties for monitoring and management from remote systems. See the Aristotle article for more details.\n","importance":"HIGH","cwe":["489","287","526","319","1220"],"crBlocking":"NOT_BLOCKING","rules":["bosco/jmx-open-port","bosco/jmx-non-xml-rule"]},"gosec/G501":{"name":"Insecure cryptographic hash function (MD5)","remediation":"Please use approved ciphers as per [the CryptoBR guidance](https://w.amazon.com/bin/view/AWSCryptoBR/Cryptosystems).\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/234 https://www.aristotle.a2z.com/recommendations/17","description":"Usage of weak cryptographic primitives could allow malicious actors to access data they are not authorized to access. Strong encryption and signing is crucial to protect customer data. Usage of MD5 is not permitted within AWS even if they are not used for cryptographic purposes.\n","importance":"MEDIUM","cwe":["327"],"crBlocking":"NOT_BLOCKING","rules":["gosec/G501"]},"gosec/G502":{"name":"Insecure cryptographic cipher (DES)","remediation":"Please use approved ciphers as per [the CryptoBR guidance](https://w.amazon.com/bin/view/AWSCryptoBR/Cryptosystems).\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/234 https://www.aristotle.a2z.com/recommendations/17","description":"Usage of weak cryptographic primitives could allow malicious actors to access data they are not authorized to access. Strong encryption and signing is crucial to protect customer data. Usage of DES is not permitted within AWS even if they are not used for cryptographic purposes.\n","importance":"HIGH","cwe":["327"],"crBlocking":"NOT_BLOCKING","rules":["gosec/G502"]},"bosco/orangebox-csp-config":{"name":"Missing CSP configuration in OrangeBox configuration","remediation":"Please enable CSP in OrangeBox consoles.\nPlease see the following: https://www.aristotle.a2z.com/implementations/347 https://www.aristotle.a2z.com/implementations/348","description":"A CSP header can protect websites against cross-site scripting(XSS). When properly configured, it helps modern browsers block any script or style that is not explicitly allowlisted. CSP can be enabled from within the OrangeBox configuration file in AWS consoles.","importance":"MEDIUM","cwe":["1220","284","942"],"crBlocking":"NOT_BLOCKING","rules":["bosco/orangebox-csp-config"]},"gosec/G503":{"name":"Insecure cryptographic cipher (RC4)","remediation":"Please use approved ciphers as per [the CryptoBR guidance](https://w.amazon.com/bin/view/AWSCryptoBR/Cryptosystems).\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/234 https://www.aristotle.a2z.com/recommendations/17","description":"Usage of weak cryptographic primitives could allow malicious actors to access data they are not authorized to access. Strong encryption and signing is crucial to protect customer data. Usage of RC4 is not permitted within AWS even if they are not used for cryptographic purposes.\n","importance":"HIGH","cwe":["327"],"crBlocking":"NOT_BLOCKING","rules":["gosec/G503"]},"bosco/hardcoded-aws-creds-generic":{"name":"Hardcoded Credentials","remediation":"For applications running in the Corp or Prod fabric:Use Odin (http://odin.amazon.com/)\nFor applications running in Native AWS -  Consider AWS Secrets Manager (https://aws.amazon.com/secrets-manager/) or Odin Everywhere (https://w.amazon.com/index.php/Odin/OdinEverywhere).\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/implementations/48 https://www.aristotle.a2z.com/recommendations/59","description":"Hardcoded credentials need to comply to the [style guide for safe names](https://alpha.www.docs.aws.a2z.com/awsstyleguide/latest/styleguide/safenames.html#credentials)  or be removed from code, even when used for tests. Flagged hardcoded credentials that are active **must also be rotated** as they might  have been seen by anyone with access to the source code. For more information see this  [Wiki](https://w.amazon.com/bin/view/AWS_IT_Security/Security_Automation_Integrators/ACAT/Rules/FAQs/HardcodedCredentials).\n","importance":"HIGH","cwe":["259","523","311","798","257"],"crBlocking":"NOT_BLOCKING","rules":["bosco/hardcoded-aws-creds-generic","bosco/hardcoded-aws-creds-generic-new-prefixes"]},"retirejs/insecure-js-dependency":{"name":"JavaScript dependency with known Vulnerability","remediation":"Please update all javascript dependencies to the newest versions (for ex. https://docs.angularjs.org/guide/security#use-the-latest-angularjs-possible) or maintained alternatives (ex. https://w.amazon.com/index.php/Jquery).\nPlease see the following: https://www.aristotle.a2z.com/implementations/201 https://www.aristotle.a2z.com/recommendations/11","description":"JavaScript dependencies with outdated or unmaintained versions have known vulnerabilities ranging from command injection to filter bypasses.\n An attacker can exploit these known vulnerabilities in your application.","importance":"HIGH","cwe":["829","1104"],"crBlocking":"NOT_BLOCKING","rules":["retirejs/insecure-js-dependency"]},"bosco/react-dangerouslysetinnerhtml":{"name":"Usage of dangerouslySetInnerHTML","remediation":"Please see the following: https://www.aristotle.a2z.com/recommendations/118","description":"The `dangerouslySetInnerHTML` attribute in React allows programmers to directly set the `innerHTML` property of an element without any sanitization. Passing untrusted user input into the attribute can lead to serious security vulnerabilities such as cross-site-scripting (XSS).\nPlease avoid passing untrusted user input to the `dangerouslySetInnerHTML` attribute. If passing user input is absolutely necessary, ensure that the input is sanitized using an up-to-date sanitization library like [AWSConsoleSanitizer](https://code.amazon.com/packages/AWSConsoleSanitizer). Please note that sanitizing user input is a complex and error-prone process and such libraries are also not free from security issues.\n","importance":"HIGH","cwe":["79","20"],"crBlocking":"NOT_BLOCKING","rules":["bosco/react-dangerouslysetinnerhtml"]},"bosco/imdsv2-curl":{"name":"Accessing instance metadata without use of a session token","remediation":"Please configure your instances to support IMDSv2 and use a session token for your requests.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/338","description":"IMDS provides metadata related to an EC2 instance to software running inside the instance. Critically, IMDS is also the means by which short-term IAM role credentials are passed into the instance (\"IAM roles for EC2\"). Accessing IMDS without using session tokens risks unauthorized access to the metadata contained in the IMDS and provides a hostile actor with valuable information that can inform other attacks, for example network topology details.\n","importance":"LOW","cwe":["285"],"crBlocking":"NOT_BLOCKING","rules":["bosco/imdsv2-curl"]},"guru/DomBasedCrossSiteScripting":{"name":"DOM-based Cross-site Scripting","remediation":"Protecting an application against DOM-based XSS depends on the context in which the untrusted input is rendered. Please perform proper encoding, escaping, and sanitization by following [the guidance](https://www.aristotle.a2z.com/implementations/324).\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/324 https://www.aristotle.a2z.com/recommendations/189","description":"User provided data, such as URL parameters or cookies, should always be considered untrusted. When an application contains a client side script that writes untrusted user input to  the DOM in an unsafe way, attackers can inject code that will be executed in the user’s browser. This could enable a wide range of attacks including stealing session cookies, downloading malicious files, redirecting users to unsafe domains, or cross site request forgery (CSRF) attacks.\n","importance":"HIGH","cwe":["74","79","80","81","83","84","86"],"crBlocking":"NOT_BLOCKING","rules":["guru/DomBasedCrossSiteScripting"]},"guru/HardcodedFluxoPasswordPython":{"name":"Hardcoded Fluxo Client Password","remediation":"For applications running in the Corp or Prod fabric: Use Odin (http://odin.amazon.com/). For applications running in Native AWS - consider AWS Secrets Manager (https://aws.amazon.com/secrets-manager/) or Odin Everywhere (https://w.amazon.com/index.php/Odin/OdinEverywhere).\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/implementations/48 https://www.aristotle.a2z.com/recommendations/59","description":"Having the username and password for Fluxo grants you the permission to create, read, and take actions on all tickets/CTIs that the resolver groups has permission to access. Exposing the username and password means that someone who is not supposed to have permissions could be able to perform unauthorized actions on tickets.\n","importance":"HIGH","cwe":["259","523","311","798","257"],"crBlocking":"NOT_BLOCKING","rules":["guru/HardcodedFluxoPasswordJava","guru/HardcodedFluxoPasswordPython"]},"bosco/php-xxe":{"name":"Insecure Xml parsing in PHP Detected","remediation":"The PHP XML processor should be configured to use a local static DTD and disallow any declared DTD included in the XML document.\nPlease see the following: https://www.aristotle.a2z.com/implementations/310 https://www.aristotle.a2z.com/recommendations/174","description":"When XML input containing a reference to an external entity is processed by a weakly configured XML parser, it can lead to an XML external entity (XXE) attack.","importance":"HIGH","cwe":["611"],"crBlocking":"NOT_BLOCKING","rules":["bosco/php-xxe"]},"bandit/B701/jinja2_autoescape_false":{"name":"Jinja2 Autoescape Disabled","remediation":"Auto escaping should NEVER be disabled.Please ensure that you set a decent jinja2 auto escape configuration.\nPlease see the following: https://www.aristotle.a2z.com/implementations/305 https://www.aristotle.a2z.com/recommendations/1","description":"The configuration of Jinja2 enables the application developers to escape any HTML content, thus mitigating attacks like XSS.\nHowever, the auto-escaping is not enabled by default in Jinja2.","importance":"HIGH","cwe":["20","79","94","74","838"],"crBlocking":"NOT_BLOCKING","rules":["bandit/B701/jinja2_autoescape_false"]},"dragonglass/cryptoComplianceKeyGenerator":{"name":"Insecure usage of java.security.KeyPairGenerator","remediation":"Use approved ciphers.\nPlease see the following: https://www.aristotle.a2z.com/implementations/234 https://www.aristotle.a2z.com/implementations/36 https://www.aristotle.a2z.com/recommendations/327 https://www.aristotle.a2z.com/recommendations/17 https://www.aristotle.a2z.com/recommendations/59","description":"Usage of weak cryptographic primitives allows attackers to access data they are not authorized to access. Strong encryption and signing is crucial to protect customer data.","importance":"HIGH","cwe":["327"],"crBlocking":"NOT_BLOCKING","rules":["dragonglass/cryptoComplianceKeyPairGenerator","dragonglass/cryptoComplianceKeyGenerator"]}},"runConfig":{"executor":"ResourceConstrainedExecutor","parallelism":0,"constraints":{"maxTime":46800000}}},"taskIds":["arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/615f1dac-8667-485b-991e-6731ad46e213","arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/ec0393a4-13bd-4ce5-bbf6-2f5049aaf480","arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/0abf1a0a-6763-49a7-82a2-9cc21f66383d","arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/4b55bd97-8724-41ca-b18f-f7810384e0a8","arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/501991fd-9a96-45a4-bb45-b377302e2e44","arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/4d428152-2bc2-4ab8-b1a7-81c3fb1cc7c3","arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/64f65223-a2fc-42d7-94ce-4b9afea612ff","arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/3c36d2dd-e012-4e96-aa0f-d8026b8c37ef","arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/2ae7fe64-9b76-41fb-a3a1-1829b087d959","arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/2c6d6d1d-3a27-4668-b4b2-f7eb6bf3fc80","arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/75be80fb-3411-4bfe-accd-509fb28e79e3"],"findings":["arn:aws:acat:finding:::f2061d9d-7a14-42e3-9913-1e894667a8a7","arn:aws:acat:finding:::a4807269-8530-4652-ba6c-b77774c96912","arn:aws:acat:finding:::a1321790-c788-4ce8-bf8e-e39c0eb4d975","arn:aws:acat:finding:::081b4d2d-10e6-433d-9c2e-968b3310c357","arn:aws:acat:finding:::1af7ab79-7c70-4e6b-b618-524d2c90f385","arn:aws:acat:finding:::925b5108-24b3-4a7a-a81f-20d388d58113"],"durationInMs":27268,"startTimeInMs":1700027634893,"requester":"sanghyou","sdlPhase":"LOCAL","metadata":{}},"taskSummaries":[{"taskId":"arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/615f1dac-8667-485b-991e-6731ad46e213","jobId":"86d4e422-cb19-4d08-8a3b-44157c3488c8","shimConfig":{"id":"arn:acat:shim/bosco","name":"Bosco","className":"com.amazonaws.acat.shim.bosco.BoscoShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/bosco/","constraints":{"execTimeInMs":2400000,"cpuTimeInMs":2400000,"residentMemoryInByte":536870912}},"assetContainer":{"@type":".SimpleDirectoryAssetContainer","root":"file:///Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/","type":"SimpleDirectory","assets":[{"@type":".SimpleAsset","@id":"3","name":"/Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src","version":"02d77a4dbbfb152bdcc6e7f932fda1d4765b980105ec0e504f44c5ff0da0994c","locallyOverridden":false,"type":"SimpleAsset","baseVersion":"","changedFiles":[],"gitDiff":null}]},"status":"SUCCESS","statusMessage":null,"findingIds":["arn:aws:acat:finding:::f2061d9d-7a14-42e3-9913-1e894667a8a7","arn:aws:acat:finding:::a4807269-8530-4652-ba6c-b77774c96912","arn:aws:acat:finding:::a1321790-c788-4ce8-bf8e-e39c0eb4d975"],"analysisMetadata":{"analyzedFilesProvided":true,"analyzedFiles":[{"path":"main/webapp/pages/content/PerformTransfer.jsp"},{"path":"main/java/com/fortify/samples/riches/model/Transaction.hbm.xml"},{"path":"main/webapp/img/menubar_bg.gif"},{"path":"main/java/com/fortify/samples/riches/model/ProfileService.java"},{"path":"main/webapp/etc/jboss4-support/login-config-fragment.xml"},{"path":"main/java/com/fortify/samples/riches/restful/TransactionResources.java"},{"path":"main/webapp/pages/acquired/default.jsp"},{"path":"main/webapp/img/rwi_75.gif"},{"path":"main/java/com/fortify/samples/riches/PayBill.java"},{"path":"main/webapp/pages/content/oper/ProfilePicture.jsp"},{"path":"main/java/com/fortify/samples/riches/webservices/BannerAdServer.java"},{"path":"main/webapp/pages/content/oper/Admin.jsp"},{"path":"main/java/com/fortify/samples/riches/oper/UploadProfilePicture.java"},{"path":"main/webapp/img/product_list_bg_bottom2.jpg"},{"path":"main/webapp/jsplibs/tomcat5.5/common/lib/jasper-compiler.jar"},{"path":"main/webapp/pages/content/oper/Files.jsp"},{"path":"main/webapp/login/login-redir.jsp"},{"path":"main/java/com/fortify/samples/riches/model/Profile.java"},{"path":"main/webapp/pages/FindLocations.jsp"},{"path":"main/java/com/fortify/samples/riches/restful/ITransactionResources.java"},{"path":"main/webapp/pages/content/ShowLocations.jsp"},{"path":"main/webapp/pages/DeleteMessage.jsp"},{"path":"main/webapp/config/tomcat5_server.xml"},{"path":"main/webapp/pages/acquired/first_riches_invest.jsp"},{"path":"main/webapp/img/btnDeleteMessages.jpg"},{"path":"main/java/com/fortify/samples/riches/oper/Newsletter.java"},{"path":"main/webapp/pages/index.jsp.bak"},{"path":"main/webapp/WEB-INF/weblogic_web.xml"},{"path":"main/webapp/WEB-INF/web.xml"},{"path":"main/webapp/pages/Security.jsp"},{"path":"main/webapp/pages/tiles/basicHeader.jsp"},{"path":"main/webapp/pages/content/oper/CreateAccount.jsp"},{"path":"main/java/com/fortify/samples/riches/model/AccountService.java"},{"path":"main/webapp/pages/ViewMessage.jsp"},{"path":"main/java/com/fortify/samples/riches/model/LocationService.java"},{"path":"main/java/com/fortify/samples/riches/model/Role.hbm.xml"},{"path":"main/java/com/fortify/samples/riches/PerformRegistration.java"},{"path":"main/java/com/fortify/samples/riches/model/Message.java"},{"path":"main/webapp/pages/tiles/header.jsp"},{"path":"main/webapp/pages/oper/Newsletter.jsp"},{"path":"main/java/com/fortify/samples/riches/model/TransactionService.java"},{"path":"main/webapp/css/rwi-2.css"},{"path":"main/webapp/img/btnSend.gif"},{"path":"main/webapp/pages/Messages.jsp"},{"path":"main/webapp/pages/oper/DeleteAccount.jsp"},{"path":"main/java/com/fortify/samples/riches/ViewMessage.java"},{"path":"main/webapp/WEB-INF/tiles.xml"},{"path":"main/webapp/pages/tiles/basicFooter.jsp"},{"path":"main/webapp/pages/content/PerformChangePass.jsp"},{"path":"main/webapp/pages/AccountSummary.jsp"},{"path":"main/java/com/fortify/samples/riches/oper/DeleteAccount.java"},{"path":"main/java/com/fortify/samples/riches/AccountSummary.java"},{"path":"main/java/com/fortify/samples/riches/Transfer.java"},{"path":"main/webapp/config/mailserver.legacy.properties"},{"path":"main/java/com/fortify/samples/riches/oper/Files.java"},{"path":"main/webapp/pages/PayBill.jsp"},{"path":"main/java/com/fortify/samples/riches/webservices/startClient.bat"},{"path":"main/java/com/fortify/samples/riches/webservices/BannerAdClient.java"},{"path":"main/webapp/pages/oper/UploadProfilePicture.jsp"},{"path":"main/java/com/fortify/samples/riches/restful/XMLUtil.java"},{"path":"main/webapp/img/product_list_shadow.gif"},{"path":"main/java/com/fortify/samples/riches/AccountDetails.java"},{"path":"main/java/com/fortify/samples/riches/model/Profile.hbm.xml"},{"path":"main/webapp/pages/content/CareerDetails.jsp"},{"path":"main/webapp/pages/oper/CreateAccount.jsp"},{"path":"main/webapp/pages/tiles/footer.jsp"},{"path":"main/java/com/fortify/samples/riches/AdminSupport.java"},{"path":"main/webapp/pages/content/Check.jsp"},{"path":"main/java/com/fortify/samples/riches/model/Location.java"},{"path":"main/webapp/etc/tomcat5.5-support/src/com/fortify/samples/riches/database/DatabaseController.java"},{"path":"main/webapp/img/horizontall.gif"},{"path":"main/webapp/WEB-INF/weblogic10.xml"},{"path":"main/webapp/pages/common/moduleInclude.jsp"},{"path":"main/webapp/pages/AccountDetails.jsp"},{"path":"main/webapp/pages/content/oper/UploadProfilePicture.jsp"},{"path":"main/java/com/fortify/samples/riches/model/Message.hbm.xml"},{"path":"main/webapp/pages/career_details_error.jsp"},{"path":"main/java/com/fortify/samples/riches/model/Account.java"},{"path":"main/webapp/img/bg2.jpg"},{"path":"main/webapp/pages/common/header.jsp"},{"path":"main/webapp/pages/content/Security.jsp"},{"path":"main/webapp/pages/index.jsp"},{"path":"main/webapp/img/accounts_bg_home.gif"},{"path":"main/webapp/css/rwi-1.css"},{"path":"main/webapp/pages/auth/authCheck.jsp"},{"path":"main/webapp/pages/oper/InvalidEmail.jsp"},{"path":"main/webapp/META-INF/context.xml"},{"path":"main/webapp/img/header.gif"},{"path":"main/webapp/WEB-INF/database/riches.properties"},{"path":"main/java/com/fortify/samples/riches/model/Location.hbm.xml"},{"path":"main/webapp/img/small-ad3.gif"},{"path":"main/webapp/pages/oper/BrowseAccount.jsp"},{"path":"main/java/com/fortify/samples/riches/oper/CreateAccount.java"},{"path":"main/webapp/img/al_ehl_house_gen.gif"},{"path":"main/webapp/WEB-INF/weblogic9.xml"},{"path":"main/webapp/pages/FilesViewer.jsp"},{"path":"main/webapp/META-INF/MANIFEST.MF"},{"path":"main/webapp/pages/content/FindLocations.jsp"},{"path":"main/java/com/fortify/samples/riches/PerformChangePass.java"},{"path":"main/webapp/img/promo1.jpg"},{"path":"main/resources/hibernate.properties"},{"path":"main/webapp/pages/content/PayBill.jsp"},{"path":"main/webapp/pages/content/Messages.jsp"},{"path":"main/webapp/pages/content/DeleteMessage.jsp"},{"path":"main/webapp/jsplibs/tomcat5.0/common/lib/jsp-api.jar"},{"path":"main/webapp/pages/ShowLocations.jsp"},{"path":"main/webapp/jsplibs/tomcat5.0/common/lib/jasper-runtime.jar"},{"path":"main/webapp/pages/content/ViewMessage.jsp"},{"path":"main/webapp/pages/Careers.jsp"},{"path":"main/webapp/etc/tomcat5.5-support/tomcat5.5-support.iml"},{"path":"main/webapp/img/rwi_50.gif"},{"path":"main/webapp/login/logout.jsp"},{"path":"main/webapp/img/horizontal_linexl.gif"},{"path":"main/webapp/pages/common/hidden_AdminControl.jsp"},{"path":"main/java/com/fortify/samples/riches/oper/SendNewsletter.java"},{"path":"main/webapp/pages/ChangePass.jsp"},{"path":"main/webapp/WEB-INF/template_web.xml"},{"path":"main/webapp/pages/error.jsp"},{"path":"main/webapp/pages/oper/SendMessage.jsp"},{"path":"main/webapp/pages/PerformTransfer.jsp"},{"path":"main/webapp/pages/content/AccountDetails.jsp"},{"path":"main/java/com/fortify/samples/riches/DeleteMessage.java"},{"path":"main/webapp/etc/jboss4-support/riches-ds.xml"},{"path":"main/webapp/jsplibs/tomcat5.5/common/lib/commons-el.jar"},{"path":"main/webapp/img/bg.jpg"},{"path":"main/webapp/WEB-INF/validation.xml"},{"path":"main/resources/struts.xml"},{"path":"main/webapp/img/tiny-ad1.gif"},{"path":"main/webapp/img/favicon.ico"},{"path":"main/webapp/pages/oper/Files.jsp"},{"path":"main/webapp/pages/content/oper/SendMessage.jsp"},{"path":"main/java/com/fortify/samples/riches/FundException.java"},{"path":"main/java/com/fortify/samples/riches/oper/BrowseAccount.java"},{"path":"main/java/com/fortify/samples/riches/model/Transaction.java"},{"path":"main/webapp/pages/PerformChangePass.jsp"},{"path":"main/webapp/WEB-INF/jetty-web.xml"},{"path":"main/java/com/fortify/samples/riches/database/ConnectionFactory.java"},{"path":"main/java/com/fortify/samples/riches/model/MessageService.java"},{"path":"main/java/com/fortify/samples/riches/oper/SendMessage.java"},{"path":"main/java/com/fortify/samples/riches/webservices/startRegister.bat"},{"path":"main/webapp/img/small-ad2.gif"},{"path":"main/java/com/fortify/samples/riches/Messages.java"},{"path":"main/webapp/img/ira_wtprimary_0208.jpg"},{"path":"main/webapp/pages/Transfer.jsp"},{"path":"main/java/com/fortify/samples/riches/PerformCheck.java"},{"path":"main/webapp/pages/Backup.jsp"},{"path":"main/java/com/fortify/samples/riches/database/DatabaseController.java"},{"path":"main/java/com/fortify/samples/riches/model/Role.java"},{"path":"main/resources/application.properties"},{"path":"main/webapp/img/btn_search_white.gif"},{"path":"main/webapp/pages/content/oper/Newsletter.jsp"},{"path":"main/webapp/pages/content/oper/DeleteAccount.jsp"},{"path":"main/java/com/fortify/samples/riches/webservices/startServer.bat"},{"path":"main/webapp/pages/content/AccountSummary.jsp"},{"path":"main/webapp/login/Register.jsp"},{"path":"main/java/com/fortify/samples/riches/webservices/compile.bat"},{"path":"main/java/com/fortify/samples/riches/model/Account.hbm.xml"},{"path":"main/webapp/login/error.jsp"},{"path":"main/webapp/pages/content/oper/BrowseAccount.jsp"},{"path":"main/java/com/fortify/samples/riches/oper/Admin.java"},{"path":"main/webapp/img/lock.gif"},{"path":"main/webapp/version.txt"},{"path":"main/webapp/login/PerformRegistration.jsp"},{"path":"main/webapp/jsplibs/tomcat5.0/common/lib/jasper-compiler.jar"},{"path":"main/webapp/login/login.jsp"},{"path":"main/webapp/img/promo2.jpg"},{"path":"main/webapp/pages/Check.jsp"},{"path":"main/java/com/fortify/samples/riches/restful/AccountResources.java"},{"path":"main/webapp/img/btn_go_white.gif"},{"path":"main/webapp/img/online-banking.gif"},{"path":"main/webapp/WEB-INF/WEB-INF.iml"},{"path":"main/webapp/pages/content/oper/InvalidEmail.jsp"},{"path":"main/webapp/img/search_bg.gif"},{"path":"main/webapp/WEB-INF/jetty-realm.properties"},{"path":"main/webapp/pages/content/Transfer.jsp"},{"path":"main/webapp/pages/PerformCheck.jsp"},{"path":"main/webapp/etc/jboss4-support/jboss4-support.iml"},{"path":"main/webapp/pages/CareerDetails.jsp"},{"path":"main/webapp/pages/content/oper/SendNewsletter.jsp"},{"path":"main/webapp/js/AC_RunActiveContent.js"},{"path":"main/webapp/css/details.css"},{"path":"main/webapp/img/btnReply.jpg"},{"path":"main/java/struts.xml"},{"path":"main/webapp/pages/content/ChangePass.jsp"},{"path":"main/java/com/fortify/samples/riches/legacy/mail/SendMail.java"},{"path":"main/webapp/etc/jboss4-support/src/com/fortify/samples/riches/database/DatabaseController.java"},{"path":"main/webapp/img/signon_bg.gif"},{"path":"main/java/hibernate.properties"},{"path":"main/webapp/jsplibs/tomcat5.5/common/lib/jasper-runtime.jar"},{"path":"main/webapp/img/small-ad1.gif"},{"path":"main/webapp/pages/content/PerformCheck.jsp"},{"path":"main/webapp/pages/oper/Admin.jsp"},{"path":"main/webapp/rwi-1.swf"},{"path":"main/java/com/fortify/samples/riches/database/ConnFactory.java"},{"path":"main/webapp/img/btnReply.gif"},{"path":"main/webapp/pages/oper/ProfilePicture.jsp"},{"path":"main/webapp/login/error-redir.jsp"},{"path":"main/webapp/secrets.txt"},{"path":"main/webapp/WEB-INF/jboss-web.xml"},{"path":"main/webapp/img/login_background.jpg"},{"path":"main/webapp/pages/content/Careers.jsp"},{"path":"main/java/com/fortify/samples/riches/Check.java"},{"path":"main/webapp/WEB-INF/database/riches.script"},{"path":"main/webapp/WEB-INF/validator-rules.xml"},{"path":"main/java/com/fortify/samples/riches/FindLocations.java"},{"path":"main/java/com/fortify/samples/riches/webservices/BannerAdSource.java"},{"path":"main/webapp/img/calendar.png"},{"path":"main/java/com/fortify/samples/riches/oper/AdminUtil.java"},{"path":"main/java/com/fortify/samples/riches/PerformTransfer.java"},{"path":"main/webapp/img/btnDeleteMessage.jpg"},{"path":"main/webapp/pages/tiles/header2.jsp"},{"path":"main/webapp/img/promo3.jpg"},{"path":"main/webapp/pages/About.jsp"},{"path":"main/webapp/jsplibs/tomcat5.5/common/lib/jsp-api.jar"},{"path":"main/webapp/pages/oper/SendNewsletter.jsp"},{"path":"main/webapp/jsplibs/tomcat5.0/common/lib/commons-el.jar"},{"path":"main/webapp/etc/tomcat5.5-support/context.xml"}],"metadata":{}},"shimError":null,"durationInMs":17036},{"taskId":"arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/ec0393a4-13bd-4ce5-bbf6-2f5049aaf480","jobId":"86d4e422-cb19-4d08-8a3b-44157c3488c8","shimConfig":{"id":"arn:acat:shim/gosec","name":"gosec","className":"com.amazonaws.acat.shim.gosec.AcatGoSecShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/gosec/","constraints":{"execTimeInMs":2700000,"cpuTimeInMs":2700000,"residentMemoryInByte":2147483648}},"assetContainer":{"@type":".SimpleDirectoryAssetContainer","root":"file:///Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/","type":"SimpleDirectory","assets":[{"@ref":"3"}]},"status":"SKIPPED","statusMessage":"No valid Go packages found","findingIds":[],"analysisMetadata":{"analyzedFilesProvided":false,"analyzedFiles":[],"metadata":{}},"shimError":null,"durationInMs":5664},{"taskId":"arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/0abf1a0a-6763-49a7-82a2-9cc21f66383d","jobId":"86d4e422-cb19-4d08-8a3b-44157c3488c8","shimConfig":{"id":"arn:acat:shim/dragonglass","name":"Dragonglass","className":"com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/dragonglass/","constraints":{"execTimeInMs":900000,"cpuTimeInMs":900000,"residentMemoryInByte":1073741824}},"assetContainer":{"@type":".SimpleDirectoryAssetContainer","root":"file:///Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/","type":"SimpleDirectory","assets":[{"@ref":"3"}]},"status":"FAIL","statusMessage":"com.amazonaws.acat.executor.impl.ExecutorException: Task process for shim (Dragonglass) failed. Detailed error: Error (additional info on the lines after): com.amazonaws.acat.util.subprocess.SubprocessNonZeroExitException: Subprocess ended with exit code 1.\n- Stderr file: /Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim/log/process_err.log\n- Command executed: /bin/bash /Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim/_acat/run.sh\n- Exec config: SubprocessExecConfig(timeoutInMs=900000, execDir=/Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim, stdoutPath=/Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim/log/process.log, stderrPath=/Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim/log/process_err.log, envPaths=[], envVars={}, stdLogger=null)","findingIds":[],"analysisMetadata":{"analyzedFilesProvided":false,"analyzedFiles":[],"metadata":{}},"shimError":{"errorType":"com.amazonaws.acat.executor.impl.ExecutorException","errorMessage":"com.amazonaws.acat.executor.impl.ExecutorException: Task process for shim (Dragonglass) failed. Detailed error: Error (additional info on the lines after): com.amazonaws.acat.util.subprocess.SubprocessNonZeroExitException: Subprocess ended with exit code 1.\n- Stderr file: /Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim/log/process_err.log\n- Command executed: /bin/bash /Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim/_acat/run.sh\n- Exec config: SubprocessExecConfig(timeoutInMs=900000, execDir=/Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim, stdoutPath=/Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim/log/process.log, stderrPath=/Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim/log/process_err.log, envPaths=[], envVars={}, stdLogger=null)","errorDetail":"com.amazonaws.acat.executor.impl.ExecutorException: Task process for shim (Dragonglass) failed. Detailed error: Error (additional info on the lines after): com.amazonaws.acat.util.subprocess.SubprocessNonZeroExitException: Subprocess ended with exit code 1.\n- Stderr file: /Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim/log/process_err.log\n- Command executed: /bin/bash /Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim/_acat/run.sh\n- Exec config: SubprocessExecConfig(timeoutInMs=900000, execDir=/Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim, stdoutPath=/Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim/log/process.log, stderrPath=/Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim/log/process_err.log, envPaths=[], envVars={}, stdLogger=null)\n\tat com.amazonaws.acat.executor.impl.ResourceConstrainedExecutor.runShimProcess(ResourceConstrainedExecutor.java:106)\n\tat com.amazonaws.acat.executor.impl.ResourceConstrainedExecutor.internalExecute(ResourceConstrainedExecutor.java:67)\n\tat com.amazonaws.acat.executor.impl.PseudoDataSandboxedExecutor.execute(PseudoDataSandboxedExecutor.java:50)\n\tat com.amazonaws.acat.executor.impl.ResourceConstrainedExecutor.execute(ResourceConstrainedExecutor.java:33)\n\tat com.amazonaws.acat.scheduler.impl.IndependentWorkerScheduler.lambda$createTask$2(IndependentWorkerScheduler.java:231)\n\tat java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1768)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\nCaused by: Error (additional info on the lines after): com.amazonaws.acat.util.subprocess.SubprocessNonZeroExitException: Subprocess ended with exit code 1.\n- Stderr file: /Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim/log/process_err.log\n- Command executed: /bin/bash /Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim/_acat/run.sh\n- Exec config: SubprocessExecConfig(timeoutInMs=900000, execDir=/Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim, stdoutPath=/Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim/log/process.log, stderrPath=/Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/tmp/2023-11-15_05-52-02.704_b7ea30/tasks/com.amazonaws.acat.shim.dragonglass.AcatDragonglassShim/log/process_err.log, envPaths=[], envVars={}, stdLogger=null)\n\tat com.amazonaws.acat.util.subprocess.Subprocess.startAndWait(Subprocess.java:84)\n\tat com.amazonaws.acat.executor.impl.ResourceConstrainedExecutor.runShimProcess(ResourceConstrainedExecutor.java:98)\n\t... 8 more\nCaused by: com.amazonaws.acat.util.subprocess.SubprocessNonZeroExitException: Subprocess ended with exit code 1.\n\tat com.amazonaws.acat.util.subprocess.Subprocess.waitToComplete(Subprocess.java:177)\n\tat com.amazonaws.acat.util.subprocess.Subprocess.privateStartAndWait(Subprocess.java:157)\n\tat com.amazonaws.acat.util.subprocess.Subprocess.startAndWait(Subprocess.java:81)\n\t... 9 more\n"},"durationInMs":5568},{"taskId":"arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/4b55bd97-8724-41ca-b18f-f7810384e0a8","jobId":"86d4e422-cb19-4d08-8a3b-44157c3488c8","shimConfig":{"id":"arn:acat:shim/retirejs","name":"RetireJs","className":"com.amazonaws.acat.shim.retirejs.RetireJsShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/retirejs/","constraints":{"execTimeInMs":600000,"cpuTimeInMs":600000,"residentMemoryInByte":1073741824}},"assetContainer":{"@type":".SimpleDirectoryAssetContainer","root":"file:///Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/","type":"SimpleDirectory","assets":[{"@ref":"3"}]},"status":"SKIPPED","statusMessage":"This shim does not run on the current platform: MAC_OS_X. Supported platforms for this shim are: [LINUX]","findingIds":[],"analysisMetadata":{"analyzedFilesProvided":false,"analyzedFiles":[],"metadata":{}},"shimError":null,"durationInMs":5421},{"taskId":"arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/501991fd-9a96-45a4-bb45-b377302e2e44","jobId":"86d4e422-cb19-4d08-8a3b-44157c3488c8","shimConfig":{"id":"arn:acat:shim/orangeboxconfiguration","name":"orangeboxconfiguration","className":"com.amazonaws.acat.shim.orangeboxconfiguration.OrangeBoxConfigurationShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/orangeboxconfiguration/","constraints":{"execTimeInMs":2700000,"cpuTimeInMs":2700000,"residentMemoryInByte":1073741824}},"assetContainer":{"@type":".SimpleDirectoryAssetContainer","root":"file:///Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/","type":"SimpleDirectory","assets":[{"@ref":"3"}]},"status":"SUCCESS","statusMessage":null,"findingIds":[],"analysisMetadata":{"analyzedFilesProvided":true,"analyzedFiles":[],"metadata":{}},"shimError":null,"durationInMs":5548},{"taskId":"arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/4d428152-2bc2-4ab8-b1a7-81c3fb1cc7c3","jobId":"86d4e422-cb19-4d08-8a3b-44157c3488c8","shimConfig":{"id":"arn:acat:shim/cfnlint","name":"Cfnlint","className":"com.amazonaws.acat.shim.cfnlint.AcatCfnLintShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/cfnlint/","constraints":{"execTimeInMs":2400000,"cpuTimeInMs":2400000,"residentMemoryInByte":1073741824}},"assetContainer":{"@type":".SimpleDirectoryAssetContainer","root":"file:///Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/","type":"SimpleDirectory","assets":[{"@ref":"3"}]},"status":"SKIPPED","statusMessage":"This shim does not run on the current platform: MAC_OS_X. Supported platforms for this shim are: [LINUX]","findingIds":[],"analysisMetadata":{"analyzedFilesProvided":false,"analyzedFiles":[],"metadata":{}},"shimError":null,"durationInMs":5412},{"taskId":"arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/64f65223-a2fc-42d7-94ce-4b9afea612ff","jobId":"86d4e422-cb19-4d08-8a3b-44157c3488c8","shimConfig":{"id":"arn:acat:shim/guru","name":"Guru","className":"com.amazonaws.acat.shim.guru.AcatGuruShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/guru/","constraints":{"execTimeInMs":2700000,"cpuTimeInMs":2700000,"residentMemoryInByte":1073741824}},"assetContainer":{"@type":".SimpleDirectoryAssetContainer","root":"file:///Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/","type":"SimpleDirectory","assets":[{"@ref":"3"}]},"status":"SUCCESS","statusMessage":null,"findingIds":["arn:aws:acat:finding:::081b4d2d-10e6-433d-9c2e-968b3310c357","arn:aws:acat:finding:::1af7ab79-7c70-4e6b-b618-524d2c90f385","arn:aws:acat:finding:::925b5108-24b3-4a7a-a81f-20d388d58113"],"analysisMetadata":{"analyzedFilesProvided":true,"analyzedFiles":[{"path":"FindingPath(locations=[Location(start=file:/Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/main/java/com/fortify/samples/riches/restful/XMLUtil.java#L33, end=file:/Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/main/java/com/fortify/samples/riches/restful/XMLUtil.java#L33, message=)])"},{"path":"FindingPath(locations=[Location(start=file:/Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/main/java/com/fortify/samples/riches/oper/AdminUtil.java#L123, end=file:/Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/main/java/com/fortify/samples/riches/oper/AdminUtil.java#L123, message=), Location(start=file:/Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/main/java/com/fortify/samples/riches/oper/AdminUtil.java#L53, end=file:/Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/main/java/com/fortify/samples/riches/oper/AdminUtil.java#L53, message=)])"},{"path":"FindingPath(locations=[Location(start=file:/Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/main/java/com/fortify/samples/riches/oper/AdminUtil.java#L130, end=file:/Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/main/java/com/fortify/samples/riches/oper/AdminUtil.java#L130, message=), Location(start=file:/Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/main/java/com/fortify/samples/riches/oper/AdminUtil.java#L53, end=file:/Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/main/java/com/fortify/samples/riches/oper/AdminUtil.java#L53, message=)])"}],"metadata":{}},"shimError":null,"durationInMs":27067},{"taskId":"arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/3c36d2dd-e012-4e96-aa0f-d8026b8c37ef","jobId":"86d4e422-cb19-4d08-8a3b-44157c3488c8","shimConfig":{"id":"arn:acat:shim/hostnametypo","name":"HostnameTypoDetection","className":"com.amazonaws.acat.shim.hostnametypo.AcatHostnameTypoDetectionShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/hostnametypodetection/","constraints":{"execTimeInMs":1800000,"cpuTimeInMs":1800000,"residentMemoryInByte":1073741824}},"assetContainer":{"@type":".SimpleDirectoryAssetContainer","root":"file:///Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/","type":"SimpleDirectory","assets":[{"@ref":"3"}]},"status":"SUCCESS","statusMessage":null,"findingIds":[],"analysisMetadata":{"analyzedFilesProvided":true,"analyzedFiles":[],"metadata":{}},"shimError":null,"durationInMs":6100},{"taskId":"arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/2ae7fe64-9b76-41fb-a3a1-1829b087d959","jobId":"86d4e422-cb19-4d08-8a3b-44157c3488c8","shimConfig":{"id":"arn:acat:shim/bandit","name":"Bandit","className":"com.amazonaws.acat.shim.bandit.AcatBanditShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/bandit/","constraints":{"execTimeInMs":3600000,"cpuTimeInMs":3600000,"residentMemoryInByte":536870912}},"assetContainer":{"@type":".SimpleDirectoryAssetContainer","root":"file:///Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/","type":"SimpleDirectory","assets":[{"@ref":"3"}]},"status":"SKIPPED","statusMessage":"This shim does not run on the current platform: MAC_OS_X. Supported platforms for this shim are: [LINUX]","findingIds":[],"analysisMetadata":{"analyzedFilesProvided":false,"analyzedFiles":[],"metadata":{}},"shimError":null,"durationInMs":5286},{"taskId":"arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/2c6d6d1d-3a27-4668-b4b2-f7eb6bf3fc80","jobId":"86d4e422-cb19-4d08-8a3b-44157c3488c8","shimConfig":{"id":"arn:acat:shim/dragonstone","name":"dragonstone","className":"com.amazonaws.acat.shim.dragonstone.AcatDragonstoneShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/dragonstone/","constraints":{"execTimeInMs":90000,"cpuTimeInMs":90000,"residentMemoryInByte":10737418240}},"assetContainer":{"@type":".SimpleDirectoryAssetContainer","root":"file:///Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/","type":"SimpleDirectory","assets":[{"@ref":"3"}]},"status":"SKIPPED","statusMessage":"This shim does not run on the current platform: MAC_OS_X. Supported platforms for this shim are: [LINUX]","findingIds":[],"analysisMetadata":{"analyzedFilesProvided":false,"analyzedFiles":[],"metadata":{}},"shimError":null,"durationInMs":7225},{"taskId":"arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/75be80fb-3411-4bfe-accd-509fb28e79e3","jobId":"86d4e422-cb19-4d08-8a3b-44157c3488c8","shimConfig":{"id":"arn:acat:shim/binaryscanning","name":"binaryscanning","className":"com.amazonaws.acat.shim.binaryscanning.AcatBinaryScanningShim","configPath":"file:///Users/sanghyou/.toolbox/tools/acat-cli/1.1.36781.0/var/profile_storage/extracted_objects/acatcli_prod_2023-10-31_21-47-14.195Z.zip/acatcli_prod_2023-10-31_21-47-14.195Z/configs/analyzers/binaryscanning/","constraints":{"execTimeInMs":2700000,"cpuTimeInMs":2700000,"residentMemoryInByte":1073741824}},"assetContainer":{"@type":".SimpleDirectoryAssetContainer","root":"file:///Users/sanghyou/Projects/SamsungSDS/training-and-education/monolith-to-microservices/m2m-travelbuddy/applications/RichesBank/build/src/","type":"SimpleDirectory","assets":[{"@ref":"3"}]},"status":"SKIPPED","statusMessage":"This shim does not run on the current platform: MAC_OS_X. Supported platforms for this shim are: [LINUX]","findingIds":[],"analysisMetadata":{"analyzedFilesProvided":false,"analyzedFiles":[],"metadata":{}},"shimError":null,"durationInMs":5131}],"findings":[{"findingId":"arn:aws:acat:finding:::f2061d9d-7a14-42e3-9913-1e894667a8a7","jobId":"86d4e422-cb19-4d08-8a3b-44157c3488c8","taskId":"arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/615f1dac-8667-485b-991e-6731ad46e213","assetLocations":[{"asset":{"@ref":"3"},"path":"main/java/com/fortify/samples/riches/PerformTransfer.java","startLine":39,"endLine":39,"message":"","additionalInfo":""}],"ruleId":"bosco/java-weak-cipher","confidence":"HIGH","codeFingerprint":"Fingerprint(fingerprintVersions={2019-12-02=75e7880c8b74c585e9ae94b6b77c7958363072b4c5e64ff6cbd98e9d8a405aba})","vulnerability":"Weak cipher","remediation":"Use approved ciphers.\nPlease see the following: https://www.aristotle.a2z.com/implementations/234 https://www.aristotle.a2z.com/recommendations/17","findingMetadata":{},"importance":"HIGH","codeFingerprintId":{"fingerprintVersions":{"2019-12-02":"75e7880c8b74c585e9ae94b6b77c7958363072b4c5e64ff6cbd98e9d8a405aba"}}},{"findingId":"arn:aws:acat:finding:::a4807269-8530-4652-ba6c-b77774c96912","jobId":"86d4e422-cb19-4d08-8a3b-44157c3488c8","taskId":"arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/615f1dac-8667-485b-991e-6731ad46e213","assetLocations":[{"asset":{"@ref":"3"},"path":"main/java/com/fortify/samples/riches/PerformTransfer.java","startLine":47,"endLine":47,"message":"","additionalInfo":""}],"ruleId":"bosco/java-weak-cipher","confidence":"HIGH","codeFingerprint":"Fingerprint(fingerprintVersions={2019-12-02=75e7880c8b74c585e9ae94b6b77c7958363072b4c5e64ff6cbd98e9d8a405aba})","vulnerability":"Weak cipher","remediation":"Use approved ciphers.\nPlease see the following: https://www.aristotle.a2z.com/implementations/234 https://www.aristotle.a2z.com/recommendations/17","findingMetadata":{},"importance":"HIGH","codeFingerprintId":{"fingerprintVersions":{"2019-12-02":"75e7880c8b74c585e9ae94b6b77c7958363072b4c5e64ff6cbd98e9d8a405aba"}}},{"findingId":"arn:aws:acat:finding:::a1321790-c788-4ce8-bf8e-e39c0eb4d975","jobId":"86d4e422-cb19-4d08-8a3b-44157c3488c8","taskId":"arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/615f1dac-8667-485b-991e-6731ad46e213","assetLocations":[{"asset":{"@ref":"3"},"path":"main/java/com/fortify/samples/riches/PerformCheck.java","startLine":24,"endLine":24,"message":"","additionalInfo":""}],"ruleId":"bosco/java-weak-cipher","confidence":"HIGH","codeFingerprint":"Fingerprint(fingerprintVersions={2019-12-02=75e7880c8b74c585e9ae94b6b77c7958363072b4c5e64ff6cbd98e9d8a405aba})","vulnerability":"Weak cipher","remediation":"Use approved ciphers.\nPlease see the following: https://www.aristotle.a2z.com/implementations/234 https://www.aristotle.a2z.com/recommendations/17","findingMetadata":{},"importance":"HIGH","codeFingerprintId":{"fingerprintVersions":{"2019-12-02":"75e7880c8b74c585e9ae94b6b77c7958363072b4c5e64ff6cbd98e9d8a405aba"}}},{"findingId":"arn:aws:acat:finding:::081b4d2d-10e6-433d-9c2e-968b3310c357","jobId":"86d4e422-cb19-4d08-8a3b-44157c3488c8","taskId":"arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/64f65223-a2fc-42d7-94ce-4b9afea612ff","assetLocations":[{"asset":{"@ref":"3"},"path":"main/java/com/fortify/samples/riches/restful/XMLUtil.java","startLine":33,"endLine":33,"message":"","additionalInfo":""}],"ruleId":"guru/XmlExternalEntityInjection","confidence":"HIGH","codeFingerprint":"Fingerprint(fingerprintVersions={2019-12-02=d1ae6fe79a5c605f4ef594f7111d923c439c769e953b3b11daec71668a80b626})","vulnerability":"Insecure XML parser initialization in Java","remediation":"Configure your Java XML parser to disallow processing of Document Type Definition (DTD) or processing of any external reference in the XML document. For details on how to address this issue for a particular XML parser, please consult  the rule FAQ linked in the finding ticket. Consult your AppSec affinity engineer for approval on downgrading the finding severity from Sev2 to Sev3 in case the input to the parser is coming from trusted source.\n\nPlease see the following: https://www.aristotle.a2z.com/implementations/255 https://www.aristotle.a2z.com/recommendations/174","findingMetadata":{},"importance":"HIGH","codeFingerprintId":{"fingerprintVersions":{"2019-12-02":"d1ae6fe79a5c605f4ef594f7111d923c439c769e953b3b11daec71668a80b626"}}},{"findingId":"arn:aws:acat:finding:::1af7ab79-7c70-4e6b-b618-524d2c90f385","jobId":"86d4e422-cb19-4d08-8a3b-44157c3488c8","taskId":"arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/64f65223-a2fc-42d7-94ce-4b9afea612ff","assetLocations":[{"asset":{"@ref":"3"},"path":"main/java/com/fortify/samples/riches/oper/AdminUtil.java","startLine":123,"endLine":123,"message":"","additionalInfo":""},{"asset":{"@ref":"3"},"path":"main/java/com/fortify/samples/riches/oper/AdminUtil.java","startLine":53,"endLine":53,"message":"","additionalInfo":""}],"ruleId":"guru/SQLInjection","confidence":"HIGH","codeFingerprint":"Fingerprint(fingerprintVersions={2019-12-02=4c263bf89e20a57354e816fb090b42e03ba7e81492520bab151de5a61913191a})","vulnerability":"Improper Neutralization of Input Used in an SQL Command ('SQL Injection')","remediation":"Use prepared statements with parameterized queries whenever possible. Parameterized queries are very useful against SQL injection because they allow the database to distinguish between SQL code and data, regardless of what user input is supplied. Where parameterized queries are not possible, you must apply strict input validation and sanitization.\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/16","findingMetadata":{},"importance":"HIGH","codeFingerprintId":{"fingerprintVersions":{"2019-12-02":"4c263bf89e20a57354e816fb090b42e03ba7e81492520bab151de5a61913191a"}}},{"findingId":"arn:aws:acat:finding:::925b5108-24b3-4a7a-a81f-20d388d58113","jobId":"86d4e422-cb19-4d08-8a3b-44157c3488c8","taskId":"arn:aws:acat:86d4e422-cb19-4d08-8a3b-44157c3488c8:task/64f65223-a2fc-42d7-94ce-4b9afea612ff","assetLocations":[{"asset":{"@ref":"3"},"path":"main/java/com/fortify/samples/riches/oper/AdminUtil.java","startLine":130,"endLine":130,"message":"","additionalInfo":""},{"asset":{"@ref":"3"},"path":"main/java/com/fortify/samples/riches/oper/AdminUtil.java","startLine":53,"endLine":53,"message":"","additionalInfo":""}],"ruleId":"guru/SQLInjection","confidence":"HIGH","codeFingerprint":"Fingerprint(fingerprintVersions={2019-12-02=6ed37f7d218f0e85ef11ed994f3405357b3b1755fde96fc5e756ac8cebd30f2b})","vulnerability":"Improper Neutralization of Input Used in an SQL Command ('SQL Injection')","remediation":"Use prepared statements with parameterized queries whenever possible. Parameterized queries are very useful against SQL injection because they allow the database to distinguish between SQL code and data, regardless of what user input is supplied. Where parameterized queries are not possible, you must apply strict input validation and sanitization.\n\nPlease see the following: https://www.aristotle.a2z.com/recommendations/16","findingMetadata":{},"importance":"HIGH","codeFingerprintId":{"fingerprintVersions":{"2019-12-02":"6ed37f7d218f0e85ef11ed994f3405357b3b1755fde96fc5e756ac8cebd30f2b"}}}]},"filteredRulesSummary":"154 rules executed, 0 rules ignored.","ignoredRules":{"ruleList":[]},"notUsefulFindings":{"fingerprintList":[]},"filteredFindingsSummary":"0 findings ignored due to findings and rule filters.","filteredFindings":[]}